// Copyright (c) Mondoo, Inc.
// SPDX-License-Identifier: BUSL-1.1

import "../os/os.lr"
import "../core/core.lr"

option go_package = "go.mondoo.com/cnquery/resources/packs/k8s"

// Kubernetes cluster
k8s {
  // Cluster Version
  serverVersion() dict
  // Kubernetes PodSecurityPolicy's
  podSecurityPolicies() []k8s.podsecuritypolicy
  // Config Maps
  configmaps() []k8s.configmap
  // Kubernetes Services
  services() []k8s.service
  // Kubernetes Network Policies
  networkPolicies() []k8s.networkpolicy
  // Kubernetes Service Accounts
  serviceaccounts() []k8s.serviceaccount
  // Kubernetes RBAC Cluster Roles
  clusterroles() []k8s.rbac.clusterrole
  // Kubernetes RBAC Roles
  roles() []k8s.rbac.role
  // Kubernetes RBAC Cluster Role Bindings
  clusterrolebindings() []k8s.rbac.clusterrolebinding
  // Kubernetes RBAC Role Bindings
  rolebindings() []k8s.rbac.rolebinding
  // Kubernetes custom resources
  customresources() []k8s.customresource
  // Kubernetes Ingresses
  ingresses() []k8s.ingress
}

// Kubernetes Kubelet configuration
private k8s.kubelet {
  // Kubelet config file
  configFile core.file
  // Kubelet process
  process core.process
  // Combination of config file parameters and cli parameters
  configuration dict
}

// Kubernetes PodSecurityPolicy (deprecated as of Kubernetes v1.21)
private k8s.podsecuritypolicy {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Policy Spec
  spec dict
}

// Kubernetes ConfigMap
private k8s.configmap @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Configuration data
  data map[string]string
}

// Kubernetes Service
private k8s.service @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Service Spec
  spec dict
}

// Kubernetes Ingress Resource Backend
private k8s.ingressresourceref @defaults("name kind") {
  // Mondoo ID for Object
  id string
  // APIGroup specified as part of the resource reference
  apiGroup string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Name
  name string
}

// Kubernetes Ingress Service Backend
private k8s.ingressservicebackend @defaults("name") {
  // Mondoo ID for Object
  id string
  // Kubernetes Service Name
  name string
  // Kubernetes Service Port Name
  portName string
  // Kubernetes Service Port Number
  portNumber int
}

// Kubernetes Ingress Backend
private k8s.ingressbackend @defaults("name") {
  // Mondoo ID for Object
  id string
  // Kubernetes Service for Ingress Backend
  service k8s.ingressservicebackend
  // Kubernetes Resource Reference for Ingress Backend
  resourceRef k8s.ingressresourceref
}

// Kubernetes Ingress HTTP Rule
private k8s.ingresshttprulepath {
  // Mondoo ID for Object
  id string
  // HTTP path for Ingress Rule
  path string
  // PathType for Ingress Rule
  pathType string
  // Backend to forward matching Ingress Traffic
  backend k8s.ingressbackend
}

// Kubernetes Ingress Rule
private k8s.ingressrule {
  // Mondoo ID for Object
  id string
  // Hostname to match for Ingress Rule
  host string
  // HTTP paths to managed Ingress for
  httpPaths []k8s.ingresshttprulepath
}

// Kubernetes Ingress TLS
private k8s.ingresstls {
  // Mondoo ID for Object
  id string
  // List of hosts associated with TLS certificate
  hosts []string
  // Certificates data from TLS Secret
  certificates []core.certificate
}

// Kubernetes Ingress
private k8s.ingress @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Ingress rules
  rules []k8s.ingressrule
  // Ingress TLS data
  tls []k8s.ingresstls
}

// Kubernetes Network Policy
private k8s.networkpolicy @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Network Policy Spec
  spec dict
}

// Kubernetes Service Account
private k8s.serviceaccount @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount
  secrets []dict
  // ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images
  imagePullSecrets []dict
  // AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted
  automountServiceAccountToken bool
}

// Kubernetes ClusterRole
private k8s.rbac.clusterrole @defaults("name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Cluster Role Rules
  rules []dict
  // Cluster Role Aggregation Rule
  aggregationRule dict
}

// Kubernetes Role
private k8s.rbac.role @defaults("name namespace") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Cluster Role Rules
  rules []dict
}

// Kubernetes ClusterRoleBinding
private k8s.rbac.clusterrolebinding @defaults("name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Subjects holds references to the objects the role applies to
  subjects []dict
  // RoleRef can only reference a ClusterRole in the global namespace
  roleRef dict
}

// Kubernetes RoleBinding
private k8s.rbac.rolebinding @defaults("name namespace created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Subjects holds references to the objects the role applies to
  subjects []dict
  // RoleRef can only reference a ClusterRole in the global namespace
  roleRef dict
}

// Kubernetes CustomResource
private k8s.customresource @defaults("name namespace created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
}

// Kubernetes AdmissionReview
k8s.admissionreview {
  // The requested admission
  request() k8s.admissionrequest
}

// Kubernetes AdmissionRequest
private k8s.admissionrequest @defaults("name namespace")  {
  // The name of the object presented in the request
  name string
  // The namespace associated with the request (if any)
  namespace string
  // The operation being performed
  operation string
  // Information about the requesting user
  userInfo() k8s.userinfo
  // The incoming object from the request
  object dict
  // The existing object. Only populated for UPDATE and DELETE requests
  oldObject dict
}

// Kubernetes UserInfo
private k8s.userinfo @defaults("username") {
  // The username of the user
  username string
  // The UID of the user
  uid string
}
