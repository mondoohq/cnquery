// Copyright (c) Mondoo, Inc.
// SPDX-License-Identifier: BUSL-1.1

import "../os/os.lr"
import "../core/core.lr"

option go_package = "go.mondoo.com/cnquery/resources/packs/k8s"

// Kubernetes cluster
k8s {
  // Cluster Version
  serverVersion() dict
  // Kubernetes custom resources
  customresources() []k8s.customresource
}

// Kubernetes Kubelet configuration
private k8s.kubelet {
  // Kubelet config file
  configFile core.file
  // Kubelet process
  process core.process
  // Combination of config file parameters and cli parameters
  configuration dict
}

// Kubernetes CustomResource
private k8s.customresource @defaults("name namespace created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
}

// Kubernetes AdmissionReview
k8s.admissionreview {
  // The requested admission
  request() k8s.admissionrequest
}

// Kubernetes AdmissionRequest
private k8s.admissionrequest @defaults("name namespace")  {
  // The name of the object presented in the request
  name string
  // The namespace associated with the request (if any)
  namespace string
  // The operation being performed
  operation string
  // Information about the requesting user
  userInfo() k8s.userinfo
  // The incoming object from the request
  object dict
  // The existing object. Only populated for UPDATE and DELETE requests
  oldObject dict
}

// Kubernetes UserInfo
private k8s.userinfo @defaults("username") {
  // The username of the user
  username string
  // The UID of the user
  uid string
}
