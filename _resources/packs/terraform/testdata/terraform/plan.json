{
  "format_version": "1.1",
  "terraform_version": "1.2.6",
  "variables": {
    "availability_zone_names": {
      "value": [
        "us-west-1a"
      ]
    },
    "image_id": {
      "value": "ami-0ff8a91507f77f867"
    }
  },
  "planned_values": {
    "outputs": {
      "instance_ip_addr": {
        "sensitive": false
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "aws_iam_policy.policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "description": "My test policy",
            "name": "test_policy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"ec2:Describe*\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "tags": null
          },
          "sensitive_values": {
            "tags_all": {}
          }
        },
        {
          "address": "aws_instance.example",
          "mode": "managed",
          "type": "aws_instance",
          "name": "example",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "ami": "ami-a1b2c3d4",
            "credit_specification": [],
            "get_password_data": false,
            "hibernation": null,
            "iam_instance_profile": null,
            "instance_type": "t2.micro",
            "launch_template": [],
            "source_dest_check": true,
            "tags": null,
            "timeouts": null,
            "volume_tags": null
          },
          "sensitive_values": {
            "capacity_reservation_specification": [],
            "credit_specification": [],
            "ebs_block_device": [],
            "enclave_options": [],
            "ephemeral_block_device": [],
            "ipv6_addresses": [],
            "launch_template": [],
            "metadata_options": [],
            "network_interface": [],
            "root_block_device": [],
            "secondary_private_ips": [],
            "security_groups": [],
            "tags_all": {},
            "vpc_security_group_ids": []
          }
        },
        {
          "address": "aws_security_group_rule.example",
          "mode": "managed",
          "type": "aws_security_group_rule",
          "name": "example",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 2,
          "values": {
            "cidr_blocks": null,
            "description": null,
            "from_port": 0,
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-123456",
            "self": false,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_values": {}
        },
        {
          "address": "google_compute_instance.default",
          "mode": "managed",
          "type": "google_compute_instance",
          "name": "default",
          "provider_name": "registry.terraform.io/hashicorp/google",
          "schema_version": 6,
          "values": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "disk_encryption_key_raw": null,
                "initialize_params": [
                  {
                    "image": "debian-cloud/debian-9"
                  }
                ],
                "mode": "READ_WRITE"
              }
            ],
            "can_ip_forward": false,
            "deletion_protection": false,
            "description": null,
            "desired_status": null,
            "enable_display": null,
            "hostname": null,
            "labels": null,
            "machine_type": "e2-medium",
            "metadata": {
              "enable-oslogin": "true"
            },
            "metadata_startup_script": null,
            "name": "test",
            "network_interface": [
              {
                "access_config": [
                  {
                    "public_ptr_domain_name": null
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "network": "default",
                "nic_type": null,
                "queue_count": null
              }
            ],
            "resource_policies": null,
            "scratch_disk": [
              {
                "interface": "SCSI"
              }
            ],
            "service_account": [],
            "shielded_instance_config": [],
            "tags": null,
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_values": {
            "advanced_machine_features": [],
            "attached_disk": [],
            "boot_disk": [
              {
                "initialize_params": [
                  {
                    "labels": {}
                  }
                ]
              }
            ],
            "confidential_instance_config": [],
            "guest_accelerator": [],
            "metadata": {},
            "network_interface": [
              {
                "access_config": [
                  {}
                ],
                "alias_ip_range": [],
                "ipv6_access_config": []
              }
            ],
            "reservation_affinity": [],
            "scheduling": [],
            "scratch_disk": [
              {}
            ],
            "service_account": [],
            "shielded_instance_config": []
          }
        }
      ],
      "child_modules": [
        {
          "address": "module.consul",
          "child_modules": [
            {
              "resources": [
                {
                  "address": "module.consul.module.consul_servers.aws_autoscaling_group.autoscaling_group",
                  "mode": "managed",
                  "type": "aws_autoscaling_group",
                  "name": "autoscaling_group",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "capacity_rebalance": null,
                    "desired_capacity": 3,
                    "enabled_metrics": null,
                    "force_delete": false,
                    "force_delete_warm_pool": false,
                    "health_check_grace_period": 300,
                    "health_check_type": "EC2",
                    "initial_lifecycle_hook": [],
                    "instance_refresh": [],
                    "launch_template": [],
                    "load_balancers": null,
                    "max_instance_lifetime": null,
                    "max_size": 3,
                    "metrics_granularity": "1Minute",
                    "min_elb_capacity": null,
                    "min_size": 3,
                    "mixed_instances_policy": [],
                    "name_prefix": "consul-example-server",
                    "placement_group": null,
                    "protect_from_scale_in": false,
                    "suspended_processes": null,
                    "tag": [],
                    "tags": [
                      {
                        "key": "Environment",
                        "propagate_at_launch": "true",
                        "value": "development"
                      },
                      {
                        "key": "Name",
                        "propagate_at_launch": "true",
                        "value": "consul-example-server"
                      },
                      {
                        "key": "consul-servers",
                        "propagate_at_launch": "true",
                        "value": "consul-example"
                      }
                    ],
                    "target_group_arns": null,
                    "termination_policies": [
                      "Default"
                    ],
                    "timeouts": null,
                    "vpc_zone_identifier": [
                      "subnet-4ca2252a",
                      "subnet-6045c53f",
                      "subnet-9e189abf",
                      "subnet-ddf3a490",
                      "subnet-ea5a91db",
                      "subnet-ea9ce5e4"
                    ],
                    "wait_for_capacity_timeout": "10m",
                    "wait_for_elb_capacity": null,
                    "warm_pool": []
                  },
                  "sensitive_values": {
                    "availability_zones": [],
                    "initial_lifecycle_hook": [],
                    "instance_refresh": [],
                    "launch_template": [],
                    "mixed_instances_policy": [],
                    "tag": [],
                    "tags": [
                      {},
                      {},
                      {}
                    ],
                    "termination_policies": [
                      false
                    ],
                    "vpc_zone_identifier": [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false
                    ],
                    "warm_pool": []
                  }
                },
                {
                  "address": "module.consul.module.consul_servers.aws_iam_instance_profile.instance_profile[0]",
                  "mode": "managed",
                  "type": "aws_iam_instance_profile",
                  "name": "instance_profile",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "name_prefix": "consul-example-server",
                    "path": "/",
                    "tags": null
                  },
                  "sensitive_values": {
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.consul.module.consul_servers.aws_iam_role.instance_role[0]",
                  "mode": "managed",
                  "type": "aws_iam_role",
                  "name": "instance_role",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                    "description": null,
                    "force_detach_policies": false,
                    "max_session_duration": 3600,
                    "name_prefix": "consul-example-server",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": null
                  },
                  "sensitive_values": {
                    "inline_policy": [],
                    "managed_policy_arns": [],
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.consul.module.consul_servers.aws_launch_configuration.launch_configuration",
                  "mode": "managed",
                  "type": "aws_launch_configuration",
                  "name": "launch_configuration",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "associate_public_ip_address": false,
                    "ebs_optimized": false,
                    "enable_monitoring": true,
                    "ephemeral_block_device": [],
                    "image_id": "ami-003da67569bc1e002",
                    "instance_type": "t2.micro",
                    "name_prefix": "consul-example-server-",
                    "placement_tenancy": null,
                    "root_block_device": [
                      {
                        "delete_on_termination": true,
                        "encrypted": false,
                        "volume_size": 50,
                        "volume_type": "standard"
                      }
                    ],
                    "spot_price": null,
                    "user_data": "bea44523b6e01d16013cc9699c268cc65005f72f",
                    "user_data_base64": null,
                    "vpc_classic_link_id": null,
                    "vpc_classic_link_security_groups": null
                  },
                  "sensitive_values": {
                    "ebs_block_device": [],
                    "ephemeral_block_device": [],
                    "metadata_options": [],
                    "root_block_device": [
                      {}
                    ],
                    "security_groups": []
                  }
                },
                {
                  "address": "module.consul.module.consul_servers.aws_security_group.lc_security_group",
                  "mode": "managed",
                  "type": "aws_security_group",
                  "name": "lc_security_group",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "description": "Security group for the consul-example-server launch configuration",
                    "name_prefix": "consul-example-server",
                    "revoke_rules_on_delete": false,
                    "tags": {
                      "Name": "consul-example-server"
                    },
                    "tags_all": {
                      "Name": "consul-example-server"
                    },
                    "timeouts": null,
                    "vpc_id": "vpc-fcc61581"
                  },
                  "sensitive_values": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.consul.module.consul_servers.aws_security_group_rule.allow_all_outbound",
                  "mode": "managed",
                  "type": "aws_security_group_rule",
                  "name": "allow_all_outbound",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 2,
                  "values": {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": null,
                    "from_port": 0,
                    "ipv6_cidr_blocks": null,
                    "prefix_list_ids": null,
                    "protocol": "-1",
                    "self": false,
                    "to_port": 0,
                    "type": "egress"
                  },
                  "sensitive_values": {
                    "cidr_blocks": [
                      false
                    ]
                  }
                },
                {
                  "address": "module.consul.module.consul_servers.aws_security_group_rule.allow_ssh_inbound[0]",
                  "mode": "managed",
                  "type": "aws_security_group_rule",
                  "name": "allow_ssh_inbound",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 2,
                  "values": {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": null,
                    "from_port": 22,
                    "ipv6_cidr_blocks": null,
                    "prefix_list_ids": null,
                    "protocol": "tcp",
                    "self": false,
                    "to_port": 22,
                    "type": "ingress"
                  },
                  "sensitive_values": {
                    "cidr_blocks": [
                      false
                    ]
                  }
                }
              ],
              "address": "module.consul.module.consul_servers",
              "child_modules": [
                {
                  "resources": [
                    {
                      "address": "module.consul.module.consul_servers.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
                      "mode": "managed",
                      "type": "aws_iam_role_policy",
                      "name": "auto_discover_cluster",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "name": "auto-discover-cluster",
                        "name_prefix": null,
                        "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
                      },
                      "sensitive_values": {}
                    }
                  ],
                  "address": "module.consul.module.consul_servers.module.iam_policies"
                },
                {
                  "resources": [
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_cli_rpc_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8400,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8400,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_cli_rpc_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8400,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8400,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_dns_tcp_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8600,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8600,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_dns_tcp_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8600,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8600,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_dns_udp_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8600,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "udp",
                        "self": false,
                        "to_port": 8600,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_dns_udp_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8600,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "udp",
                        "self": true,
                        "to_port": 8600,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_http_api_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8500,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8500,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_http_api_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8500,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8500,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_serf_wan_tcp_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8302,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8302,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_serf_wan_tcp_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8302,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8302,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_serf_wan_udp_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8302,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "udp",
                        "self": false,
                        "to_port": 8302,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_serf_wan_udp_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8302,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "udp",
                        "self": true,
                        "to_port": 8302,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_server_rpc_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8300,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8300,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_server_rpc_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8300,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8300,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    }
                  ],
                  "address": "module.consul.module.consul_servers.module.security_group_rules",
                  "child_modules": [
                    {
                      "resources": [
                        {
                          "address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]",
                          "mode": "managed",
                          "type": "aws_security_group_rule",
                          "name": "allow_serf_lan_tcp_inbound",
                          "index": 0,
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 2,
                          "values": {
                            "cidr_blocks": [
                              "0.0.0.0/0"
                            ],
                            "description": null,
                            "from_port": 8301,
                            "ipv6_cidr_blocks": null,
                            "prefix_list_ids": null,
                            "protocol": "tcp",
                            "self": false,
                            "to_port": 8301,
                            "type": "ingress"
                          },
                          "sensitive_values": {
                            "cidr_blocks": [
                              false
                            ]
                          }
                        },
                        {
                          "address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
                          "mode": "managed",
                          "type": "aws_security_group_rule",
                          "name": "allow_serf_lan_tcp_inbound_from_self",
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 2,
                          "values": {
                            "cidr_blocks": null,
                            "description": null,
                            "from_port": 8301,
                            "ipv6_cidr_blocks": null,
                            "prefix_list_ids": null,
                            "protocol": "tcp",
                            "self": true,
                            "to_port": 8301,
                            "type": "ingress"
                          },
                          "sensitive_values": {}
                        },
                        {
                          "address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]",
                          "mode": "managed",
                          "type": "aws_security_group_rule",
                          "name": "allow_serf_lan_udp_inbound",
                          "index": 0,
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 2,
                          "values": {
                            "cidr_blocks": [
                              "0.0.0.0/0"
                            ],
                            "description": null,
                            "from_port": 8301,
                            "ipv6_cidr_blocks": null,
                            "prefix_list_ids": null,
                            "protocol": "udp",
                            "self": false,
                            "to_port": 8301,
                            "type": "ingress"
                          },
                          "sensitive_values": {
                            "cidr_blocks": [
                              false
                            ]
                          }
                        },
                        {
                          "address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
                          "mode": "managed",
                          "type": "aws_security_group_rule",
                          "name": "allow_serf_lan_udp_inbound_from_self",
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 2,
                          "values": {
                            "cidr_blocks": null,
                            "description": null,
                            "from_port": 8301,
                            "ipv6_cidr_blocks": null,
                            "prefix_list_ids": null,
                            "protocol": "udp",
                            "self": true,
                            "to_port": 8301,
                            "type": "ingress"
                          },
                          "sensitive_values": {}
                        }
                      ],
                      "address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules"
                    }
                  ]
                }
              ]
            },
            {
              "resources": [
                {
                  "address": "module.consul.module.consul_clients.aws_autoscaling_group.autoscaling_group",
                  "mode": "managed",
                  "type": "aws_autoscaling_group",
                  "name": "autoscaling_group",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "capacity_rebalance": null,
                    "desired_capacity": 6,
                    "enabled_metrics": null,
                    "force_delete": false,
                    "force_delete_warm_pool": false,
                    "health_check_grace_period": 300,
                    "health_check_type": "EC2",
                    "initial_lifecycle_hook": [],
                    "instance_refresh": [],
                    "launch_template": [],
                    "load_balancers": null,
                    "max_instance_lifetime": null,
                    "max_size": 6,
                    "metrics_granularity": "1Minute",
                    "min_elb_capacity": null,
                    "min_size": 6,
                    "mixed_instances_policy": [],
                    "name_prefix": "consul-example-client",
                    "placement_group": null,
                    "protect_from_scale_in": false,
                    "suspended_processes": null,
                    "tag": [],
                    "tags": [
                      {
                        "key": "Name",
                        "propagate_at_launch": "true",
                        "value": "consul-example-client"
                      },
                      {
                        "key": "consul-clients",
                        "propagate_at_launch": "true",
                        "value": "consul-example"
                      }
                    ],
                    "target_group_arns": null,
                    "termination_policies": [
                      "Default"
                    ],
                    "timeouts": null,
                    "vpc_zone_identifier": [
                      "subnet-4ca2252a",
                      "subnet-6045c53f",
                      "subnet-9e189abf",
                      "subnet-ddf3a490",
                      "subnet-ea5a91db",
                      "subnet-ea9ce5e4"
                    ],
                    "wait_for_capacity_timeout": "10m",
                    "wait_for_elb_capacity": null,
                    "warm_pool": []
                  },
                  "sensitive_values": {
                    "availability_zones": [],
                    "initial_lifecycle_hook": [],
                    "instance_refresh": [],
                    "launch_template": [],
                    "mixed_instances_policy": [],
                    "tag": [],
                    "tags": [
                      {},
                      {}
                    ],
                    "termination_policies": [
                      false
                    ],
                    "vpc_zone_identifier": [
                      false,
                      false,
                      false,
                      false,
                      false,
                      false
                    ],
                    "warm_pool": []
                  }
                },
                {
                  "address": "module.consul.module.consul_clients.aws_iam_instance_profile.instance_profile[0]",
                  "mode": "managed",
                  "type": "aws_iam_instance_profile",
                  "name": "instance_profile",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "name_prefix": "consul-example-client",
                    "path": "/",
                    "tags": null
                  },
                  "sensitive_values": {
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.consul.module.consul_clients.aws_iam_role.instance_role[0]",
                  "mode": "managed",
                  "type": "aws_iam_role",
                  "name": "instance_role",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                    "description": null,
                    "force_detach_policies": false,
                    "max_session_duration": 3600,
                    "name_prefix": "consul-example-client",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": null
                  },
                  "sensitive_values": {
                    "inline_policy": [],
                    "managed_policy_arns": [],
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.consul.module.consul_clients.aws_launch_configuration.launch_configuration",
                  "mode": "managed",
                  "type": "aws_launch_configuration",
                  "name": "launch_configuration",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 0,
                  "values": {
                    "associate_public_ip_address": false,
                    "ebs_optimized": false,
                    "enable_monitoring": true,
                    "ephemeral_block_device": [],
                    "image_id": "ami-003da67569bc1e002",
                    "instance_type": "t2.micro",
                    "name_prefix": "consul-example-client-",
                    "placement_tenancy": null,
                    "root_block_device": [
                      {
                        "delete_on_termination": true,
                        "encrypted": false,
                        "volume_size": 50,
                        "volume_type": "standard"
                      }
                    ],
                    "spot_price": null,
                    "user_data": "97e031d0aa6d1e6b2cd1838301fbecde7751eefb",
                    "user_data_base64": null,
                    "vpc_classic_link_id": null,
                    "vpc_classic_link_security_groups": null
                  },
                  "sensitive_values": {
                    "ebs_block_device": [],
                    "ephemeral_block_device": [],
                    "metadata_options": [],
                    "root_block_device": [
                      {}
                    ],
                    "security_groups": []
                  }
                },
                {
                  "address": "module.consul.module.consul_clients.aws_security_group.lc_security_group",
                  "mode": "managed",
                  "type": "aws_security_group",
                  "name": "lc_security_group",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 1,
                  "values": {
                    "description": "Security group for the consul-example-client launch configuration",
                    "name_prefix": "consul-example-client",
                    "revoke_rules_on_delete": false,
                    "tags": {
                      "Name": "consul-example-client"
                    },
                    "tags_all": {
                      "Name": "consul-example-client"
                    },
                    "timeouts": null,
                    "vpc_id": "vpc-fcc61581"
                  },
                  "sensitive_values": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {}
                  }
                },
                {
                  "address": "module.consul.module.consul_clients.aws_security_group_rule.allow_all_outbound",
                  "mode": "managed",
                  "type": "aws_security_group_rule",
                  "name": "allow_all_outbound",
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 2,
                  "values": {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": null,
                    "from_port": 0,
                    "ipv6_cidr_blocks": null,
                    "prefix_list_ids": null,
                    "protocol": "-1",
                    "self": false,
                    "to_port": 0,
                    "type": "egress"
                  },
                  "sensitive_values": {
                    "cidr_blocks": [
                      false
                    ]
                  }
                },
                {
                  "address": "module.consul.module.consul_clients.aws_security_group_rule.allow_ssh_inbound[0]",
                  "mode": "managed",
                  "type": "aws_security_group_rule",
                  "name": "allow_ssh_inbound",
                  "index": 0,
                  "provider_name": "registry.terraform.io/hashicorp/aws",
                  "schema_version": 2,
                  "values": {
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "description": null,
                    "from_port": 22,
                    "ipv6_cidr_blocks": null,
                    "prefix_list_ids": null,
                    "protocol": "tcp",
                    "self": false,
                    "to_port": 22,
                    "type": "ingress"
                  },
                  "sensitive_values": {
                    "cidr_blocks": [
                      false
                    ]
                  }
                }
              ],
              "address": "module.consul.module.consul_clients",
              "child_modules": [
                {
                  "resources": [
                    {
                      "address": "module.consul.module.consul_clients.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
                      "mode": "managed",
                      "type": "aws_iam_role_policy",
                      "name": "auto_discover_cluster",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 0,
                      "values": {
                        "name": "auto-discover-cluster",
                        "name_prefix": null,
                        "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
                      },
                      "sensitive_values": {}
                    }
                  ],
                  "address": "module.consul.module.consul_clients.module.iam_policies"
                },
                {
                  "resources": [
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_cli_rpc_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8400,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8400,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_cli_rpc_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8400,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8400,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_dns_tcp_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8600,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8600,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_dns_tcp_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8600,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8600,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_dns_udp_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8600,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "udp",
                        "self": false,
                        "to_port": 8600,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_dns_udp_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8600,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "udp",
                        "self": true,
                        "to_port": 8600,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_http_api_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8500,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8500,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_http_api_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8500,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8500,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_serf_wan_tcp_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8302,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8302,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_serf_wan_tcp_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8302,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8302,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_serf_wan_udp_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8302,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "udp",
                        "self": false,
                        "to_port": 8302,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_serf_wan_udp_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8302,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "udp",
                        "self": true,
                        "to_port": 8302,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_server_rpc_inbound",
                      "index": 0,
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": [
                          "0.0.0.0/0"
                        ],
                        "description": null,
                        "from_port": 8300,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": false,
                        "to_port": 8300,
                        "type": "ingress"
                      },
                      "sensitive_values": {
                        "cidr_blocks": [
                          false
                        ]
                      }
                    },
                    {
                      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_server_rpc_inbound_from_self",
                      "provider_name": "registry.terraform.io/hashicorp/aws",
                      "schema_version": 2,
                      "values": {
                        "cidr_blocks": null,
                        "description": null,
                        "from_port": 8300,
                        "ipv6_cidr_blocks": null,
                        "prefix_list_ids": null,
                        "protocol": "tcp",
                        "self": true,
                        "to_port": 8300,
                        "type": "ingress"
                      },
                      "sensitive_values": {}
                    }
                  ],
                  "address": "module.consul.module.consul_clients.module.security_group_rules",
                  "child_modules": [
                    {
                      "resources": [
                        {
                          "address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]",
                          "mode": "managed",
                          "type": "aws_security_group_rule",
                          "name": "allow_serf_lan_tcp_inbound",
                          "index": 0,
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 2,
                          "values": {
                            "cidr_blocks": [
                              "0.0.0.0/0"
                            ],
                            "description": null,
                            "from_port": 8301,
                            "ipv6_cidr_blocks": null,
                            "prefix_list_ids": null,
                            "protocol": "tcp",
                            "self": false,
                            "to_port": 8301,
                            "type": "ingress"
                          },
                          "sensitive_values": {
                            "cidr_blocks": [
                              false
                            ]
                          }
                        },
                        {
                          "address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
                          "mode": "managed",
                          "type": "aws_security_group_rule",
                          "name": "allow_serf_lan_tcp_inbound_from_self",
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 2,
                          "values": {
                            "cidr_blocks": null,
                            "description": null,
                            "from_port": 8301,
                            "ipv6_cidr_blocks": null,
                            "prefix_list_ids": null,
                            "protocol": "tcp",
                            "self": true,
                            "to_port": 8301,
                            "type": "ingress"
                          },
                          "sensitive_values": {}
                        },
                        {
                          "address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]",
                          "mode": "managed",
                          "type": "aws_security_group_rule",
                          "name": "allow_serf_lan_udp_inbound",
                          "index": 0,
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 2,
                          "values": {
                            "cidr_blocks": [
                              "0.0.0.0/0"
                            ],
                            "description": null,
                            "from_port": 8301,
                            "ipv6_cidr_blocks": null,
                            "prefix_list_ids": null,
                            "protocol": "udp",
                            "self": false,
                            "to_port": 8301,
                            "type": "ingress"
                          },
                          "sensitive_values": {
                            "cidr_blocks": [
                              false
                            ]
                          }
                        },
                        {
                          "address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
                          "mode": "managed",
                          "type": "aws_security_group_rule",
                          "name": "allow_serf_lan_udp_inbound_from_self",
                          "provider_name": "registry.terraform.io/hashicorp/aws",
                          "schema_version": 2,
                          "values": {
                            "cidr_blocks": null,
                            "description": null,
                            "from_port": 8301,
                            "ipv6_cidr_blocks": null,
                            "prefix_list_ids": null,
                            "protocol": "udp",
                            "self": true,
                            "to_port": 8301,
                            "type": "ingress"
                          },
                          "sensitive_values": {}
                        }
                      ],
                      "address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "aws_iam_policy.policy",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "policy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "My test policy",
          "name": "test_policy",
          "name_prefix": null,
          "path": "/",
          "policy": "{\"Statement\":[{\"Action\":[\"ec2:Describe*\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "policy_id": true,
          "tags_all": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_instance.example",
      "mode": "managed",
      "type": "aws_instance",
      "name": "example",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "ami": "ami-a1b2c3d4",
          "credit_specification": [],
          "get_password_data": false,
          "hibernation": null,
          "iam_instance_profile": null,
          "instance_type": "t2.micro",
          "launch_template": [],
          "source_dest_check": true,
          "tags": null,
          "timeouts": null,
          "volume_tags": null
        },
        "after_unknown": {
          "arn": true,
          "associate_public_ip_address": true,
          "availability_zone": true,
          "capacity_reservation_specification": true,
          "cpu_core_count": true,
          "cpu_threads_per_core": true,
          "credit_specification": [],
          "disable_api_termination": true,
          "ebs_block_device": true,
          "ebs_optimized": true,
          "enclave_options": true,
          "ephemeral_block_device": true,
          "host_id": true,
          "id": true,
          "instance_initiated_shutdown_behavior": true,
          "instance_state": true,
          "ipv6_address_count": true,
          "ipv6_addresses": true,
          "key_name": true,
          "launch_template": [],
          "metadata_options": true,
          "monitoring": true,
          "network_interface": true,
          "outpost_arn": true,
          "password_data": true,
          "placement_group": true,
          "placement_partition_number": true,
          "primary_network_interface_id": true,
          "private_dns": true,
          "private_ip": true,
          "public_dns": true,
          "public_ip": true,
          "root_block_device": true,
          "secondary_private_ips": true,
          "security_groups": true,
          "subnet_id": true,
          "tags_all": true,
          "tenancy": true,
          "user_data": true,
          "user_data_base64": true,
          "vpc_security_group_ids": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "capacity_reservation_specification": [],
          "credit_specification": [],
          "ebs_block_device": [],
          "enclave_options": [],
          "ephemeral_block_device": [],
          "ipv6_addresses": [],
          "launch_template": [],
          "metadata_options": [],
          "network_interface": [],
          "root_block_device": [],
          "secondary_private_ips": [],
          "security_groups": [],
          "tags_all": {},
          "vpc_security_group_ids": []
        }
      }
    },
    {
      "address": "aws_security_group_rule.example",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "example",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 0,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "security_group_id": "sg-123456",
          "self": false,
          "to_port": 65535,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "google_compute_instance.default",
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "default",
      "provider_name": "registry.terraform.io/hashicorp/google",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "advanced_machine_features": [],
          "allow_stopping_for_update": null,
          "attached_disk": [],
          "boot_disk": [
            {
              "auto_delete": true,
              "disk_encryption_key_raw": null,
              "initialize_params": [
                {
                  "image": "debian-cloud/debian-9"
                }
              ],
              "mode": "READ_WRITE"
            }
          ],
          "can_ip_forward": false,
          "deletion_protection": false,
          "description": null,
          "desired_status": null,
          "enable_display": null,
          "hostname": null,
          "labels": null,
          "machine_type": "e2-medium",
          "metadata": {
            "enable-oslogin": "true"
          },
          "metadata_startup_script": null,
          "name": "test",
          "network_interface": [
            {
              "access_config": [
                {
                  "public_ptr_domain_name": null
                }
              ],
              "alias_ip_range": [],
              "ipv6_access_config": [],
              "network": "default",
              "nic_type": null,
              "queue_count": null
            }
          ],
          "resource_policies": null,
          "scratch_disk": [
            {
              "interface": "SCSI"
            }
          ],
          "service_account": [],
          "shielded_instance_config": [],
          "tags": null,
          "timeouts": null,
          "zone": "us-central1-a"
        },
        "after_unknown": {
          "advanced_machine_features": [],
          "attached_disk": [],
          "boot_disk": [
            {
              "device_name": true,
              "disk_encryption_key_sha256": true,
              "initialize_params": [
                {
                  "labels": true,
                  "size": true,
                  "type": true
                }
              ],
              "kms_key_self_link": true,
              "source": true
            }
          ],
          "confidential_instance_config": true,
          "cpu_platform": true,
          "current_status": true,
          "guest_accelerator": true,
          "id": true,
          "instance_id": true,
          "label_fingerprint": true,
          "metadata": {},
          "metadata_fingerprint": true,
          "min_cpu_platform": true,
          "network_interface": [
            {
              "access_config": [
                {
                  "nat_ip": true,
                  "network_tier": true
                }
              ],
              "alias_ip_range": [],
              "ipv6_access_config": [],
              "ipv6_access_type": true,
              "name": true,
              "network_ip": true,
              "stack_type": true,
              "subnetwork": true,
              "subnetwork_project": true
            }
          ],
          "project": true,
          "reservation_affinity": true,
          "scheduling": true,
          "scratch_disk": [
            {}
          ],
          "self_link": true,
          "service_account": [],
          "shielded_instance_config": [],
          "tags_fingerprint": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "advanced_machine_features": [],
          "attached_disk": [],
          "boot_disk": [
            {
              "disk_encryption_key_raw": true,
              "initialize_params": [
                {
                  "labels": {}
                }
              ]
            }
          ],
          "confidential_instance_config": [],
          "guest_accelerator": [],
          "metadata": {},
          "network_interface": [
            {
              "access_config": [
                {}
              ],
              "alias_ip_range": [],
              "ipv6_access_config": []
            }
          ],
          "reservation_affinity": [],
          "scheduling": [],
          "scratch_disk": [
            {}
          ],
          "service_account": [],
          "shielded_instance_config": []
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.aws_autoscaling_group.autoscaling_group",
      "module_address": "module.consul.module.consul_clients",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "autoscaling_group",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "capacity_rebalance": null,
          "desired_capacity": 6,
          "enabled_metrics": null,
          "force_delete": false,
          "force_delete_warm_pool": false,
          "health_check_grace_period": 300,
          "health_check_type": "EC2",
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "load_balancers": null,
          "max_instance_lifetime": null,
          "max_size": 6,
          "metrics_granularity": "1Minute",
          "min_elb_capacity": null,
          "min_size": 6,
          "mixed_instances_policy": [],
          "name_prefix": "consul-example-client",
          "placement_group": null,
          "protect_from_scale_in": false,
          "suspended_processes": null,
          "tag": [],
          "tags": [
            {
              "key": "Name",
              "propagate_at_launch": "true",
              "value": "consul-example-client"
            },
            {
              "key": "consul-clients",
              "propagate_at_launch": "true",
              "value": "consul-example"
            }
          ],
          "target_group_arns": null,
          "termination_policies": [
            "Default"
          ],
          "timeouts": null,
          "vpc_zone_identifier": [
            "subnet-4ca2252a",
            "subnet-6045c53f",
            "subnet-9e189abf",
            "subnet-ddf3a490",
            "subnet-ea5a91db",
            "subnet-ea9ce5e4"
          ],
          "wait_for_capacity_timeout": "10m",
          "wait_for_elb_capacity": null,
          "warm_pool": []
        },
        "after_unknown": {
          "arn": true,
          "availability_zones": true,
          "default_cooldown": true,
          "id": true,
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_configuration": true,
          "launch_template": [],
          "mixed_instances_policy": [],
          "name": true,
          "service_linked_role_arn": true,
          "tag": [],
          "tags": [
            {},
            {}
          ],
          "termination_policies": [
            false
          ],
          "vpc_zone_identifier": [
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "warm_pool": []
        },
        "before_sensitive": false,
        "after_sensitive": {
          "availability_zones": [],
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "mixed_instances_policy": [],
          "tag": [],
          "tags": [
            {},
            {}
          ],
          "termination_policies": [
            false
          ],
          "vpc_zone_identifier": [
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "warm_pool": []
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.aws_iam_instance_profile.instance_profile[0]",
      "module_address": "module.consul.module.consul_clients",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "instance_profile",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name_prefix": "consul-example-client",
          "path": "/",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "name": true,
          "role": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.aws_iam_role.instance_role[0]",
      "module_address": "module.consul.module.consul_clients",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "instance_role",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
          "description": null,
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name_prefix": "consul-example-client",
          "path": "/",
          "permissions_boundary": null,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "name": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.aws_launch_configuration.launch_configuration",
      "module_address": "module.consul.module.consul_clients",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "launch_configuration",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "associate_public_ip_address": false,
          "ebs_optimized": false,
          "enable_monitoring": true,
          "ephemeral_block_device": [],
          "image_id": "ami-003da67569bc1e002",
          "instance_type": "t2.micro",
          "name_prefix": "consul-example-client-",
          "placement_tenancy": null,
          "root_block_device": [
            {
              "delete_on_termination": true,
              "encrypted": false,
              "volume_size": 50,
              "volume_type": "standard"
            }
          ],
          "spot_price": null,
          "user_data": "97e031d0aa6d1e6b2cd1838301fbecde7751eefb",
          "user_data_base64": null,
          "vpc_classic_link_id": null,
          "vpc_classic_link_security_groups": null
        },
        "after_unknown": {
          "arn": true,
          "ebs_block_device": true,
          "ephemeral_block_device": [],
          "iam_instance_profile": true,
          "id": true,
          "key_name": true,
          "metadata_options": true,
          "name": true,
          "root_block_device": [
            {
              "iops": true,
              "throughput": true
            }
          ],
          "security_groups": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "ebs_block_device": [],
          "ephemeral_block_device": [],
          "metadata_options": [],
          "root_block_device": [
            {}
          ],
          "security_groups": []
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.aws_security_group.lc_security_group",
      "module_address": "module.consul.module.consul_clients",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "lc_security_group",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Security group for the consul-example-client launch configuration",
          "name_prefix": "consul-example-client",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "consul-example-client"
          },
          "tags_all": {
            "Name": "consul-example-client"
          },
          "timeouts": null,
          "vpc_id": "vpc-fcc61581"
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": true,
          "name": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.aws_security_group_rule.allow_all_outbound",
      "module_address": "module.consul.module.consul_clients",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_all_outbound",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 0,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "-1",
          "self": false,
          "to_port": 0,
          "type": "egress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.aws_security_group_rule.allow_ssh_inbound[0]",
      "module_address": "module.consul.module.consul_clients",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_ssh_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 22,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 22,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
      "module_address": "module.consul.module.consul_clients.module.iam_policies",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "auto_discover_cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name": "auto-discover-cluster",
          "name_prefix": null,
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
        },
        "after_unknown": {
          "id": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_cli_rpc_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8400,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8400,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_cli_rpc_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8400,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8400,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_dns_tcp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8600,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8600,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_dns_tcp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8600,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8600,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_dns_udp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8600,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": false,
          "to_port": 8600,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_dns_udp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8600,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": true,
          "to_port": 8600,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_http_api_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8500,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8500,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_http_api_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8500,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8500,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_wan_tcp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8302,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8302,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_wan_tcp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8302,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8302,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_wan_udp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8302,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": false,
          "to_port": 8302,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_wan_udp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8302,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": true,
          "to_port": 8302,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_server_rpc_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8300,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8300,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_server_rpc_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8300,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8300,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_lan_tcp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8301,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8301,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_lan_tcp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8301,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8301,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_lan_udp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8301,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": false,
          "to_port": 8301,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
      "module_address": "module.consul.module.consul_clients.module.security_group_rules.module.client_security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_lan_udp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8301,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": true,
          "to_port": 8301,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.aws_autoscaling_group.autoscaling_group",
      "module_address": "module.consul.module.consul_servers",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "autoscaling_group",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "capacity_rebalance": null,
          "desired_capacity": 3,
          "enabled_metrics": null,
          "force_delete": false,
          "force_delete_warm_pool": false,
          "health_check_grace_period": 300,
          "health_check_type": "EC2",
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "load_balancers": null,
          "max_instance_lifetime": null,
          "max_size": 3,
          "metrics_granularity": "1Minute",
          "min_elb_capacity": null,
          "min_size": 3,
          "mixed_instances_policy": [],
          "name_prefix": "consul-example-server",
          "placement_group": null,
          "protect_from_scale_in": false,
          "suspended_processes": null,
          "tag": [],
          "tags": [
            {
              "key": "Environment",
              "propagate_at_launch": "true",
              "value": "development"
            },
            {
              "key": "Name",
              "propagate_at_launch": "true",
              "value": "consul-example-server"
            },
            {
              "key": "consul-servers",
              "propagate_at_launch": "true",
              "value": "consul-example"
            }
          ],
          "target_group_arns": null,
          "termination_policies": [
            "Default"
          ],
          "timeouts": null,
          "vpc_zone_identifier": [
            "subnet-4ca2252a",
            "subnet-6045c53f",
            "subnet-9e189abf",
            "subnet-ddf3a490",
            "subnet-ea5a91db",
            "subnet-ea9ce5e4"
          ],
          "wait_for_capacity_timeout": "10m",
          "wait_for_elb_capacity": null,
          "warm_pool": []
        },
        "after_unknown": {
          "arn": true,
          "availability_zones": true,
          "default_cooldown": true,
          "id": true,
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_configuration": true,
          "launch_template": [],
          "mixed_instances_policy": [],
          "name": true,
          "service_linked_role_arn": true,
          "tag": [],
          "tags": [
            {},
            {},
            {}
          ],
          "termination_policies": [
            false
          ],
          "vpc_zone_identifier": [
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "warm_pool": []
        },
        "before_sensitive": false,
        "after_sensitive": {
          "availability_zones": [],
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "mixed_instances_policy": [],
          "tag": [],
          "tags": [
            {},
            {},
            {}
          ],
          "termination_policies": [
            false
          ],
          "vpc_zone_identifier": [
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "warm_pool": []
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.aws_iam_instance_profile.instance_profile[0]",
      "module_address": "module.consul.module.consul_servers",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "instance_profile",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name_prefix": "consul-example-server",
          "path": "/",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "name": true,
          "role": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.aws_iam_role.instance_role[0]",
      "module_address": "module.consul.module.consul_servers",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "instance_role",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
          "description": null,
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name_prefix": "consul-example-server",
          "path": "/",
          "permissions_boundary": null,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "name": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.aws_launch_configuration.launch_configuration",
      "module_address": "module.consul.module.consul_servers",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "launch_configuration",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "associate_public_ip_address": false,
          "ebs_optimized": false,
          "enable_monitoring": true,
          "ephemeral_block_device": [],
          "image_id": "ami-003da67569bc1e002",
          "instance_type": "t2.micro",
          "name_prefix": "consul-example-server-",
          "placement_tenancy": null,
          "root_block_device": [
            {
              "delete_on_termination": true,
              "encrypted": false,
              "volume_size": 50,
              "volume_type": "standard"
            }
          ],
          "spot_price": null,
          "user_data": "bea44523b6e01d16013cc9699c268cc65005f72f",
          "user_data_base64": null,
          "vpc_classic_link_id": null,
          "vpc_classic_link_security_groups": null
        },
        "after_unknown": {
          "arn": true,
          "ebs_block_device": true,
          "ephemeral_block_device": [],
          "iam_instance_profile": true,
          "id": true,
          "key_name": true,
          "metadata_options": true,
          "name": true,
          "root_block_device": [
            {
              "iops": true,
              "throughput": true
            }
          ],
          "security_groups": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "ebs_block_device": [],
          "ephemeral_block_device": [],
          "metadata_options": [],
          "root_block_device": [
            {}
          ],
          "security_groups": []
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.aws_security_group.lc_security_group",
      "module_address": "module.consul.module.consul_servers",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "lc_security_group",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Security group for the consul-example-server launch configuration",
          "name_prefix": "consul-example-server",
          "revoke_rules_on_delete": false,
          "tags": {
            "Name": "consul-example-server"
          },
          "tags_all": {
            "Name": "consul-example-server"
          },
          "timeouts": null,
          "vpc_id": "vpc-fcc61581"
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": true,
          "name": true,
          "owner_id": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.aws_security_group_rule.allow_all_outbound",
      "module_address": "module.consul.module.consul_servers",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_all_outbound",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 0,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "-1",
          "self": false,
          "to_port": 0,
          "type": "egress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.aws_security_group_rule.allow_ssh_inbound[0]",
      "module_address": "module.consul.module.consul_servers",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_ssh_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 22,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 22,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.iam_policies.aws_iam_role_policy.auto_discover_cluster[0]",
      "module_address": "module.consul.module.consul_servers.module.iam_policies",
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "auto_discover_cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name": "auto-discover-cluster",
          "name_prefix": null,
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
        },
        "after_unknown": {
          "id": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound[0]",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_cli_rpc_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8400,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8400,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_cli_rpc_inbound_from_self",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_cli_rpc_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8400,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8400,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound[0]",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_dns_tcp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8600,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8600,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_dns_tcp_inbound_from_self",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_dns_tcp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8600,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8600,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound[0]",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_dns_udp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8600,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": false,
          "to_port": 8600,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_dns_udp_inbound_from_self",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_dns_udp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8600,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": true,
          "to_port": 8600,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound[0]",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_http_api_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8500,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8500,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_http_api_inbound_from_self",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_http_api_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8500,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8500,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound[0]",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_wan_tcp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8302,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8302,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_wan_tcp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8302,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8302,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound[0]",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_wan_udp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8302,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": false,
          "to_port": 8302,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_wan_udp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8302,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": true,
          "to_port": 8302,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound[0]",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_server_rpc_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8300,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8300,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.aws_security_group_rule.allow_server_rpc_inbound_from_self",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_server_rpc_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8300,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8300,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound[0]",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_lan_tcp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8301,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "to_port": 8301,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_lan_tcp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8301,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": true,
          "to_port": 8301,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound[0]",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_lan_udp_inbound",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": null,
          "from_port": 8301,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": false,
          "to_port": 8301,
          "type": "ingress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules.aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
      "module_address": "module.consul.module.consul_servers.module.security_group_rules.module.client_security_group_rules",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "allow_serf_lan_udp_inbound_from_self",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": null,
          "from_port": 8301,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "udp",
          "self": true,
          "to_port": 8301,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    }
  ],
  "output_changes": {
    "instance_ip_addr": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    }
  },
  "prior_state": {
    "format_version": "1.0",
    "terraform_version": "1.2.6",
    "values": {
      "root_module": {
        "resources": [
          {
            "address": "data.aws_ami.example",
            "mode": "data",
            "type": "aws_ami",
            "name": "example",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "architecture": "x86_64",
              "arn": "arn:aws:ec2:us-east-1::image/ami-0937b231c090e893d",
              "block_device_mappings": [
                {
                  "device_name": "/dev/sda1",
                  "ebs": {
                    "delete_on_termination": "true",
                    "encrypted": "false",
                    "iops": "0",
                    "snapshot_id": "snap-041f988dc685289eb",
                    "throughput": "0",
                    "volume_size": "50",
                    "volume_type": "gp2"
                  },
                  "no_device": "",
                  "virtual_name": ""
                },
                {
                  "device_name": "xvdca",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral0"
                },
                {
                  "device_name": "xvdcb",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral1"
                },
                {
                  "device_name": "xvdcc",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral2"
                },
                {
                  "device_name": "xvdcd",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral3"
                },
                {
                  "device_name": "xvdce",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral4"
                },
                {
                  "device_name": "xvdcf",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral5"
                },
                {
                  "device_name": "xvdcg",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral6"
                },
                {
                  "device_name": "xvdch",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral7"
                },
                {
                  "device_name": "xvdci",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral8"
                },
                {
                  "device_name": "xvdcj",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral9"
                },
                {
                  "device_name": "xvdck",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral10"
                },
                {
                  "device_name": "xvdcl",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral11"
                },
                {
                  "device_name": "xvdcm",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral12"
                },
                {
                  "device_name": "xvdcn",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral13"
                },
                {
                  "device_name": "xvdco",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral14"
                },
                {
                  "device_name": "xvdcp",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral15"
                },
                {
                  "device_name": "xvdcq",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral16"
                },
                {
                  "device_name": "xvdcr",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral17"
                },
                {
                  "device_name": "xvdcs",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral18"
                },
                {
                  "device_name": "xvdct",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral19"
                },
                {
                  "device_name": "xvdcu",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral20"
                },
                {
                  "device_name": "xvdcv",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral21"
                },
                {
                  "device_name": "xvdcw",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral22"
                },
                {
                  "device_name": "xvdcx",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral23"
                },
                {
                  "device_name": "xvdcy",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral24"
                },
                {
                  "device_name": "xvdcz",
                  "ebs": {},
                  "no_device": "",
                  "virtual_name": "ephemeral25"
                }
              ],
              "creation_date": "2022-07-04T06:59:19.000Z",
              "description": "Windows 2016 Damn Vulnerable Application and Printnightmare",
              "ena_support": true,
              "executable_users": null,
              "filter": null,
              "hypervisor": "xen",
              "id": "ami-0937b231c090e893d",
              "image_id": "ami-0937b231c090e893d",
              "image_location": "921877552404/win2016-dvwa-printnightmare-final-2022-07-04",
              "image_owner_alias": null,
              "image_type": "machine",
              "kernel_id": null,
              "most_recent": true,
              "name": "win2016-dvwa-printnightmare-final-2022-07-04",
              "name_regex": null,
              "owner_id": "921877552404",
              "owners": [
                "self"
              ],
              "platform": "windows",
              "platform_details": "Windows",
              "product_codes": [],
              "public": true,
              "ramdisk_id": null,
              "root_device_name": "/dev/sda1",
              "root_device_type": "ebs",
              "root_snapshot_id": "snap-041f988dc685289eb",
              "sriov_net_support": "simple",
              "state": "available",
              "state_reason": {
                "code": "UNSET",
                "message": "UNSET"
              },
              "tags": {
                "Name": "Windows 2016 DVWA + Printnightmare"
              },
              "usage_operation": "RunInstances:0002",
              "virtualization_type": "hvm"
            },
            "sensitive_values": {
              "block_device_mappings": [
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                },
                {
                  "ebs": {}
                }
              ],
              "owners": [
                false
              ],
              "product_codes": [],
              "state_reason": {},
              "tags": {}
            }
          }
        ],
        "child_modules": [
          {
            "resources": [
              {
                "address": "module.consul.data.aws_ami.consul",
                "mode": "data",
                "type": "aws_ami",
                "name": "consul",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "architecture": "x86_64",
                  "arn": "arn:aws:ec2:us-east-1::image/ami-003da67569bc1e002",
                  "block_device_mappings": [
                    {
                      "device_name": "/dev/sda1",
                      "ebs": {
                        "delete_on_termination": "true",
                        "encrypted": "false",
                        "iops": "0",
                        "snapshot_id": "snap-01e48571769205735",
                        "throughput": "0",
                        "volume_size": "8",
                        "volume_type": "gp2"
                      },
                      "no_device": "",
                      "virtual_name": ""
                    },
                    {
                      "device_name": "/dev/sdb",
                      "ebs": {},
                      "no_device": "",
                      "virtual_name": "ephemeral0"
                    },
                    {
                      "device_name": "/dev/sdc",
                      "ebs": {},
                      "no_device": "",
                      "virtual_name": "ephemeral1"
                    }
                  ],
                  "creation_date": "2021-08-16T21:50:02.000Z",
                  "description": "An Ubuntu 18.04 AMI that has Consul installed.",
                  "ena_support": true,
                  "executable_users": null,
                  "filter": [
                    {
                      "name": "is-public",
                      "values": [
                        "true"
                      ]
                    },
                    {
                      "name": "name",
                      "values": [
                        "consul-ubuntu-*"
                      ]
                    },
                    {
                      "name": "virtualization-type",
                      "values": [
                        "hvm"
                      ]
                    }
                  ],
                  "hypervisor": "xen",
                  "id": "ami-003da67569bc1e002",
                  "image_id": "ami-003da67569bc1e002",
                  "image_location": "562637147889/consul-ubuntu-2021-08-16T21-46-02Z-611adc9a-6d12-d4c2-9120-160285512750",
                  "image_owner_alias": null,
                  "image_type": "machine",
                  "kernel_id": null,
                  "most_recent": true,
                  "name": "consul-ubuntu-2021-08-16T21-46-02Z-611adc9a-6d12-d4c2-9120-160285512750",
                  "name_regex": null,
                  "owner_id": "562637147889",
                  "owners": [
                    "562637147889"
                  ],
                  "platform": null,
                  "platform_details": "Linux/UNIX",
                  "product_codes": [],
                  "public": true,
                  "ramdisk_id": null,
                  "root_device_name": "/dev/sda1",
                  "root_device_type": "ebs",
                  "root_snapshot_id": "snap-01e48571769205735",
                  "sriov_net_support": "simple",
                  "state": "available",
                  "state_reason": {
                    "code": "UNSET",
                    "message": "UNSET"
                  },
                  "tags": {},
                  "usage_operation": "RunInstances",
                  "virtualization_type": "hvm"
                },
                "sensitive_values": {
                  "block_device_mappings": [
                    {
                      "ebs": {}
                    },
                    {
                      "ebs": {}
                    },
                    {
                      "ebs": {}
                    }
                  ],
                  "filter": [
                    {
                      "values": [
                        false
                      ]
                    },
                    {
                      "values": [
                        false
                      ]
                    },
                    {
                      "values": [
                        false
                      ]
                    }
                  ],
                  "owners": [
                    false
                  ],
                  "product_codes": [],
                  "state_reason": {},
                  "tags": {}
                }
              },
              {
                "address": "module.consul.data.aws_region.current",
                "mode": "data",
                "type": "aws_region",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "description": "US East (N. Virginia)",
                  "endpoint": "ec2.us-east-1.amazonaws.com",
                  "id": "us-east-1",
                  "name": "us-east-1"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.consul.data.aws_subnet_ids.default",
                "mode": "data",
                "type": "aws_subnet_ids",
                "name": "default",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "filter": null,
                  "id": "vpc-fcc61581",
                  "ids": [
                    "subnet-4ca2252a",
                    "subnet-6045c53f",
                    "subnet-9e189abf",
                    "subnet-ddf3a490",
                    "subnet-ea5a91db",
                    "subnet-ea9ce5e4"
                  ],
                  "tags": null,
                  "vpc_id": "vpc-fcc61581"
                },
                "sensitive_values": {
                  "ids": [
                    false,
                    false,
                    false,
                    false,
                    false,
                    false
                  ]
                }
              },
              {
                "address": "module.consul.data.aws_vpc.default",
                "mode": "data",
                "type": "aws_vpc",
                "name": "default",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "arn": "arn:aws:ec2:us-east-1:921877552404:vpc/vpc-fcc61581",
                  "cidr_block": "172.31.0.0/16",
                  "cidr_block_associations": [
                    {
                      "association_id": "vpc-cidr-assoc-0564c86a",
                      "cidr_block": "172.31.0.0/16",
                      "state": "associated"
                    }
                  ],
                  "default": true,
                  "dhcp_options_id": "dopt-58dfa222",
                  "enable_dns_hostnames": true,
                  "enable_dns_support": true,
                  "filter": null,
                  "id": "vpc-fcc61581",
                  "instance_tenancy": "default",
                  "ipv6_association_id": "",
                  "ipv6_cidr_block": "",
                  "main_route_table_id": "rtb-ad144ad3",
                  "owner_id": "921877552404",
                  "state": null,
                  "tags": {}
                },
                "sensitive_values": {
                  "cidr_block_associations": [
                    {}
                  ],
                  "tags": {}
                }
              }
            ],
            "address": "module.consul",
            "child_modules": [
              {
                "resources": [
                  {
                    "address": "module.consul.module.consul_clients.data.aws_iam_policy_document.instance_role",
                    "mode": "data",
                    "type": "aws_iam_policy_document",
                    "name": "instance_role",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "1903849331",
                      "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                      "override_json": null,
                      "override_policy_documents": null,
                      "policy_id": null,
                      "source_json": null,
                      "source_policy_documents": null,
                      "statement": [
                        {
                          "actions": [
                            "sts:AssumeRole"
                          ],
                          "condition": [],
                          "effect": "Allow",
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                "ec2.amazonaws.com"
                              ],
                              "type": "Service"
                            }
                          ],
                          "resources": [],
                          "sid": ""
                        }
                      ],
                      "version": "2012-10-17"
                    },
                    "sensitive_values": {
                      "statement": [
                        {
                          "actions": [
                            false
                          ],
                          "condition": [],
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                false
                              ]
                            }
                          ],
                          "resources": []
                        }
                      ]
                    }
                  }
                ],
                "address": "module.consul.module.consul_clients",
                "child_modules": [
                  {
                    "resources": [
                      {
                        "address": "module.consul.module.consul_clients.module.iam_policies.data.aws_iam_policy_document.auto_discover_cluster",
                        "mode": "data",
                        "type": "aws_iam_policy_document",
                        "name": "auto_discover_cluster",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "2069168386",
                          "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                          "override_json": null,
                          "override_policy_documents": null,
                          "policy_id": null,
                          "source_json": null,
                          "source_policy_documents": null,
                          "statement": [
                            {
                              "actions": [
                                "autoscaling:DescribeAutoScalingGroups",
                                "ec2:DescribeInstances",
                                "ec2:DescribeTags"
                              ],
                              "condition": [],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                "*"
                              ],
                              "sid": ""
                            }
                          ],
                          "version": "2012-10-17"
                        },
                        "sensitive_values": {
                          "statement": [
                            {
                              "actions": [
                                false,
                                false,
                                false
                              ],
                              "condition": [],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                false
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    "address": "module.consul.module.consul_clients.module.iam_policies"
                  }
                ]
              },
              {
                "resources": [
                  {
                    "address": "module.consul.module.consul_servers.data.aws_iam_policy_document.instance_role",
                    "mode": "data",
                    "type": "aws_iam_policy_document",
                    "name": "instance_role",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "id": "1903849331",
                      "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                      "override_json": null,
                      "override_policy_documents": null,
                      "policy_id": null,
                      "source_json": null,
                      "source_policy_documents": null,
                      "statement": [
                        {
                          "actions": [
                            "sts:AssumeRole"
                          ],
                          "condition": [],
                          "effect": "Allow",
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                "ec2.amazonaws.com"
                              ],
                              "type": "Service"
                            }
                          ],
                          "resources": [],
                          "sid": ""
                        }
                      ],
                      "version": "2012-10-17"
                    },
                    "sensitive_values": {
                      "statement": [
                        {
                          "actions": [
                            false
                          ],
                          "condition": [],
                          "not_actions": [],
                          "not_principals": [],
                          "not_resources": [],
                          "principals": [
                            {
                              "identifiers": [
                                false
                              ]
                            }
                          ],
                          "resources": []
                        }
                      ]
                    }
                  }
                ],
                "address": "module.consul.module.consul_servers",
                "child_modules": [
                  {
                    "resources": [
                      {
                        "address": "module.consul.module.consul_servers.module.iam_policies.data.aws_iam_policy_document.auto_discover_cluster",
                        "mode": "data",
                        "type": "aws_iam_policy_document",
                        "name": "auto_discover_cluster",
                        "provider_name": "registry.terraform.io/hashicorp/aws",
                        "schema_version": 0,
                        "values": {
                          "id": "2069168386",
                          "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                          "override_json": null,
                          "override_policy_documents": null,
                          "policy_id": null,
                          "source_json": null,
                          "source_policy_documents": null,
                          "statement": [
                            {
                              "actions": [
                                "autoscaling:DescribeAutoScalingGroups",
                                "ec2:DescribeInstances",
                                "ec2:DescribeTags"
                              ],
                              "condition": [],
                              "effect": "Allow",
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                "*"
                              ],
                              "sid": ""
                            }
                          ],
                          "version": "2012-10-17"
                        },
                        "sensitive_values": {
                          "statement": [
                            {
                              "actions": [
                                false,
                                false,
                                false
                              ],
                              "condition": [],
                              "not_actions": [],
                              "not_principals": [],
                              "not_resources": [],
                              "principals": [],
                              "resources": [
                                false
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    "address": "module.consul.module.consul_servers.module.iam_policies"
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "aws": {
        "name": "aws",
        "full_name": "registry.terraform.io/hashicorp/aws",
        "version_constraint": "~\u003e 3.74",
        "expressions": {
          "region": {
            "constant_value": "us-east-1"
          }
        }
      },
      "aws.west": {
        "name": "aws",
        "full_name": "registry.terraform.io/hashicorp/aws",
        "alias": "west",
        "version_constraint": "~\u003e 3.74",
        "expressions": {
          "region": {
            "constant_value": "us-west-2"
          }
        }
      },
      "google": {
        "name": "google",
        "full_name": "registry.terraform.io/hashicorp/google"
      }
    },
    "root_module": {
      "outputs": {
        "instance_ip_addr": {
          "expression": {
            "references": [
              "aws_instance.example.private_ip",
              "aws_instance.example"
            ]
          },
          "description": "The private IP address of the main server instance."
        }
      },
      "resources": [
        {
          "address": "aws_iam_policy.policy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "policy",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "My test policy"
            },
            "name": {
              "constant_value": "test_policy"
            },
            "path": {
              "constant_value": "/"
            },
            "policy": {}
          },
          "schema_version": 0
        },
        {
          "address": "aws_instance.example",
          "mode": "managed",
          "type": "aws_instance",
          "name": "example",
          "provider_config_key": "aws",
          "expressions": {
            "ami": {
              "constant_value": "ami-a1b2c3d4"
            },
            "instance_type": {
              "constant_value": "t2.micro"
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group_rule.example",
          "mode": "managed",
          "type": "aws_security_group_rule",
          "name": "example",
          "provider_config_key": "aws",
          "expressions": {
            "from_port": {
              "constant_value": 0
            },
            "protocol": {
              "constant_value": "tcp"
            },
            "security_group_id": {
              "constant_value": "sg-123456"
            },
            "to_port": {
              "constant_value": 65535
            },
            "type": {
              "constant_value": "ingress"
            }
          },
          "schema_version": 2
        },
        {
          "address": "google_compute_instance.default",
          "mode": "managed",
          "type": "google_compute_instance",
          "name": "default",
          "provider_config_key": "google",
          "expressions": {
            "boot_disk": [
              {
                "initialize_params": [
                  {
                    "image": {
                      "constant_value": "debian-cloud/debian-9"
                    }
                  }
                ]
              }
            ],
            "machine_type": {
              "constant_value": "e2-medium"
            },
            "metadata": {
              "constant_value": {
                "enable-oslogin": true
              }
            },
            "name": {
              "constant_value": "test"
            },
            "network_interface": [
              {
                "access_config": [
                  {}
                ],
                "network": {
                  "constant_value": "default"
                }
              }
            ],
            "scratch_disk": [
              {
                "interface": {
                  "constant_value": "SCSI"
                }
              }
            ],
            "zone": {
              "constant_value": "us-central1-a"
            }
          },
          "schema_version": 6
        },
        {
          "address": "data.aws_ami.example",
          "mode": "data",
          "type": "aws_ami",
          "name": "example",
          "provider_config_key": "aws",
          "expressions": {
            "most_recent": {
              "constant_value": true
            },
            "owners": {
              "constant_value": [
                "self"
              ]
            },
            "tags": {
              "constant_value": {
                "Name": "app-server",
                "Tested": "true"
              }
            }
          },
          "schema_version": 0
        }
      ],
      "module_calls": {
        "consul": {
          "source": "hashicorp/consul/aws",
          "module": {
            "outputs": {
              "asg_name_clients": {
                "expression": {
                  "references": [
                    "module.consul_clients.asg_name",
                    "module.consul_clients"
                  ]
                }
              },
              "asg_name_servers": {
                "expression": {
                  "references": [
                    "module.consul_servers.asg_name",
                    "module.consul_servers"
                  ]
                }
              },
              "aws_region": {
                "expression": {
                  "references": [
                    "data.aws_region.current.name",
                    "data.aws_region.current"
                  ]
                }
              },
              "consul_servers_cluster_tag_key": {
                "expression": {
                  "references": [
                    "module.consul_servers.cluster_tag_key",
                    "module.consul_servers"
                  ]
                }
              },
              "consul_servers_cluster_tag_value": {
                "expression": {
                  "references": [
                    "module.consul_servers.cluster_tag_value",
                    "module.consul_servers"
                  ]
                }
              },
              "iam_role_arn_clients": {
                "expression": {
                  "references": [
                    "module.consul_clients.iam_role_arn",
                    "module.consul_clients"
                  ]
                }
              },
              "iam_role_arn_servers": {
                "expression": {
                  "references": [
                    "module.consul_servers.iam_role_arn",
                    "module.consul_servers"
                  ]
                }
              },
              "iam_role_id_clients": {
                "expression": {
                  "references": [
                    "module.consul_clients.iam_role_id",
                    "module.consul_clients"
                  ]
                }
              },
              "iam_role_id_servers": {
                "expression": {
                  "references": [
                    "module.consul_servers.iam_role_id",
                    "module.consul_servers"
                  ]
                }
              },
              "launch_config_name_clients": {
                "expression": {
                  "references": [
                    "module.consul_clients.launch_config_name",
                    "module.consul_clients"
                  ]
                }
              },
              "launch_config_name_servers": {
                "expression": {
                  "references": [
                    "module.consul_servers.launch_config_name",
                    "module.consul_servers"
                  ]
                }
              },
              "num_clients": {
                "expression": {
                  "references": [
                    "module.consul_clients.cluster_size",
                    "module.consul_clients"
                  ]
                }
              },
              "num_servers": {
                "expression": {
                  "references": [
                    "module.consul_servers.cluster_size",
                    "module.consul_servers"
                  ]
                }
              },
              "security_group_id_clients": {
                "expression": {
                  "references": [
                    "module.consul_clients.security_group_id",
                    "module.consul_clients"
                  ]
                }
              },
              "security_group_id_servers": {
                "expression": {
                  "references": [
                    "module.consul_servers.security_group_id",
                    "module.consul_servers"
                  ]
                }
              }
            },
            "resources": [
              {
                "address": "data.aws_ami.consul",
                "mode": "data",
                "type": "aws_ami",
                "name": "consul",
                "provider_config_key": "aws",
                "expressions": {
                  "filter": [
                    {
                      "name": {
                        "constant_value": "virtualization-type"
                      },
                      "values": {
                        "constant_value": [
                          "hvm"
                        ]
                      }
                    },
                    {
                      "name": {
                        "constant_value": "is-public"
                      },
                      "values": {
                        "constant_value": [
                          "true"
                        ]
                      }
                    },
                    {
                      "name": {
                        "constant_value": "name"
                      },
                      "values": {
                        "constant_value": [
                          "consul-ubuntu-*"
                        ]
                      }
                    }
                  ],
                  "most_recent": {
                    "constant_value": true
                  },
                  "owners": {
                    "constant_value": [
                      "562637147889"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.aws_region.current",
                "mode": "data",
                "type": "aws_region",
                "name": "current",
                "provider_config_key": "aws",
                "schema_version": 0
              },
              {
                "address": "data.aws_subnet_ids.default",
                "mode": "data",
                "type": "aws_subnet_ids",
                "name": "default",
                "provider_config_key": "aws",
                "expressions": {
                  "vpc_id": {
                    "references": [
                      "data.aws_vpc.default.id",
                      "data.aws_vpc.default"
                    ]
                  }
                },
                "schema_version": 0
              },
              {
                "address": "data.aws_vpc.default",
                "mode": "data",
                "type": "aws_vpc",
                "name": "default",
                "provider_config_key": "aws",
                "expressions": {
                  "default": {
                    "references": [
                      "var.vpc_id"
                    ]
                  },
                  "id": {
                    "references": [
                      "var.vpc_id"
                    ]
                  }
                },
                "schema_version": 0
              }
            ],
            "module_calls": {
              "consul_clients": {
                "source": "./modules/consul-cluster",
                "expressions": {
                  "allowed_inbound_cidr_blocks": {
                    "constant_value": [
                      "0.0.0.0/0"
                    ]
                  },
                  "allowed_ssh_cidr_blocks": {
                    "constant_value": [
                      "0.0.0.0/0"
                    ]
                  },
                  "ami_id": {
                    "references": [
                      "var.ami_id",
                      "data.aws_ami.consul.image_id",
                      "data.aws_ami.consul",
                      "var.ami_id"
                    ]
                  },
                  "cluster_name": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "cluster_size": {
                    "references": [
                      "var.num_clients"
                    ]
                  },
                  "cluster_tag_key": {
                    "constant_value": "consul-clients"
                  },
                  "cluster_tag_value": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "instance_type": {
                    "constant_value": "t2.micro"
                  },
                  "spot_price": {
                    "references": [
                      "var.spot_price"
                    ]
                  },
                  "ssh_key_name": {
                    "references": [
                      "var.ssh_key_name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "data.aws_subnet_ids.default.ids",
                      "data.aws_subnet_ids.default"
                    ]
                  },
                  "user_data": {
                    "references": [
                      "path.module",
                      "var.cluster_tag_key",
                      "var.cluster_name"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "data.aws_vpc.default.id",
                      "data.aws_vpc.default"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "asg_name": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.autoscaling_group.name",
                          "aws_autoscaling_group.autoscaling_group"
                        ]
                      },
                      "description": "This is the name for the autoscaling group generated by the module"
                    },
                    "cluster_size": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.autoscaling_group.desired_capacity",
                          "aws_autoscaling_group.autoscaling_group"
                        ]
                      },
                      "description": "This is the desired size of the consul cluster in the autoscaling group"
                    },
                    "cluster_tag_key": {
                      "expression": {
                        "references": [
                          "var.cluster_tag_key"
                        ]
                      },
                      "description": "This is the tag key used to allow the consul servers to autojoin"
                    },
                    "cluster_tag_value": {
                      "expression": {
                        "references": [
                          "var.cluster_tag_value"
                        ]
                      },
                      "description": "This is the tag value used to allow the consul servers to autojoin"
                    },
                    "iam_role_arn": {
                      "expression": {
                        "references": [
                          "aws_iam_role.instance_role"
                        ]
                      },
                      "description": "This is the arn of instance role if enable_iam_setup variable is set to true"
                    },
                    "iam_role_id": {
                      "expression": {
                        "references": [
                          "aws_iam_role.instance_role"
                        ]
                      },
                      "description": "This is the id of instance role if enable_iam_setup variable is set to true"
                    },
                    "launch_config_name": {
                      "expression": {
                        "references": [
                          "aws_launch_configuration.launch_configuration.name",
                          "aws_launch_configuration.launch_configuration"
                        ]
                      },
                      "description": "This is the name of the launch_configuration used to bootstrap the cluster instances"
                    },
                    "security_group_id": {
                      "expression": {
                        "references": [
                          "aws_security_group.lc_security_group.id",
                          "aws_security_group.lc_security_group"
                        ]
                      },
                      "description": "This is the id of security group that governs ingress and egress for the cluster instances"
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_autoscaling_group.autoscaling_group",
                      "mode": "managed",
                      "type": "aws_autoscaling_group",
                      "name": "autoscaling_group",
                      "provider_config_key": "aws",
                      "expressions": {
                        "availability_zones": {
                          "references": [
                            "var.availability_zones"
                          ]
                        },
                        "desired_capacity": {
                          "references": [
                            "var.cluster_size"
                          ]
                        },
                        "enabled_metrics": {
                          "references": [
                            "var.enabled_metrics"
                          ]
                        },
                        "health_check_grace_period": {
                          "references": [
                            "var.health_check_grace_period"
                          ]
                        },
                        "health_check_type": {
                          "references": [
                            "var.health_check_type"
                          ]
                        },
                        "launch_configuration": {
                          "references": [
                            "aws_launch_configuration.launch_configuration.name",
                            "aws_launch_configuration.launch_configuration"
                          ]
                        },
                        "max_size": {
                          "references": [
                            "var.cluster_size"
                          ]
                        },
                        "min_size": {
                          "references": [
                            "var.cluster_size"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "protect_from_scale_in": {
                          "references": [
                            "var.protect_from_scale_in"
                          ]
                        },
                        "service_linked_role_arn": {
                          "references": [
                            "var.service_linked_role_arn"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.cluster_name",
                            "var.cluster_tag_key",
                            "var.cluster_tag_value",
                            "var.tags"
                          ]
                        },
                        "termination_policies": {
                          "references": [
                            "var.termination_policies"
                          ]
                        },
                        "vpc_zone_identifier": {
                          "references": [
                            "var.subnet_ids"
                          ]
                        },
                        "wait_for_capacity_timeout": {
                          "references": [
                            "var.wait_for_capacity_timeout"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_iam_instance_profile.instance_profile",
                      "mode": "managed",
                      "type": "aws_iam_instance_profile",
                      "name": "instance_profile",
                      "provider_config_key": "aws",
                      "expressions": {
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "path": {
                          "references": [
                            "var.instance_profile_path"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.instance_role"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.enable_iam_setup"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role.instance_role",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "instance_role",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assume_role_policy": {
                          "references": [
                            "data.aws_iam_policy_document.instance_role.json",
                            "data.aws_iam_policy_document.instance_role"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "permissions_boundary": {
                          "references": [
                            "var.iam_permissions_boundary"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.enable_iam_setup"
                        ]
                      }
                    },
                    {
                      "address": "aws_launch_configuration.launch_configuration",
                      "mode": "managed",
                      "type": "aws_launch_configuration",
                      "name": "launch_configuration",
                      "provider_config_key": "aws",
                      "expressions": {
                        "associate_public_ip_address": {
                          "references": [
                            "var.associate_public_ip_address"
                          ]
                        },
                        "ebs_optimized": {
                          "references": [
                            "var.root_volume_ebs_optimized"
                          ]
                        },
                        "iam_instance_profile": {
                          "references": [
                            "var.enable_iam_setup",
                            "aws_iam_instance_profile.instance_profile",
                            "var.iam_instance_profile_name"
                          ]
                        },
                        "image_id": {
                          "references": [
                            "var.ami_id"
                          ]
                        },
                        "instance_type": {
                          "references": [
                            "var.instance_type"
                          ]
                        },
                        "key_name": {
                          "references": [
                            "var.ssh_key_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "placement_tenancy": {
                          "references": [
                            "var.tenancy"
                          ]
                        },
                        "root_block_device": [
                          {
                            "delete_on_termination": {
                              "references": [
                                "var.root_volume_delete_on_termination"
                              ]
                            },
                            "encrypted": {
                              "references": [
                                "var.root_volume_encrypted"
                              ]
                            },
                            "volume_size": {
                              "references": [
                                "var.root_volume_size"
                              ]
                            },
                            "volume_type": {
                              "references": [
                                "var.root_volume_type"
                              ]
                            }
                          }
                        ],
                        "security_groups": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group",
                            "var.additional_security_group_ids"
                          ]
                        },
                        "spot_price": {
                          "references": [
                            "var.spot_price"
                          ]
                        },
                        "user_data": {
                          "references": [
                            "var.user_data"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_security_group.lc_security_group",
                      "mode": "managed",
                      "type": "aws_security_group",
                      "name": "lc_security_group",
                      "provider_config_key": "aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.cluster_name",
                            "var.security_group_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "var.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1
                    },
                    {
                      "address": "aws_security_group_rule.allow_all_outbound",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_all_outbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_blocks": {
                          "constant_value": [
                            "0.0.0.0/0"
                          ]
                        },
                        "from_port": {
                          "constant_value": 0
                        },
                        "protocol": {
                          "constant_value": "-1"
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group"
                          ]
                        },
                        "to_port": {
                          "constant_value": 0
                        },
                        "type": {
                          "constant_value": "egress"
                        }
                      },
                      "schema_version": 2
                    },
                    {
                      "address": "aws_security_group_rule.allow_ssh_inbound",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_ssh_inbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_blocks": {
                          "references": [
                            "var.allowed_ssh_cidr_blocks"
                          ]
                        },
                        "from_port": {
                          "references": [
                            "var.ssh_port"
                          ]
                        },
                        "protocol": {
                          "constant_value": "tcp"
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.ssh_port"
                          ]
                        },
                        "type": {
                          "constant_value": "ingress"
                        }
                      },
                      "schema_version": 2,
                      "count_expression": {
                        "references": [
                          "var.allowed_ssh_cidr_blocks"
                        ]
                      }
                    },
                    {
                      "address": "aws_security_group_rule.allow_ssh_inbound_from_security_group_ids",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_ssh_inbound_from_security_group_ids",
                      "provider_config_key": "aws",
                      "expressions": {
                        "from_port": {
                          "references": [
                            "var.ssh_port"
                          ]
                        },
                        "protocol": {
                          "constant_value": "tcp"
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group"
                          ]
                        },
                        "source_security_group_id": {
                          "references": [
                            "var.allowed_ssh_security_group_ids",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.ssh_port"
                          ]
                        },
                        "type": {
                          "constant_value": "ingress"
                        }
                      },
                      "schema_version": 2,
                      "count_expression": {
                        "references": [
                          "var.allowed_ssh_security_group_count"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_policy_document.instance_role",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "instance_role",
                      "provider_config_key": "aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "sts:AssumeRole"
                              ]
                            },
                            "effect": {
                              "constant_value": "Allow"
                            },
                            "principals": [
                              {
                                "identifiers": {
                                  "constant_value": [
                                    "ec2.amazonaws.com"
                                  ]
                                },
                                "type": {
                                  "constant_value": "Service"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "schema_version": 0
                    }
                  ],
                  "module_calls": {
                    "iam_policies": {
                      "source": "../consul-iam-policies",
                      "expressions": {
                        "enabled": {
                          "references": [
                            "var.enable_iam_setup"
                          ]
                        },
                        "iam_role_id": {
                          "references": [
                            "aws_iam_role.instance_role"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "aws_iam_role_policy.auto_discover_cluster",
                            "mode": "managed",
                            "type": "aws_iam_role_policy",
                            "name": "auto_discover_cluster",
                            "provider_config_key": "aws",
                            "expressions": {
                              "name": {
                                "constant_value": "auto-discover-cluster"
                              },
                              "policy": {
                                "references": [
                                  "data.aws_iam_policy_document.auto_discover_cluster.json",
                                  "data.aws_iam_policy_document.auto_discover_cluster"
                                ]
                              },
                              "role": {
                                "references": [
                                  "var.iam_role_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.enabled"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.auto_discover_cluster",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "auto_discover_cluster",
                            "provider_config_key": "aws",
                            "expressions": {
                              "statement": [
                                {
                                  "actions": {
                                    "constant_value": [
                                      "ec2:DescribeInstances",
                                      "ec2:DescribeTags",
                                      "autoscaling:DescribeAutoScalingGroups"
                                    ]
                                  },
                                  "effect": {
                                    "constant_value": "Allow"
                                  },
                                  "resources": {
                                    "constant_value": [
                                      "*"
                                    ]
                                  }
                                }
                              ]
                            },
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "enabled": {
                            "default": true,
                            "description": "Give the option to disable this module if required"
                          },
                          "iam_role_id": {
                            "description": "The ID of the IAM Role to which these IAM policies should be attached"
                          }
                        }
                      }
                    },
                    "security_group_rules": {
                      "source": "../consul-security-group-rules",
                      "expressions": {
                        "allowed_inbound_cidr_blocks": {
                          "references": [
                            "var.allowed_inbound_cidr_blocks"
                          ]
                        },
                        "allowed_inbound_security_group_count": {
                          "references": [
                            "var.allowed_inbound_security_group_count"
                          ]
                        },
                        "allowed_inbound_security_group_ids": {
                          "references": [
                            "var.allowed_inbound_security_group_ids"
                          ]
                        },
                        "cli_rpc_port": {
                          "references": [
                            "var.cli_rpc_port"
                          ]
                        },
                        "dns_port": {
                          "references": [
                            "var.dns_port"
                          ]
                        },
                        "enable_https_port": {
                          "references": [
                            "var.enable_https_port"
                          ]
                        },
                        "http_api_port": {
                          "references": [
                            "var.http_api_port"
                          ]
                        },
                        "https_api_port": {
                          "references": [
                            "var.https_api_port"
                          ]
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group"
                          ]
                        },
                        "serf_lan_port": {
                          "references": [
                            "var.serf_lan_port"
                          ]
                        },
                        "serf_wan_port": {
                          "references": [
                            "var.serf_wan_port"
                          ]
                        },
                        "server_rpc_port": {
                          "references": [
                            "var.server_rpc_port"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "aws_security_group_rule.allow_cli_rpc_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_cli_rpc_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_cli_rpc_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_cli_rpc_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_cli_rpc_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_cli_rpc_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_tcp_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_tcp_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_tcp_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_tcp_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_tcp_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_tcp_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_udp_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_udp_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_udp_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_udp_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_udp_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_udp_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_http_api_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_http_api_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_http_api_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_http_api_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_http_api_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_http_api_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_https_api_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_https_api_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.enable_https_port",
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_https_api_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_https_api_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.enable_https_port",
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_https_api_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_https_api_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.enable_https_port"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_tcp_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_tcp_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_tcp_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_tcp_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_tcp_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_udp_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_udp_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_udp_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_udp_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_udp_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_server_rpc_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_server_rpc_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_server_rpc_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_server_rpc_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_server_rpc_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_server_rpc_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          }
                        ],
                        "module_calls": {
                          "client_security_group_rules": {
                            "source": "../consul-client-security-group-rules",
                            "expressions": {
                              "allowed_inbound_cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "allowed_inbound_security_group_count": {
                                "references": [
                                  "var.allowed_inbound_security_group_count"
                                ]
                              },
                              "allowed_inbound_security_group_ids": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids"
                                ]
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "serf_lan_port": {
                                "references": [
                                  "var.serf_lan_port"
                                ]
                              }
                            },
                            "module": {
                              "resources": [
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_tcp_inbound",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_tcp_inbound",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "cidr_blocks": {
                                      "references": [
                                        "var.allowed_inbound_cidr_blocks"
                                      ]
                                    },
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "tcp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2,
                                  "count_expression": {
                                    "references": [
                                      "var.allowed_inbound_cidr_blocks"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_tcp_inbound_from_security_group_ids",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_tcp_inbound_from_security_group_ids",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "tcp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "source_security_group_id": {
                                      "references": [
                                        "var.allowed_inbound_security_group_ids",
                                        "count.index"
                                      ]
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2,
                                  "count_expression": {
                                    "references": [
                                      "var.allowed_inbound_security_group_count"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_tcp_inbound_from_self",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "tcp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "self": {
                                      "constant_value": true
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_udp_inbound",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_udp_inbound",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "cidr_blocks": {
                                      "references": [
                                        "var.allowed_inbound_cidr_blocks"
                                      ]
                                    },
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "udp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2,
                                  "count_expression": {
                                    "references": [
                                      "var.allowed_inbound_cidr_blocks"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_udp_inbound_from_security_group_ids",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_udp_inbound_from_security_group_ids",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "udp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "source_security_group_id": {
                                      "references": [
                                        "var.allowed_inbound_security_group_ids",
                                        "count.index"
                                      ]
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2,
                                  "count_expression": {
                                    "references": [
                                      "var.allowed_inbound_security_group_count"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_udp_inbound_from_self",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "udp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "self": {
                                      "constant_value": true
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2
                                }
                              ],
                              "variables": {
                                "allowed_inbound_cidr_blocks": {
                                  "default": [],
                                  "description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Consul"
                                },
                                "allowed_inbound_security_group_count": {
                                  "default": 0,
                                  "description": "The number of entries in var.allowed_inbound_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only."
                                },
                                "allowed_inbound_security_group_ids": {
                                  "default": [],
                                  "description": "A list of security group IDs that will be allowed to connect to Consul"
                                },
                                "security_group_id": {
                                  "description": "The ID of the security group to which we should add the Consul security group rules"
                                },
                                "serf_lan_port": {
                                  "default": 8301,
                                  "description": "The port used to handle gossip in the LAN. Required by all agents."
                                }
                              }
                            }
                          }
                        },
                        "variables": {
                          "allowed_inbound_cidr_blocks": {
                            "default": [],
                            "description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Consul"
                          },
                          "allowed_inbound_security_group_count": {
                            "default": 0,
                            "description": "The number of entries in var.allowed_inbound_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only."
                          },
                          "allowed_inbound_security_group_ids": {
                            "default": [],
                            "description": "A list of security group IDs that will be allowed to connect to Consul"
                          },
                          "cli_rpc_port": {
                            "default": 8400,
                            "description": "The port used by all agents to handle RPC from the CLI."
                          },
                          "dns_port": {
                            "default": 8600,
                            "description": "The port used to resolve DNS queries."
                          },
                          "enable_https_port": {
                            "default": false,
                            "description": "If set to true, allow access to the Consul HTTPS port defined via the https_api_port variable."
                          },
                          "http_api_port": {
                            "default": 8500,
                            "description": "The port used by clients to talk to the HTTP API"
                          },
                          "https_api_port": {
                            "default": 8501,
                            "description": "The port used by clients to talk to the HTTPS API. Only used if enable_https_port is set to true."
                          },
                          "security_group_id": {
                            "description": "The ID of the security group to which we should add the Consul security group rules"
                          },
                          "serf_lan_port": {
                            "default": 8301,
                            "description": "The port used to handle gossip in the LAN. Required by all agents."
                          },
                          "serf_wan_port": {
                            "default": 8302,
                            "description": "The port used by servers to gossip over the WAN to other servers."
                          },
                          "server_rpc_port": {
                            "default": 8300,
                            "description": "The port used by servers to handle incoming requests from other agents."
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "additional_security_group_ids": {
                      "default": [],
                      "description": "A list of additional security group IDs to add to Consul EC2 Instances"
                    },
                    "allowed_inbound_cidr_blocks": {
                      "description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Consul"
                    },
                    "allowed_inbound_security_group_count": {
                      "default": 0,
                      "description": "The number of entries in var.allowed_inbound_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only."
                    },
                    "allowed_inbound_security_group_ids": {
                      "default": [],
                      "description": "A list of security group IDs that will be allowed to connect to Consul"
                    },
                    "allowed_ssh_cidr_blocks": {
                      "default": [],
                      "description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow SSH connections"
                    },
                    "allowed_ssh_security_group_count": {
                      "default": 0,
                      "description": "The number of entries in var.allowed_ssh_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only."
                    },
                    "allowed_ssh_security_group_ids": {
                      "default": [],
                      "description": "A list of security group IDs from which the EC2 Instances will allow SSH connections"
                    },
                    "ami_id": {
                      "description": "The ID of the AMI to run in this cluster. Should be an AMI that had Consul installed and configured by the install-consul module."
                    },
                    "associate_public_ip_address": {
                      "default": false,
                      "description": "If set to true, associate a public IP address with each EC2 Instance in the cluster."
                    },
                    "availability_zones": {
                      "default": null,
                      "description": "The availability zones into which the EC2 Instances should be deployed. We recommend one availability zone per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty."
                    },
                    "cli_rpc_port": {
                      "default": 8400,
                      "description": "The port used by all agents to handle RPC from the CLI."
                    },
                    "cluster_name": {
                      "description": "The name of the Consul cluster (e.g. consul-stage). This variable is used to namespace all resources created by this module."
                    },
                    "cluster_size": {
                      "default": 3,
                      "description": "The number of nodes to have in the Consul cluster. We strongly recommended that you use either 3 or 5."
                    },
                    "cluster_tag_key": {
                      "default": "consul-servers",
                      "description": "Add a tag with this key and the value var.cluster_tag_value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster."
                    },
                    "cluster_tag_value": {
                      "default": "auto-join",
                      "description": "Add a tag with key var.clsuter_tag_key and this value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster."
                    },
                    "dns_port": {
                      "default": 8600,
                      "description": "The port used to resolve DNS queries."
                    },
                    "enable_https_port": {
                      "default": false,
                      "description": "If set to true, allow access to the Consul HTTPS port defined via the https_api_port variable."
                    },
                    "enable_iam_setup": {
                      "default": true,
                      "description": "If true, create the IAM Role, IAM Instance Profile, and IAM Policies. If false, these will not be created, and you can pass in your own IAM Instance Profile via var.iam_instance_profile_name."
                    },
                    "enabled_metrics": {
                      "default": [],
                      "description": "List of autoscaling group metrics to enable."
                    },
                    "health_check_grace_period": {
                      "default": 300,
                      "description": "Time, in seconds, after instance comes into service before checking health."
                    },
                    "health_check_type": {
                      "default": "EC2",
                      "description": "Controls how health checking is done. Must be one of EC2 or ELB."
                    },
                    "http_api_port": {
                      "default": 8500,
                      "description": "The port used by clients to talk to the HTTP API"
                    },
                    "https_api_port": {
                      "default": 8501,
                      "description": "The port used by clients to talk to the HTTPS API. Only used if enable_https_port is set to true."
                    },
                    "iam_instance_profile_name": {
                      "default": null,
                      "description": "If enable_iam_setup is false then this will be the name of the IAM instance profile to attach"
                    },
                    "iam_permissions_boundary": {
                      "default": null,
                      "description": "If set, restricts the created IAM role to the given permissions boundary"
                    },
                    "instance_profile_path": {
                      "default": "/",
                      "description": "Path in which to create the IAM instance profile."
                    },
                    "instance_type": {
                      "description": "The type of EC2 Instances to run for each node in the cluster (e.g. t2.micro)."
                    },
                    "lifecycle_hooks": {
                      "default": {},
                      "description": "The lifecycle hooks to create that are triggered by the launch event. This is a map where the keys are the name of the hook and the values are an object with the keys and values defined in the lifecycle_hook block of the aws_autoscaling_group resource.  Default is no launch hooks"
                    },
                    "protect_from_scale_in": {
                      "default": false,
                      "description": "(Optional) Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events."
                    },
                    "root_volume_delete_on_termination": {
                      "default": true,
                      "description": "Whether the volume should be destroyed on instance termination."
                    },
                    "root_volume_ebs_optimized": {
                      "default": false,
                      "description": "If true, the launched EC2 instance will be EBS-optimized."
                    },
                    "root_volume_encrypted": {
                      "default": false,
                      "description": "Encrypt the root volume at rest"
                    },
                    "root_volume_size": {
                      "default": 50,
                      "description": "The size, in GB, of the root EBS volume."
                    },
                    "root_volume_type": {
                      "default": "standard",
                      "description": "The type of volume. Must be one of: standard, gp2, or io1."
                    },
                    "security_group_tags": {
                      "default": {},
                      "description": "Tags to be applied to the LC security group"
                    },
                    "serf_lan_port": {
                      "default": 8301,
                      "description": "The port used to handle gossip in the LAN. Required by all agents."
                    },
                    "serf_wan_port": {
                      "default": 8302,
                      "description": "The port used by servers to gossip over the WAN to other servers."
                    },
                    "server_rpc_port": {
                      "default": 8300,
                      "description": "The port used by servers to handle incoming requests from other agents."
                    },
                    "service_linked_role_arn": {
                      "default": null,
                      "description": "The ARN of the service-linked role that the ASG will use to call other AWS services"
                    },
                    "spot_price": {
                      "default": null,
                      "description": "The maximum hourly price to pay for EC2 Spot Instances."
                    },
                    "ssh_key_name": {
                      "default": null,
                      "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair."
                    },
                    "ssh_port": {
                      "default": 22,
                      "description": "The port used for SSH connections"
                    },
                    "subnet_ids": {
                      "default": null,
                      "description": "The subnet IDs into which the EC2 Instances should be deployed. We recommend one subnet ID per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty."
                    },
                    "tags": {
                      "default": [],
                      "description": "List of extra tag blocks added to the autoscaling group configuration. Each element in the list is a map containing keys 'key', 'value', and 'propagate_at_launch' mapped to the respective values."
                    },
                    "tenancy": {
                      "default": null,
                      "description": "The tenancy of the instance. Must be one of: null, default or dedicated. For EC2 Spot Instances only null or dedicated can be used."
                    },
                    "termination_policies": {
                      "default": "Default",
                      "description": "A list of policies to decide how the instances in the auto scale group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, Default."
                    },
                    "user_data": {
                      "description": "A User Data script to execute while the server is booting. We recommend passing in a bash script that executes the run-consul script, which should have been installed in the Consul AMI by the install-consul module."
                    },
                    "vpc_id": {
                      "description": "The ID of the VPC in which to deploy the Consul cluster"
                    },
                    "wait_for_capacity_timeout": {
                      "default": "10m",
                      "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. Setting this to '0' causes Terraform to skip all Capacity Waiting behavior."
                    }
                  }
                }
              },
              "consul_servers": {
                "source": "./modules/consul-cluster",
                "expressions": {
                  "allowed_inbound_cidr_blocks": {
                    "constant_value": [
                      "0.0.0.0/0"
                    ]
                  },
                  "allowed_ssh_cidr_blocks": {
                    "constant_value": [
                      "0.0.0.0/0"
                    ]
                  },
                  "ami_id": {
                    "references": [
                      "var.ami_id",
                      "data.aws_ami.consul.image_id",
                      "data.aws_ami.consul",
                      "var.ami_id"
                    ]
                  },
                  "cluster_name": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "cluster_size": {
                    "references": [
                      "var.num_servers"
                    ]
                  },
                  "cluster_tag_key": {
                    "references": [
                      "var.cluster_tag_key"
                    ]
                  },
                  "cluster_tag_value": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "enable_https_port": {
                    "references": [
                      "var.enable_https_port"
                    ]
                  },
                  "instance_type": {
                    "constant_value": "t2.micro"
                  },
                  "spot_price": {
                    "references": [
                      "var.spot_price"
                    ]
                  },
                  "ssh_key_name": {
                    "references": [
                      "var.ssh_key_name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "data.aws_subnet_ids.default.ids",
                      "data.aws_subnet_ids.default"
                    ]
                  },
                  "tags": {
                    "constant_value": [
                      {
                        "key": "Environment",
                        "propagate_at_launch": true,
                        "value": "development"
                      }
                    ]
                  },
                  "user_data": {
                    "references": [
                      "path.module",
                      "var.cluster_tag_key",
                      "var.cluster_name"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "data.aws_vpc.default.id",
                      "data.aws_vpc.default"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "asg_name": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.autoscaling_group.name",
                          "aws_autoscaling_group.autoscaling_group"
                        ]
                      },
                      "description": "This is the name for the autoscaling group generated by the module"
                    },
                    "cluster_size": {
                      "expression": {
                        "references": [
                          "aws_autoscaling_group.autoscaling_group.desired_capacity",
                          "aws_autoscaling_group.autoscaling_group"
                        ]
                      },
                      "description": "This is the desired size of the consul cluster in the autoscaling group"
                    },
                    "cluster_tag_key": {
                      "expression": {
                        "references": [
                          "var.cluster_tag_key"
                        ]
                      },
                      "description": "This is the tag key used to allow the consul servers to autojoin"
                    },
                    "cluster_tag_value": {
                      "expression": {
                        "references": [
                          "var.cluster_tag_value"
                        ]
                      },
                      "description": "This is the tag value used to allow the consul servers to autojoin"
                    },
                    "iam_role_arn": {
                      "expression": {
                        "references": [
                          "aws_iam_role.instance_role"
                        ]
                      },
                      "description": "This is the arn of instance role if enable_iam_setup variable is set to true"
                    },
                    "iam_role_id": {
                      "expression": {
                        "references": [
                          "aws_iam_role.instance_role"
                        ]
                      },
                      "description": "This is the id of instance role if enable_iam_setup variable is set to true"
                    },
                    "launch_config_name": {
                      "expression": {
                        "references": [
                          "aws_launch_configuration.launch_configuration.name",
                          "aws_launch_configuration.launch_configuration"
                        ]
                      },
                      "description": "This is the name of the launch_configuration used to bootstrap the cluster instances"
                    },
                    "security_group_id": {
                      "expression": {
                        "references": [
                          "aws_security_group.lc_security_group.id",
                          "aws_security_group.lc_security_group"
                        ]
                      },
                      "description": "This is the id of security group that governs ingress and egress for the cluster instances"
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_autoscaling_group.autoscaling_group",
                      "mode": "managed",
                      "type": "aws_autoscaling_group",
                      "name": "autoscaling_group",
                      "provider_config_key": "aws",
                      "expressions": {
                        "availability_zones": {
                          "references": [
                            "var.availability_zones"
                          ]
                        },
                        "desired_capacity": {
                          "references": [
                            "var.cluster_size"
                          ]
                        },
                        "enabled_metrics": {
                          "references": [
                            "var.enabled_metrics"
                          ]
                        },
                        "health_check_grace_period": {
                          "references": [
                            "var.health_check_grace_period"
                          ]
                        },
                        "health_check_type": {
                          "references": [
                            "var.health_check_type"
                          ]
                        },
                        "launch_configuration": {
                          "references": [
                            "aws_launch_configuration.launch_configuration.name",
                            "aws_launch_configuration.launch_configuration"
                          ]
                        },
                        "max_size": {
                          "references": [
                            "var.cluster_size"
                          ]
                        },
                        "min_size": {
                          "references": [
                            "var.cluster_size"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "protect_from_scale_in": {
                          "references": [
                            "var.protect_from_scale_in"
                          ]
                        },
                        "service_linked_role_arn": {
                          "references": [
                            "var.service_linked_role_arn"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.cluster_name",
                            "var.cluster_tag_key",
                            "var.cluster_tag_value",
                            "var.tags"
                          ]
                        },
                        "termination_policies": {
                          "references": [
                            "var.termination_policies"
                          ]
                        },
                        "vpc_zone_identifier": {
                          "references": [
                            "var.subnet_ids"
                          ]
                        },
                        "wait_for_capacity_timeout": {
                          "references": [
                            "var.wait_for_capacity_timeout"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_iam_instance_profile.instance_profile",
                      "mode": "managed",
                      "type": "aws_iam_instance_profile",
                      "name": "instance_profile",
                      "provider_config_key": "aws",
                      "expressions": {
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "path": {
                          "references": [
                            "var.instance_profile_path"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.instance_role"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.enable_iam_setup"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role.instance_role",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "instance_role",
                      "provider_config_key": "aws",
                      "expressions": {
                        "assume_role_policy": {
                          "references": [
                            "data.aws_iam_policy_document.instance_role.json",
                            "data.aws_iam_policy_document.instance_role"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "permissions_boundary": {
                          "references": [
                            "var.iam_permissions_boundary"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "var.enable_iam_setup"
                        ]
                      }
                    },
                    {
                      "address": "aws_launch_configuration.launch_configuration",
                      "mode": "managed",
                      "type": "aws_launch_configuration",
                      "name": "launch_configuration",
                      "provider_config_key": "aws",
                      "expressions": {
                        "associate_public_ip_address": {
                          "references": [
                            "var.associate_public_ip_address"
                          ]
                        },
                        "ebs_optimized": {
                          "references": [
                            "var.root_volume_ebs_optimized"
                          ]
                        },
                        "iam_instance_profile": {
                          "references": [
                            "var.enable_iam_setup",
                            "aws_iam_instance_profile.instance_profile",
                            "var.iam_instance_profile_name"
                          ]
                        },
                        "image_id": {
                          "references": [
                            "var.ami_id"
                          ]
                        },
                        "instance_type": {
                          "references": [
                            "var.instance_type"
                          ]
                        },
                        "key_name": {
                          "references": [
                            "var.ssh_key_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "placement_tenancy": {
                          "references": [
                            "var.tenancy"
                          ]
                        },
                        "root_block_device": [
                          {
                            "delete_on_termination": {
                              "references": [
                                "var.root_volume_delete_on_termination"
                              ]
                            },
                            "encrypted": {
                              "references": [
                                "var.root_volume_encrypted"
                              ]
                            },
                            "volume_size": {
                              "references": [
                                "var.root_volume_size"
                              ]
                            },
                            "volume_type": {
                              "references": [
                                "var.root_volume_type"
                              ]
                            }
                          }
                        ],
                        "security_groups": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group",
                            "var.additional_security_group_ids"
                          ]
                        },
                        "spot_price": {
                          "references": [
                            "var.spot_price"
                          ]
                        },
                        "user_data": {
                          "references": [
                            "var.user_data"
                          ]
                        }
                      },
                      "schema_version": 0
                    },
                    {
                      "address": "aws_security_group.lc_security_group",
                      "mode": "managed",
                      "type": "aws_security_group",
                      "name": "lc_security_group",
                      "provider_config_key": "aws",
                      "expressions": {
                        "description": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.cluster_name",
                            "var.security_group_tags"
                          ]
                        },
                        "vpc_id": {
                          "references": [
                            "var.vpc_id"
                          ]
                        }
                      },
                      "schema_version": 1
                    },
                    {
                      "address": "aws_security_group_rule.allow_all_outbound",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_all_outbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_blocks": {
                          "constant_value": [
                            "0.0.0.0/0"
                          ]
                        },
                        "from_port": {
                          "constant_value": 0
                        },
                        "protocol": {
                          "constant_value": "-1"
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group"
                          ]
                        },
                        "to_port": {
                          "constant_value": 0
                        },
                        "type": {
                          "constant_value": "egress"
                        }
                      },
                      "schema_version": 2
                    },
                    {
                      "address": "aws_security_group_rule.allow_ssh_inbound",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_ssh_inbound",
                      "provider_config_key": "aws",
                      "expressions": {
                        "cidr_blocks": {
                          "references": [
                            "var.allowed_ssh_cidr_blocks"
                          ]
                        },
                        "from_port": {
                          "references": [
                            "var.ssh_port"
                          ]
                        },
                        "protocol": {
                          "constant_value": "tcp"
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.ssh_port"
                          ]
                        },
                        "type": {
                          "constant_value": "ingress"
                        }
                      },
                      "schema_version": 2,
                      "count_expression": {
                        "references": [
                          "var.allowed_ssh_cidr_blocks"
                        ]
                      }
                    },
                    {
                      "address": "aws_security_group_rule.allow_ssh_inbound_from_security_group_ids",
                      "mode": "managed",
                      "type": "aws_security_group_rule",
                      "name": "allow_ssh_inbound_from_security_group_ids",
                      "provider_config_key": "aws",
                      "expressions": {
                        "from_port": {
                          "references": [
                            "var.ssh_port"
                          ]
                        },
                        "protocol": {
                          "constant_value": "tcp"
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group"
                          ]
                        },
                        "source_security_group_id": {
                          "references": [
                            "var.allowed_ssh_security_group_ids",
                            "count.index"
                          ]
                        },
                        "to_port": {
                          "references": [
                            "var.ssh_port"
                          ]
                        },
                        "type": {
                          "constant_value": "ingress"
                        }
                      },
                      "schema_version": 2,
                      "count_expression": {
                        "references": [
                          "var.allowed_ssh_security_group_count"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_policy_document.instance_role",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "instance_role",
                      "provider_config_key": "aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "sts:AssumeRole"
                              ]
                            },
                            "effect": {
                              "constant_value": "Allow"
                            },
                            "principals": [
                              {
                                "identifiers": {
                                  "constant_value": [
                                    "ec2.amazonaws.com"
                                  ]
                                },
                                "type": {
                                  "constant_value": "Service"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "schema_version": 0
                    }
                  ],
                  "module_calls": {
                    "iam_policies": {
                      "source": "../consul-iam-policies",
                      "expressions": {
                        "enabled": {
                          "references": [
                            "var.enable_iam_setup"
                          ]
                        },
                        "iam_role_id": {
                          "references": [
                            "aws_iam_role.instance_role"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "aws_iam_role_policy.auto_discover_cluster",
                            "mode": "managed",
                            "type": "aws_iam_role_policy",
                            "name": "auto_discover_cluster",
                            "provider_config_key": "aws",
                            "expressions": {
                              "name": {
                                "constant_value": "auto-discover-cluster"
                              },
                              "policy": {
                                "references": [
                                  "data.aws_iam_policy_document.auto_discover_cluster.json",
                                  "data.aws_iam_policy_document.auto_discover_cluster"
                                ]
                              },
                              "role": {
                                "references": [
                                  "var.iam_role_id"
                                ]
                              }
                            },
                            "schema_version": 0,
                            "count_expression": {
                              "references": [
                                "var.enabled"
                              ]
                            }
                          },
                          {
                            "address": "data.aws_iam_policy_document.auto_discover_cluster",
                            "mode": "data",
                            "type": "aws_iam_policy_document",
                            "name": "auto_discover_cluster",
                            "provider_config_key": "aws",
                            "expressions": {
                              "statement": [
                                {
                                  "actions": {
                                    "constant_value": [
                                      "ec2:DescribeInstances",
                                      "ec2:DescribeTags",
                                      "autoscaling:DescribeAutoScalingGroups"
                                    ]
                                  },
                                  "effect": {
                                    "constant_value": "Allow"
                                  },
                                  "resources": {
                                    "constant_value": [
                                      "*"
                                    ]
                                  }
                                }
                              ]
                            },
                            "schema_version": 0
                          }
                        ],
                        "variables": {
                          "enabled": {
                            "default": true,
                            "description": "Give the option to disable this module if required"
                          },
                          "iam_role_id": {
                            "description": "The ID of the IAM Role to which these IAM policies should be attached"
                          }
                        }
                      }
                    },
                    "security_group_rules": {
                      "source": "../consul-security-group-rules",
                      "expressions": {
                        "allowed_inbound_cidr_blocks": {
                          "references": [
                            "var.allowed_inbound_cidr_blocks"
                          ]
                        },
                        "allowed_inbound_security_group_count": {
                          "references": [
                            "var.allowed_inbound_security_group_count"
                          ]
                        },
                        "allowed_inbound_security_group_ids": {
                          "references": [
                            "var.allowed_inbound_security_group_ids"
                          ]
                        },
                        "cli_rpc_port": {
                          "references": [
                            "var.cli_rpc_port"
                          ]
                        },
                        "dns_port": {
                          "references": [
                            "var.dns_port"
                          ]
                        },
                        "enable_https_port": {
                          "references": [
                            "var.enable_https_port"
                          ]
                        },
                        "http_api_port": {
                          "references": [
                            "var.http_api_port"
                          ]
                        },
                        "https_api_port": {
                          "references": [
                            "var.https_api_port"
                          ]
                        },
                        "security_group_id": {
                          "references": [
                            "aws_security_group.lc_security_group.id",
                            "aws_security_group.lc_security_group"
                          ]
                        },
                        "serf_lan_port": {
                          "references": [
                            "var.serf_lan_port"
                          ]
                        },
                        "serf_wan_port": {
                          "references": [
                            "var.serf_wan_port"
                          ]
                        },
                        "server_rpc_port": {
                          "references": [
                            "var.server_rpc_port"
                          ]
                        }
                      },
                      "module": {
                        "resources": [
                          {
                            "address": "aws_security_group_rule.allow_cli_rpc_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_cli_rpc_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_cli_rpc_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_cli_rpc_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_cli_rpc_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_cli_rpc_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.cli_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_tcp_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_tcp_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_tcp_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_tcp_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_tcp_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_tcp_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_udp_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_udp_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_udp_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_udp_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_dns_udp_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_dns_udp_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.dns_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_http_api_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_http_api_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_http_api_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_http_api_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_http_api_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_http_api_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.http_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_https_api_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_https_api_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.enable_https_port",
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_https_api_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_https_api_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.enable_https_port",
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_https_api_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_https_api_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.https_api_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.enable_https_port"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_tcp_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_tcp_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_tcp_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_tcp_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_tcp_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_tcp_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_udp_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_udp_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_udp_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_udp_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_serf_wan_udp_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_serf_wan_udp_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "udp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.serf_wan_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          },
                          {
                            "address": "aws_security_group_rule.allow_server_rpc_inbound",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_server_rpc_inbound",
                            "provider_config_key": "aws",
                            "expressions": {
                              "cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "from_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_cidr_blocks"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_server_rpc_inbound_from_security_group_ids",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_server_rpc_inbound_from_security_group_ids",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "source_security_group_id": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids",
                                  "count.index"
                                ]
                              },
                              "to_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2,
                            "count_expression": {
                              "references": [
                                "var.allowed_inbound_security_group_count"
                              ]
                            }
                          },
                          {
                            "address": "aws_security_group_rule.allow_server_rpc_inbound_from_self",
                            "mode": "managed",
                            "type": "aws_security_group_rule",
                            "name": "allow_server_rpc_inbound_from_self",
                            "provider_config_key": "aws",
                            "expressions": {
                              "from_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "protocol": {
                                "constant_value": "tcp"
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "self": {
                                "constant_value": true
                              },
                              "to_port": {
                                "references": [
                                  "var.server_rpc_port"
                                ]
                              },
                              "type": {
                                "constant_value": "ingress"
                              }
                            },
                            "schema_version": 2
                          }
                        ],
                        "module_calls": {
                          "client_security_group_rules": {
                            "source": "../consul-client-security-group-rules",
                            "expressions": {
                              "allowed_inbound_cidr_blocks": {
                                "references": [
                                  "var.allowed_inbound_cidr_blocks"
                                ]
                              },
                              "allowed_inbound_security_group_count": {
                                "references": [
                                  "var.allowed_inbound_security_group_count"
                                ]
                              },
                              "allowed_inbound_security_group_ids": {
                                "references": [
                                  "var.allowed_inbound_security_group_ids"
                                ]
                              },
                              "security_group_id": {
                                "references": [
                                  "var.security_group_id"
                                ]
                              },
                              "serf_lan_port": {
                                "references": [
                                  "var.serf_lan_port"
                                ]
                              }
                            },
                            "module": {
                              "resources": [
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_tcp_inbound",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_tcp_inbound",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "cidr_blocks": {
                                      "references": [
                                        "var.allowed_inbound_cidr_blocks"
                                      ]
                                    },
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "tcp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2,
                                  "count_expression": {
                                    "references": [
                                      "var.allowed_inbound_cidr_blocks"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_tcp_inbound_from_security_group_ids",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_tcp_inbound_from_security_group_ids",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "tcp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "source_security_group_id": {
                                      "references": [
                                        "var.allowed_inbound_security_group_ids",
                                        "count.index"
                                      ]
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2,
                                  "count_expression": {
                                    "references": [
                                      "var.allowed_inbound_security_group_count"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_tcp_inbound_from_self",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_tcp_inbound_from_self",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "tcp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "self": {
                                      "constant_value": true
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_udp_inbound",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_udp_inbound",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "cidr_blocks": {
                                      "references": [
                                        "var.allowed_inbound_cidr_blocks"
                                      ]
                                    },
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "udp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2,
                                  "count_expression": {
                                    "references": [
                                      "var.allowed_inbound_cidr_blocks"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_udp_inbound_from_security_group_ids",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_udp_inbound_from_security_group_ids",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "udp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "source_security_group_id": {
                                      "references": [
                                        "var.allowed_inbound_security_group_ids",
                                        "count.index"
                                      ]
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2,
                                  "count_expression": {
                                    "references": [
                                      "var.allowed_inbound_security_group_count"
                                    ]
                                  }
                                },
                                {
                                  "address": "aws_security_group_rule.allow_serf_lan_udp_inbound_from_self",
                                  "mode": "managed",
                                  "type": "aws_security_group_rule",
                                  "name": "allow_serf_lan_udp_inbound_from_self",
                                  "provider_config_key": "aws",
                                  "expressions": {
                                    "from_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "protocol": {
                                      "constant_value": "udp"
                                    },
                                    "security_group_id": {
                                      "references": [
                                        "var.security_group_id"
                                      ]
                                    },
                                    "self": {
                                      "constant_value": true
                                    },
                                    "to_port": {
                                      "references": [
                                        "var.serf_lan_port"
                                      ]
                                    },
                                    "type": {
                                      "constant_value": "ingress"
                                    }
                                  },
                                  "schema_version": 2
                                }
                              ],
                              "variables": {
                                "allowed_inbound_cidr_blocks": {
                                  "default": [],
                                  "description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Consul"
                                },
                                "allowed_inbound_security_group_count": {
                                  "default": 0,
                                  "description": "The number of entries in var.allowed_inbound_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only."
                                },
                                "allowed_inbound_security_group_ids": {
                                  "default": [],
                                  "description": "A list of security group IDs that will be allowed to connect to Consul"
                                },
                                "security_group_id": {
                                  "description": "The ID of the security group to which we should add the Consul security group rules"
                                },
                                "serf_lan_port": {
                                  "default": 8301,
                                  "description": "The port used to handle gossip in the LAN. Required by all agents."
                                }
                              }
                            }
                          }
                        },
                        "variables": {
                          "allowed_inbound_cidr_blocks": {
                            "default": [],
                            "description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Consul"
                          },
                          "allowed_inbound_security_group_count": {
                            "default": 0,
                            "description": "The number of entries in var.allowed_inbound_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only."
                          },
                          "allowed_inbound_security_group_ids": {
                            "default": [],
                            "description": "A list of security group IDs that will be allowed to connect to Consul"
                          },
                          "cli_rpc_port": {
                            "default": 8400,
                            "description": "The port used by all agents to handle RPC from the CLI."
                          },
                          "dns_port": {
                            "default": 8600,
                            "description": "The port used to resolve DNS queries."
                          },
                          "enable_https_port": {
                            "default": false,
                            "description": "If set to true, allow access to the Consul HTTPS port defined via the https_api_port variable."
                          },
                          "http_api_port": {
                            "default": 8500,
                            "description": "The port used by clients to talk to the HTTP API"
                          },
                          "https_api_port": {
                            "default": 8501,
                            "description": "The port used by clients to talk to the HTTPS API. Only used if enable_https_port is set to true."
                          },
                          "security_group_id": {
                            "description": "The ID of the security group to which we should add the Consul security group rules"
                          },
                          "serf_lan_port": {
                            "default": 8301,
                            "description": "The port used to handle gossip in the LAN. Required by all agents."
                          },
                          "serf_wan_port": {
                            "default": 8302,
                            "description": "The port used by servers to gossip over the WAN to other servers."
                          },
                          "server_rpc_port": {
                            "default": 8300,
                            "description": "The port used by servers to handle incoming requests from other agents."
                          }
                        }
                      }
                    }
                  },
                  "variables": {
                    "additional_security_group_ids": {
                      "default": [],
                      "description": "A list of additional security group IDs to add to Consul EC2 Instances"
                    },
                    "allowed_inbound_cidr_blocks": {
                      "description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow connections to Consul"
                    },
                    "allowed_inbound_security_group_count": {
                      "default": 0,
                      "description": "The number of entries in var.allowed_inbound_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only."
                    },
                    "allowed_inbound_security_group_ids": {
                      "default": [],
                      "description": "A list of security group IDs that will be allowed to connect to Consul"
                    },
                    "allowed_ssh_cidr_blocks": {
                      "default": [],
                      "description": "A list of CIDR-formatted IP address ranges from which the EC2 Instances will allow SSH connections"
                    },
                    "allowed_ssh_security_group_count": {
                      "default": 0,
                      "description": "The number of entries in var.allowed_ssh_security_group_ids. Ideally, this value could be computed dynamically, but we pass this variable to a Terraform resource's 'count' property and Terraform requires that 'count' be computed with literals or data sources only."
                    },
                    "allowed_ssh_security_group_ids": {
                      "default": [],
                      "description": "A list of security group IDs from which the EC2 Instances will allow SSH connections"
                    },
                    "ami_id": {
                      "description": "The ID of the AMI to run in this cluster. Should be an AMI that had Consul installed and configured by the install-consul module."
                    },
                    "associate_public_ip_address": {
                      "default": false,
                      "description": "If set to true, associate a public IP address with each EC2 Instance in the cluster."
                    },
                    "availability_zones": {
                      "default": null,
                      "description": "The availability zones into which the EC2 Instances should be deployed. We recommend one availability zone per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty."
                    },
                    "cli_rpc_port": {
                      "default": 8400,
                      "description": "The port used by all agents to handle RPC from the CLI."
                    },
                    "cluster_name": {
                      "description": "The name of the Consul cluster (e.g. consul-stage). This variable is used to namespace all resources created by this module."
                    },
                    "cluster_size": {
                      "default": 3,
                      "description": "The number of nodes to have in the Consul cluster. We strongly recommended that you use either 3 or 5."
                    },
                    "cluster_tag_key": {
                      "default": "consul-servers",
                      "description": "Add a tag with this key and the value var.cluster_tag_value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster."
                    },
                    "cluster_tag_value": {
                      "default": "auto-join",
                      "description": "Add a tag with key var.clsuter_tag_key and this value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster."
                    },
                    "dns_port": {
                      "default": 8600,
                      "description": "The port used to resolve DNS queries."
                    },
                    "enable_https_port": {
                      "default": false,
                      "description": "If set to true, allow access to the Consul HTTPS port defined via the https_api_port variable."
                    },
                    "enable_iam_setup": {
                      "default": true,
                      "description": "If true, create the IAM Role, IAM Instance Profile, and IAM Policies. If false, these will not be created, and you can pass in your own IAM Instance Profile via var.iam_instance_profile_name."
                    },
                    "enabled_metrics": {
                      "default": [],
                      "description": "List of autoscaling group metrics to enable."
                    },
                    "health_check_grace_period": {
                      "default": 300,
                      "description": "Time, in seconds, after instance comes into service before checking health."
                    },
                    "health_check_type": {
                      "default": "EC2",
                      "description": "Controls how health checking is done. Must be one of EC2 or ELB."
                    },
                    "http_api_port": {
                      "default": 8500,
                      "description": "The port used by clients to talk to the HTTP API"
                    },
                    "https_api_port": {
                      "default": 8501,
                      "description": "The port used by clients to talk to the HTTPS API. Only used if enable_https_port is set to true."
                    },
                    "iam_instance_profile_name": {
                      "default": null,
                      "description": "If enable_iam_setup is false then this will be the name of the IAM instance profile to attach"
                    },
                    "iam_permissions_boundary": {
                      "default": null,
                      "description": "If set, restricts the created IAM role to the given permissions boundary"
                    },
                    "instance_profile_path": {
                      "default": "/",
                      "description": "Path in which to create the IAM instance profile."
                    },
                    "instance_type": {
                      "description": "The type of EC2 Instances to run for each node in the cluster (e.g. t2.micro)."
                    },
                    "lifecycle_hooks": {
                      "default": {},
                      "description": "The lifecycle hooks to create that are triggered by the launch event. This is a map where the keys are the name of the hook and the values are an object with the keys and values defined in the lifecycle_hook block of the aws_autoscaling_group resource.  Default is no launch hooks"
                    },
                    "protect_from_scale_in": {
                      "default": false,
                      "description": "(Optional) Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events."
                    },
                    "root_volume_delete_on_termination": {
                      "default": true,
                      "description": "Whether the volume should be destroyed on instance termination."
                    },
                    "root_volume_ebs_optimized": {
                      "default": false,
                      "description": "If true, the launched EC2 instance will be EBS-optimized."
                    },
                    "root_volume_encrypted": {
                      "default": false,
                      "description": "Encrypt the root volume at rest"
                    },
                    "root_volume_size": {
                      "default": 50,
                      "description": "The size, in GB, of the root EBS volume."
                    },
                    "root_volume_type": {
                      "default": "standard",
                      "description": "The type of volume. Must be one of: standard, gp2, or io1."
                    },
                    "security_group_tags": {
                      "default": {},
                      "description": "Tags to be applied to the LC security group"
                    },
                    "serf_lan_port": {
                      "default": 8301,
                      "description": "The port used to handle gossip in the LAN. Required by all agents."
                    },
                    "serf_wan_port": {
                      "default": 8302,
                      "description": "The port used by servers to gossip over the WAN to other servers."
                    },
                    "server_rpc_port": {
                      "default": 8300,
                      "description": "The port used by servers to handle incoming requests from other agents."
                    },
                    "service_linked_role_arn": {
                      "default": null,
                      "description": "The ARN of the service-linked role that the ASG will use to call other AWS services"
                    },
                    "spot_price": {
                      "default": null,
                      "description": "The maximum hourly price to pay for EC2 Spot Instances."
                    },
                    "ssh_key_name": {
                      "default": null,
                      "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair."
                    },
                    "ssh_port": {
                      "default": 22,
                      "description": "The port used for SSH connections"
                    },
                    "subnet_ids": {
                      "default": null,
                      "description": "The subnet IDs into which the EC2 Instances should be deployed. We recommend one subnet ID per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty."
                    },
                    "tags": {
                      "default": [],
                      "description": "List of extra tag blocks added to the autoscaling group configuration. Each element in the list is a map containing keys 'key', 'value', and 'propagate_at_launch' mapped to the respective values."
                    },
                    "tenancy": {
                      "default": null,
                      "description": "The tenancy of the instance. Must be one of: null, default or dedicated. For EC2 Spot Instances only null or dedicated can be used."
                    },
                    "termination_policies": {
                      "default": "Default",
                      "description": "A list of policies to decide how the instances in the auto scale group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, Default."
                    },
                    "user_data": {
                      "description": "A User Data script to execute while the server is booting. We recommend passing in a bash script that executes the run-consul script, which should have been installed in the Consul AMI by the install-consul module."
                    },
                    "vpc_id": {
                      "description": "The ID of the VPC in which to deploy the Consul cluster"
                    },
                    "wait_for_capacity_timeout": {
                      "default": "10m",
                      "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. Setting this to '0' causes Terraform to skip all Capacity Waiting behavior."
                    }
                  }
                }
              }
            },
            "variables": {
              "ami_id": {
                "default": null,
                "description": "The ID of the AMI to run in the cluster. This should be an AMI built from the Packer template under examples/consul-ami/consul.json. To keep this example simple, we run the same AMI on both server and client nodes, but in real-world usage, your client nodes would also run your apps. If the default value is used, Terraform will look up the latest AMI build automatically."
              },
              "cluster_name": {
                "default": "consul-example",
                "description": "What to name the Consul cluster and all of its associated resources"
              },
              "cluster_tag_key": {
                "default": "consul-servers",
                "description": "The tag the EC2 Instances will look for to automatically discover each other and form a cluster."
              },
              "enable_https_port": {
                "default": false,
                "description": "If set to true, allow access to the Consul HTTPS port defined via the https_api_port variable."
              },
              "num_clients": {
                "default": 6,
                "description": "The number of Consul client nodes to deploy. You typically run the Consul client alongside your apps, so set this value to however many Instances make sense for your app code."
              },
              "num_servers": {
                "default": 3,
                "description": "The number of Consul server nodes to deploy. We strongly recommend using 3 or 5."
              },
              "spot_price": {
                "default": null,
                "description": "The maximum hourly price to pay for EC2 Spot Instances."
              },
              "ssh_key_name": {
                "default": null,
                "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair."
              },
              "vpc_id": {
                "default": null,
                "description": "The ID of the VPC in which the nodes will be deployed.  Uses default VPC if not supplied."
              }
            }
          },
          "version_constraint": "0.11.0"
        }
      },
      "variables": {
        "availability_zone_names": {
          "default": [
            "us-west-1a"
          ]
        },
        "image_id": {
          "default": "ami-0ff8a91507f77f867",
          "description": "The id of the machine image (AMI) to use for the server."
        }
      }
    }
  },
  "relevant_attributes": [
    {
      "resource": "module.consul.module.consul_clients.aws_launch_configuration.launch_configuration",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.consul.module.consul_servers.aws_launch_configuration.launch_configuration",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.consul.data.aws_region.current",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.consul.module.consul_servers.aws_autoscaling_group.autoscaling_group",
      "attribute": [
        "desired_capacity"
      ]
    },
    {
      "resource": "module.consul.module.consul_servers.aws_autoscaling_group.autoscaling_group",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.consul.module.consul_servers.data.aws_iam_policy_document.instance_role",
      "attribute": [
        "json"
      ]
    },
    {
      "resource": "module.consul.module.consul_clients.data.aws_iam_policy_document.instance_role",
      "attribute": [
        "json"
      ]
    },
    {
      "resource": "module.consul.module.consul_servers.aws_iam_instance_profile.instance_profile",
      "attribute": []
    },
    {
      "resource": "module.consul.data.aws_ami.consul",
      "attribute": [
        "image_id"
      ]
    },
    {
      "resource": "module.consul.module.consul_servers.aws_iam_role.instance_role",
      "attribute": []
    },
    {
      "resource": "module.consul.module.consul_servers.aws_security_group.lc_security_group",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.consul.module.consul_clients.aws_autoscaling_group.autoscaling_group",
      "attribute": [
        "desired_capacity"
      ]
    },
    {
      "resource": "module.consul.module.consul_clients.module.iam_policies.data.aws_iam_policy_document.auto_discover_cluster",
      "attribute": [
        "json"
      ]
    },
    {
      "resource": "aws_instance.example",
      "attribute": [
        "private_ip"
      ]
    },
    {
      "resource": "module.consul.module.consul_clients.aws_autoscaling_group.autoscaling_group",
      "attribute": [
        "name"
      ]
    },
    {
      "resource": "module.consul.module.consul_clients.aws_iam_instance_profile.instance_profile",
      "attribute": []
    },
    {
      "resource": "module.consul.data.aws_subnet_ids.default",
      "attribute": [
        "ids"
      ]
    },
    {
      "resource": "module.consul.data.aws_vpc.default",
      "attribute": [
        "id"
      ]
    },
    {
      "resource": "module.consul.module.consul_clients.aws_iam_role.instance_role",
      "attribute": []
    },
    {
      "resource": "module.consul.module.consul_servers.module.iam_policies.data.aws_iam_policy_document.auto_discover_cluster",
      "attribute": [
        "json"
      ]
    },
    {
      "resource": "module.consul.module.consul_clients.aws_security_group.lc_security_group",
      "attribute": [
        "id"
      ]
    }
  ]
}
