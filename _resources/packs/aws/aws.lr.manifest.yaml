resources:
  aws:
    docs:
      desc: |
        The `aws` can be used to assess the configuration of AWS accounts. It provides the `aws.regions` field for returning a list of enabled AWS regions in the account, and the `aws.vpcs` field which provides a list of VPCs configured within the account.
    fields:
      regions: {}
      vpcs: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: 'AWS Documentation: Managing AWS Regions'
        url: https://docs.aws.amazon.com/general/latest/gr/rande-manage.html
      - title: 'AWS Documentation: Security in Amazon Virtual Private Cloud'
        url: https://docs.aws.amazon.com/vpc/latest/userguide/security.html
    snippets:
      - query: aws.regions
        title: List all enabled regions within the AWS account
      - query: aws.vpcs
        title: List of `aws.vpc` resources for all VPCs across all enabled regions
      - query: "aws.vpcs {\n  arn \n  id \n  state \n  isDefault \n  region \n  flowLogs\n
        \ routeTables\n}\n"
        title: List of `aws.vpc` resources for all VPCs across all enabled regions and
          the values for specified fields
      - query: |
          aws.vpcs.all( flowLogs.any(status == "ACTIVE") )
        title: Ensure VPC flow logging is enabled in all VPCs
  aws.accessAnalyzer:
    docs:
      desc: |
        The `aws.accessAnalyzer` resource returns a list of `aws.accessAnalyzer.analyzer` resources representing all of the AWS IAM Access Analyzers configured across the AWS account.
    fields:
      analyzers: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Using AWS IAM Access Analyzer
        url: https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html
    snippets:
      - query: aws.accessAnalyzer.analyzers
        title: Return a list of `aws.accessAnalyzer.analyzer` resources representing
          all of the AWS IAM Access Analyzers configured across the AWS account
      - query: "aws.accessAnalyzer.analyzers { \n  arn \n  name \n  status \n  type
        \n}\n"
        title: Return a list of `aws.accessAnalyzer.analyzer` resources and the value
          for specified fields
      - query: |
          aws.accessAnalyzer.analyzers.all(
            status == "ACTIVE"
          )
        title: Ensure that IAM Access analyzer is enabled for all regions
  aws.accessanalyzer.analyzer:
    fields:
      arn: {}
      name: {}
      status: {}
      tags:
        min_mondoo_version: 5.16.0
      type: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.account:
    docs:
      desc: |
        The `aws.account` resource provides configuration for AWS accounts including the account number, and configured aliases.
    fields:
      aliases: {}
      id: {}
      organization:
        min_mondoo_version: 6.11.0
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    snippets:
      - query: "aws.account { \n  id \n  aliases \n}\n"
        title: Return the account id (number) and any configured account aliases
  aws.acm:
    docs:
      desc: The `aws.acm` resource can be used to assess the configuration of the
        AWS Certificates Manager service within the account. This resource returns
        a list of `aws.acm.certificate` resources for all ACM certificates found within
        the account.
    fields:
      certificates: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: What Is AWS Certificate Manager?
        url: https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html
      - title: Security in AWS Certificate Manager
        url: https://docs.aws.amazon.com/acm/latest/userguide/security.html
    snippets:
      - query: aws.acm.certificates
        title: Return a list of `aws.acm.certificate` resources within the AWS account
      - query: "aws.acm.certificates {\n  arn\n  notBefore\n  notAfter \n  createdAt\n
        \ domainName\n  status\n  subject\n  certificate() \n}\n"
        title: Return a list of `aws.acm.certificate` resources within the AWS account
          along with values for specified fields
      - query: |
          aws.acm.certificates.
            where( status != /PENDING_VALIDATION/ ).
            all (notAfter - notBefore <= 90 * time.day)
        title: Checks whether ACM Certificates in your account are marked for expiration
          within 90 days
  aws.acm.certificate:
    docs:
      desc: |
        The `aws.acm.certificate` resource provides fields for assessing the configuration of AWS ACM certificates. For usage see the `aws.acm` resource documentation.
    fields:
      arn: {}
      certificate: {}
      createdAt: {}
      domainName: {}
      notAfter: {}
      notBefore: {}
      status: {}
      subject: {}
      tags:
        min_mondoo_version: 5.16.0
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.apigateway:
    docs:
      desc: The `aws.apigateway` resource can be used to assess the configuration
        of the AWS API Gateway service.
    fields:
      restApis: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: What is Amazon API Gateway?
        url: https://docs.aws.amazon.com/apigateway/latest/developerguide/welcome.html
      - title: Security in Amazon API Gateway
        url: https://docs.aws.amazon.com/apigateway/latest/developerguide/security.html
    snippets:
      - query: aws.apigateway.restApis
        title: Return a list of `aws.apigateway.restapi` resources for all REST APIs
          configured with the account across all enabled regions
      - query: |
          aws.apigateway.restApis {
            createdDate
            description
            stages
            region
            arn
            id
            name
          }
        title: Return a list of `aws.apigateway.restapi` resources for all REST APIs
          configured with the account across all enabled regions and the value for specified
          fields
      - query: "aws.apigateway.restApis.all(stages.all(\n  methodSettings['CachingEnabled']
        == true && \n    methodSettings['CacheDataEncrypted'] == true\n))\n"
        title: Checks that all methods in Amazon API Gateway have caching enabled and
          encrypted
      - query: |
          aws.apigateway.restApis.all(stages.all(
          methodSettings['LoggingLevel'] == "ERROR" || methodSettings['LoggingLevel'] == "INFO"
          ))
        title: Checks that all methods in Amazon API Gateway have logging enabled
  aws.apigateway.restapi:
    docs:
      desc: |
        The `aws.apigateway.restapi` resource provides fields representing an individual REST API configured within the AWS account. For usage see the `aws.apigateway` resource documentation.
    fields:
      arn: {}
      createdDate: {}
      description: {}
      id: {}
      name: {}
      region: {}
      stages: {}
      tags:
        min_mondoo_version: 5.16.0
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.apigateway.stage:
    docs:
      desc: |
        The `aws.apigateway.stage` resource provides fields representing an individual stage configured on a REST API. For usage see the `aws.apigateway` resource documentation.
    fields:
      arn: {}
      deploymentId: {}
      description: {}
      methodSettings: {}
      name: {}
      tracingEnabled: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    snippets:
      - query: "aws.apigateway.restApis { \n  arn \n  stages \n}\n"
        title: Return a list of AWS API Gateway REST APIs configured across all enabled
          regions in the AWS account and the values for the arn and stages
  aws.applicationAutoscaling:
    fields:
      namespace: {}
      scalableTargets: {}
    min_mondoo_version: 6.11.1
    platform:
      name:
        - aws
  aws.applicationautoscaling.target:
    fields:
      arn: {}
      maxCapacity: {}
      minCapacity: {}
      namespace: {}
      scalableDimension: {}
      suspendedState: {}
    is_private: true
    min_mondoo_version: 6.11.1
    platform:
      name:
        - aws
  aws.autoscaling:
    docs:
      desc: |
        The `aws.autoscaling` resource can be used to assess the configuration of AWS auto scaling groups within an AWS account. This resource provides the `.groups` field which returns a list of `aws.autoscaling.group` resources representing all auto scaling groups configured across all enabled regions across the account.
    fields:
      groups: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in Amazon EC2 Auto Scaling
        url: https://docs.aws.amazon.com/autoscaling/ec2/userguide/security.html
      - title: Compliance validation for Amazon EC2 Auto Scaling
        url: https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-compliance.html
    snippets:
      - query: "aws.autoscaling.groups { \n  arn \n  healthCheckType \n  loadBalancerNames
        \n  name \n}\n"
        title: Return a list of `aws.autoscaling.group` resources representing all auto
          scaling groups configured across all enabled regions across the account and
          the value for specified fields
      - query: "aws.autoscaling.groups.where(loadBalancerNames.length > 0) { \n  healthCheckType
        == \"ELB\" \n}\n"
        title: Checks that all autoscaling groups assoc with a load balancer use health
          checks
  aws.autoscaling.group:
    docs:
      desc: |
        The `aws.autoscaling.group` resource provides fields representing an individual AWS auto scaling group within the account. For usage see the `aws.autoscaling` resource documentation.
    fields:
      arn: {}
      healthCheckType: {}
      loadBalancerNames: {}
      name: {}
      tags:
        min_mondoo_version: 5.16.0
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.cloudtrail:
    docs:
      desc: |
        The `aws.cloudtrail` resource can be used to assess the configuration of AWS CloudTrails deployed within an AWS account. The resource provides the `.trails` field which creates a list of `aws.cloudtrail.trail` resources representing all CloudTrails configured across every enabled region.
    fields:
      trails: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security best practices in AWS CloudTrail
        url: https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html
    snippets:
      - query: |
          aws.cloudtrail.trails {
            arn
            name
            kmsKey
            isMultiRegionTrail
            isOrganizationTrail
            logFileValidationEnabled
            includeGlobalServiceEvents
            s3bucket
            snsTopicARN
            status
            logGroup
            cloudWatchLogsRoleArn
            eventSelectors
            region
          }
        title: Return a list of `aws.cloudtrail.trail` resources representing all AWS
          Cloud Trails configured across all enabled regions and the values for specified
          fields
      - query: "aws.cloudtrail.trails.any( \n  isMultiRegionTrail && status['IsLogging']
        \n)\n"
  aws.cloudtrail.trail:
    docs:
      desc: |
        The `aws.cloudtrail.trail` object represents an individual AWS CloudTrail configured within an account. For usage see the `aws.cloudtrail` resource.
    fields:
      arn: {}
      cloudWatchLogsRoleArn: {}
      eventSelectors: {}
      includeGlobalServiceEvents: {}
      isMultiRegionTrail: {}
      isOrganizationTrail: {}
      kmsKey: {}
      logFileValidationEnabled: {}
      logGroup: {}
      name: {}
      region: {}
      s3bucket: {}
      snsTopicARN: {}
      status: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.cloudwatch:
    docs:
      desc: |
        The `aws.cloudwatch` resource is used to assess the configuration of the AWS CloudWatch service.
    fields:
      alarms: {}
      logGroups: {}
      metrics: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    snippets:
      - query: aws.cloudwatch.logGroups
        title: Return a list of `aws.cloudwatch.loggroup` resources representing individual
          CloudWatch log groups configured across all enabled regions
      - query: aws.cloudwatch.metrics
        title: Return a list of `aws.cloudwatch.metric` resources representing individual
          CloudWatch metrics configured across all enabled regions
      - query: |
          aws.cloudwatch.alarms.all(
            actions.length > 0 == true &&
            insufficientDataActions.length > 0 == props.cloudwatchAlarmInsufficientDataActionRequired &&
            okActions.length > 0 == props.cloudwatchAlarmOkActionRequired
          )
        title: Checks that all cloudwatch alarms have at least one action enabled
  aws.cloudwatch.loggroup:
    docs:
      desc: |
        The `aws.cloudwatch.loggroup` object represents an individual AWS CloudWatch log group configured within an account. For usage see the `aws.cloudwatch` resource.
    fields:
      arn: {}
      kmsKey: {}
      metricsFilters: {}
      name: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.cloudwatch.loggroup.metricsfilter:
    docs:
      desc: |
        The `aws.cloudwatch.metricsfilter` object represents an individual AWS CloudWatch metrics filter configured within an account. For usage see the `aws.cloudwatch` resource.
    fields:
      filterName: {}
      filterPattern: {}
      id: {}
      metrics: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.cloudwatch.metric:
    docs:
      desc: |
        The `aws.cloudwatch.metric` object represents an individual AWS CloudWatch metric configured within an account. For usage see the `aws.cloudwatch` resource.
    fields:
      alarms: {}
      dimensions:
        min_mondoo_version: 5.17.1
      name: {}
      namespace: {}
      region: {}
      statistics:
        min_mondoo_version: 5.17.1
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.cloudwatch.metric.datapoint:
    fields:
      average: {}
      id: {}
      maximum: {}
      minimum: {}
      sum: {}
      timestamp: {}
      unit: {}
    is_private: true
    min_mondoo_version: 5.17.1
    platform:
      name:
        - aws
  aws.cloudwatch.metricdimension:
    fields:
      name: {}
      value: {}
    min_mondoo_version: 5.17.1
    platform:
      name:
        - aws
  aws.cloudwatch.metricsalarm:
    docs:
      desc: |
        The `aws.cloudwatch.metricsalarm` object represents an individual AWS CloudWatch metric alarm configured within an account. For usage see the `aws.cloudwatch` resource.
    fields:
      actions: {}
      arn: {}
      insufficientDataActions: {}
      metricName: {}
      metricNamespace: {}
      name: {}
      okActions: {}
      region: {}
      state: {}
      stateReason: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.cloudwatch.metricstatistics:
    fields:
      datapoints: {}
      label: {}
      name: {}
      namespace: {}
      region: {}
    min_mondoo_version: 5.17.1
    platform:
      name:
        - aws
  aws.codebuild:
    docs:
      desc: "The `aws.codebuild` resource is used to assess the configuration of the
        AWS CodeBuild service and the projects within. \n"
    fields:
      projects: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in AWS CodeBuild
        url: https://docs.aws.amazon.com/codebuild/latest/userguide/security.html
    snippets:
      - query: |
          aws.codebuild.projects {
            arn
            description
            name
            environment
            region
            source
          }
        title: Return a list of `aws.codebuild.project` resources representing all AWS
          CodeBuild projects configured across all enabled regions within the account
          and the values for specified fields
      - query: "aws.codebuild.projects { \n  environment ['EnvironmentVariables'].where(_['Name']
        == \"AWS_ACCESS_KEY_ID\") { _['Type'] != \"PLAINTEXT\"}\n  environment ['EnvironmentVariables'].where(_['Name']
        == \"AWS_SECRET_ACCESS_KEY\") { _['Type'] != \"PLAINTEXT\"} \n}\n"
        title: Checks that all projects containing env variables AWS_ACCESS_KEY_ID and
          AWS_SECRET_ACCESS_KEY are not in plaintext
      - query: "aws.codebuild.projects.where( source['Type'] == \"BITBUCKET\" || source['Type']
        == \"GITHUB\" ) { \n  source['Auth']['Type'] == \"OAUTH\"\n}\n"
        title: Checks that all projects using GitHub or Bitbucket as the source use
          oauth
  aws.codebuild.project:
    docs:
      desc: |
        The `aws.codebuild.project` resource provides fields representing an individual AWS CodeBuild project configured within the account. For usage see the `aws.codebuild` documentation.
    fields:
      arn: {}
      description: {}
      environment: {}
      name: {}
      region: {}
      source: {}
      tags:
        min_mondoo_version: 5.16.0
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.config:
    docs:
      desc: |
        The `aws.config` resource is used to assess the configuration of the AWS Config service. The resource provides the `.recorders` field which returns a list of `aws.config.recorder` resources representing all AWS Config recorders configured across all enabled regions, as well as the `.rules` field which returns a list of `aws.config.rule` resources representing all AWS Config rules configured across all enabled regions in the account.
    fields:
      recorders: {}
      rules: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in AWS Config
        url: https://docs.aws.amazon.com/config/latest/developerguide/security.html
      - title: AWS Config best practices
        url: https://aws.amazon.com/blogs/mt/aws-config-best-practices/
    snippets:
      - query: "aws.config.rules {\n  arn \n  state \n  source\n}\n"
        title: Return a list of `aws.config.rule` resources representing AWS Config
          rules configured across all enabled regions and the value for specified fields
      - query: "aws.config.recorders {\n  name \n  roleArn \n  allSupported \n  includeGlobalResourceTypes
        \n  recording \n  lastStatus \n  region \n}\n"
        title: Return a list of AWS Config recorders configured across all enabled regions
          and the value for specified fields
      - query: |
          aws.config.recorders.any(allSupported == true && includeGlobalResourceTypes == true)
          aws.config.recorders.where(allSupported == true && includeGlobalResourceTypes == true).all(
            recording == true && lastStatus == "SUCCESS"
          )
        title: Ensure AWS Config is enabled in all regions
  aws.config.recorder:
    docs:
      desc: "The `aws.config.recorder` resource provides fields representing an individual
        AWS Config recorder configured within an account. For usage see the `aws.config`
        resource documentation. \n"
    fields:
      allSupported: {}
      includeGlobalResourceTypes: {}
      lastStatus: {}
      name: {}
      recording: {}
      region: {}
      roleArn: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.config.rule:
    docs:
      desc: "The `aws.config.rule` resource provides fields representing an individual
        AWS Config rule configured within an account. For usage see the `aws.config`
        resource documentation. \n"
    fields:
      arn: {}
      source: {}
      state: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.dms:
    docs:
      desc: |
        The `aws.dms` resource is used to assess the configuration of the AWS Database Migration service.
    fields:
      replicationInstances: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in AWS Database Migration Service
        url: https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html
    snippets:
      - query: aws.dms.replicationInstances
        title: Return a list of AWS Database Migration service replication instances
      - query: |
          aws.dms.replicationInstances.none(
            _['PubliclyAccessible'] == true
          )
        title: Checks whether AWS Database Migration Service replication instances are
          public
  aws.dynamodb:
    docs:
      desc: |
        The `aws.dynamodb` resource can be used to assess the configuration of the AWS DynamoDB.
    fields:
      backups: {}
      globalTables: {}
      limits: {}
      tables: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security and Compliance in Amazon DynamoDB
        url: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/security.html
    snippets:
      - query: "aws.dynamodb.tables {\n  arn \n  name \n  region \n  backups \n  sseDescription
        \n  provisionedThroughput \n  continuousBackups \n}\n"
        title: Return a list of `aws.dynamodb.table` resources and the values for specified
          fields
      - query: "aws.dynamodb.limits {\n  arn \n  region \n  accountMaxRead \n  accountMaxWrite
        \n  tableMaxRead\n  tableMaxWrite \n}\n"
        title: Return a list of `aws.dynamodb.limit` resources and the values for specified
          fields
      - query: "aws.dynamodb.globaltables {\n  arn \n  name \n  replicaSettings \n}\n"
        title: Return a list of `aws.dynamodb.globaltable` resources and the value for
          specified fields
      - query: "aws.dynamodb.tables.all( \n  sseDescription['SSEType'] == 'KMS' && sseDescription['Status']
        == 'ENABLED'\n)\n"
        title: Checks that all DynamoDB tables are encrypted with AWS Key Management
          Service (KMS)
  aws.dynamodb.globaltable:
    docs:
      desc: |
        The `aws.dynamodb.globaltable` resource provides fields representing a DynamoDB Global Table. For usage see `aws.dynamodb` resource documentation.
    fields:
      arn: {}
      name: {}
      replicaSettings: {}
      tags:
        min_mondoo_version: 5.16.0
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.dynamodb.limit:
    docs:
      desc: |
        The `aws.dynamodb.limit` resource provides fields representing a DynamoDB limit configuration. For usage see `aws.dynamodb` resource documentation.
    fields:
      accountMaxRead: {}
      accountMaxWrite: {}
      arn: {}
      region: {}
      tableMaxRead: {}
      tableMaxWrite: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.dynamodb.table:
    docs:
      desc: |
        The `aws.dynamodb.table` resource provides fields representing a DynamoDB Table. For usage see `aws.dynamodb` resource documentation.
    fields:
      arn: {}
      backups: {}
      continuousBackups: {}
      name: {}
      provisionedThroughput: {}
      region: {}
      sseDescription: {}
      tags:
        min_mondoo_version: 5.16.0
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2:
    docs:
      desc: |
        The `aws.ec2` resource can be used to assess the configuration of AWS EC2 instances.
    fields:
      ebsEncryptionByDefault: {}
      instances: {}
      internetGateways: {}
      networkAcls: {}
      securityGroups: {}
      snapshots: {}
      volumes: {}
      vpnConnections: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in Amazon EC2
        url: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security.html
      - title: Security in Amazon Virtual Private Cloud
        url: https://docs.aws.amazon.com/vpc/latest/userguide/security.html
    snippets:
      - query: "aws.ec2.instances {\n  arn\n  instanceId \n  detailedMonitoring \n  region
        \n  publicIp \n  ssm \n  vpc \n  httpTokens \n  patchState \n  state \n  deviceMappings
        \n  securityGroups\n  publicDnsName \n  instanceStatus\n  stateReason \n  stateTransitionReason
        \n  ebsOptimized \n  instanceType \n  tags \n  image\n  launchTime \n}\n"
        title: Return a list of all EC2 instances across all enabled regions in the
          account and the value for specified fields
      - query: |
          aws.ec2.securityGroups {
            arn
            region
            vpc
            id
          }
        title: Return a list of security groups across every enabled region and the
          value for specified fields
      - query: "aws.ec2.volumes {\n  arn\n  region \n}\n"
        title: Return a list of all EBS volumes along with the associated ARN and the
          region the volume exists in
      - query: |
          aws.ec2.securityGroups.where(name == "default") {
            ipPermissions.all(ipRanges.length == 0 && ipv6Ranges.length == 0 && fromPort == 0 && toPort == 0)
            ipPermissionsEgress.all(ipRanges.length == 0 && ipv6Ranges.length == 0 && fromPort == 0 && toPort == 0)
          }
        title: Ensure the default security group of every VPC restricts all traffic
  aws.ec2.image:
    docs:
      desc: |
        The `aws.ec2.image` resource provides fields for assessing AMIs within an account. For usage see `aws.ec2` resource.
    fields:
      architecture: {}
      arn: {}
      id: {}
      name: {}
      ownerAlias:
        min_mondoo_version: 5.22.0
      ownerId: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.instance:
    docs:
      desc: |
        The `aws.ec2.instance` resource provides fields for assessing the configuration of EC2 instances within an account. For usage see `aws.ec2` resource.
    fields:
      arn: {}
      detailedMonitoring: {}
      deviceMappings: {}
      ebsOptimized: {}
      httpTokens: {}
      image: {}
      instanceId: {}
      instanceStatus: {}
      instanceType: {}
      launchTime: {}
      patchState: {}
      privateDnsName:
        min_mondoo_version: 5.37.0
      privateIp:
        min_mondoo_version: 5.37.0
      publicDnsName: {}
      publicIp: {}
      region: {}
      securityGroups: {}
      ssm: {}
      state: {}
      stateReason: {}
      stateTransitionReason: {}
      tags: {}
      vpc: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.instance.device:
    docs:
      desc: |
        The `aws.ec2.instance.device` resource provides fields for assessing the configuration of devices attached to EC2 instances within an account. For usage see `aws.ec2` resource.
    fields:
      deleteOnTermination: {}
      deviceName: {}
      status: {}
      volumeId: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.internetgateway:
    docs:
      desc: |
        The `aws.ec2.internetgateway` resource provides fields for assessing the configuration of internet gateways within an AWS account. For usage see `aws.ec2` resource.
    fields:
      arn: {}
      attachments: {}
      id: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.networkacl:
    docs:
      desc: |
        The `aws.ec2.networkacl` resource provides fields for assessing the configuration of VPC network ACLs within an AWS account. For usage see `aws.ec2` resource.
    fields:
      arn: {}
      entries: {}
      id: {}
      region: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.networkacl.entry:
    docs:
      desc: |
        The `aws.ec2.networkacl.entry` resource provides fields for assessing the configuration of network ACL entries within an AWS account. For usage see `aws.ec2` resource.
    fields:
      egress: {}
      id: {}
      portRange: {}
      ruleAction: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.networkacl.entry.portrange:
    docs:
      desc: |
        The `aws.ec2.networkacl.portrange` resource provides fields for assessing the port range configuration of network ACL entries within an AWS account. For usage see `aws.ec2` resource.
    fields:
      from: {}
      id: {}
      to: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.securitygroup:
    docs:
      desc: |
        The `aws.ec2.securitygroup` resource provides fields for assessing the configuration of security groups within an AWS account. For usage see `aws.ec2` resource.
    fields:
      arn: {}
      description: {}
      id: {}
      ipPermissions: {}
      ipPermissionsEgress: {}
      isAttachedToNetworkInterface: {}
      name: {}
      region: {}
      tags: {}
      vpc: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.securitygroup.ippermission:
    docs:
      desc: |
        The `aws.ec2.securitygroup.ippermission` resource provides fields for assessing the configuration of ip permissions for security groups within an AWS account. For usage see `aws.ec2` resource.
    fields:
      fromPort: {}
      id: {}
      ipProtocol: {}
      ipRanges: {}
      ipv6Ranges: {}
      toPort: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.snapshot:
    docs:
      desc: |
        The `aws.ec2.snapshot` resource provides fields for assessing the configuration of EBS snapshots within an AWS account. For usage see `aws.ec2` resource.
    fields:
      arn: {}
      createVolumePermission: {}
      id: {}
      region: {}
      startTime: {}
      tags: {}
      volumeId: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.vgwtelemetry:
    docs:
      desc: |
        The `aws.ec2.vgwtelemetry` resource provides fields for assessing the configuration of telemetry for VPN tunnels within an AWS account. For usage see `aws.ec2` resource.
    fields:
      outsideIpAddress: {}
      status: {}
      statusMessage: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.volume:
    docs:
      desc: |
        The `aws.ec2.volume` resource provides fields for assessing the configuration of EBS volumes within an AWS account. For usage see `aws.ec2` resource.
    fields:
      arn: {}
      attachments: {}
      availabilityZone: {}
      createTime:
        min_mondoo_version: 5.25.0
      encrypted: {}
      id: {}
      state: {}
      tags: {}
      volumeType: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ec2.vpnconnection:
    docs:
      desc: |
        The `aws.ec2.vpnconnection` resource provides fields for assessing the configuration of VPN connections within an AWS account. For usage see `aws.ec2` resource.
    fields:
      arn: {}
      vgwTelemetry: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.ecr:
    docs:
      desc: |
        The `aws.ecr` resource can be used to assess the configuration of an Amazon Elastic Container Registry.
    fields:
      privateRepositories: {}
      publicRepositories: {}
      images: {}
    min_mondoo_version: 7.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in Amazon Elastic Container Registry
        url: https://docs.aws.amazon.com/AmazonECR/latest/userguide/security.html
    snippets:
      - query: |
          aws.ecr {*}
        title: Return a `aws.ecr` resource representing the Elastic Container Registry.
  aws.ecr.repository:
    docs:
      desc: |
        The `aws.ecr.repository` resource can be used to assess the Amazon Elastic Container Registry repositories.
    fields:
      arn: {}
      name: {}
      uri: {}
      registryId: {}
      public: {}
      images: {}
      region: {}
    is_private: true
    min_mondoo_version: 7.15.0
    platform:
      name:
        - aws
    snippets:
      - query: |
          aws.ecr {
            publicRepositories { 
              name
              uri
            }
          }
        title: Return a list of `aws.ecr.repository` resources representing the public repositories.
  aws.ecr.image:
    docs:
      desc: |
        The `aws.ecr.image` resource can be used to assess a container image stored in an Amazon Elastic Container Registry.
    fields:
      digest: {}
      mediaType: {}
      tags: {}
      registryId: {}
      repoName: {}
    is_private: true
    min_mondoo_version: 7.15.0
    platform:
      name:
        - aws
    snippets:
      - query: |
          aws.ecr {
            publicRepositories { 
              images {
                digest
                repoName
                tags
              }
            }
          }
        title: Return a list of `aws.ecr.image` resources representing the images stored in public repositories.
  aws.efs:
    docs:
      desc: |
        The `aws.efs` resource can be used to assess the configuration of Amazon Elastic File System deployments.
    fields:
      filesystems: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in Amazon EFS
        url: https://docs.aws.amazon.com/efs/latest/ug/security-considerations.html
    snippets:
      - query: |
          aws.efs.filesystems {
            name
            id
            arn
            encrypted
            kmsKey
            backupPolicy
            region
          }
        title: Return a list of `aws.efs.filesystem` resources representing any EFS
          deployments across all enabled regions in the account
      - query: "aws.efs.filesystems.all(\n  encrypted == true && kmsKey.arn == /^arn:aws:kms:.*/
        \n)\n"
        title: Checks whether all EFS systems are configured to encrypt file data using
          KMS
  aws.efs.filesystem:
    docs:
      desc: "The `aws.efs.filesystem` resource provides fields for assessing the configuration
        of individual EFS deployments. For usage see the `aws.efs` resource documentation.
        \n"
    fields:
      arn: {}
      backupPolicy: {}
      encrypted: {}
      id: {}
      kmsKey: {}
      name: {}
      region: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.eks:
    fields:
      clusters: {}
    min_mondoo_version: 5.31.0
    platform:
      name:
        - aws
  aws.eks.cluster:
    fields:
      arn: {}
      createdAt: {}
      encryptionConfig: {}
      endpoint: {}
      logging: {}
      name: {}
      networkConfig: {}
      platformVersion: {}
      region: {}
      resourcesVpcConfig: {}
      status: {}
      tags: {}
      version: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
        - aws
  aws.elasticache:
    docs:
      desc: "The `aws.elasticache` resource can be used to assess the configuration
        of Amazon ElastiCache. \n"
    fields:
      clusters: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in Amazon ElastiCache
        url: https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/redis-security.html
    snippets:
      - query: |
          aws.elasticache.clusters.all(
            _['SnapshotRetentionLimit'] > _['SnapshotRetentionPeriod']
          )
        title: Checks if the ElastiCache Redis clusters have automatic backup turned
          on
  aws.elb:
    docs:
      desc: |
        The `aws.elb` resource can be used to assess the configuration of Amazon Elastic Load Balancers within an AWS account.
    fields:
      classicLoadBalancers: {}
      loadBalancers: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in Elastic Load Balancing
        url: https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/security.html
    snippets:
      - query: |
          aws.elb.loadbalancers {
            arn
            dnsName
            listenerDescriptions
            name
            scheme
            attributes
          }
        title: Return a list of all application, gateway, and network Elastic Load Balancers
          deployed across every enabled region and the values for specified fields
      - query: |
          aws.elb.classicLoadBalancers {
            arn
            dnsName
            listenerDescriptions
            name
            scheme
            attributes
          }
        title: Return a list of all classic Elastic Load Balancers deployed across every
          enabled region and the values for specified fields
      - query: "aws.elb.loadBalancers.all( listenerDescriptions.any ( \n  _['Protocol']
        == \"HTTPS\" || _['Protocol'] == \"SSL\" ) \n)\n"
        title: Checks whether HTTP to HTTPS redirection is configured on all application
          load balancer http listeners
      - query: "aws.elb.classicLoadBalancers.all( listenerDescriptions.any ( \n  _['Listener']['Protocol']
        == \"HTTPS\" || _['Listener']['Protocol'] == \"SSL\" ) \n)\n"
        title: Checks that all Classic Load Balancers use SSL certificates provided
          by AWS Cert Mgr
  aws.elb.loadbalancer:
    docs:
      desc: |
        The `aws.elb.loadbalancer` resource provides fields for assessing the configuration of individual classic, application, gateway, and network Amazon Elastic Load Balancers. For usage see the `aws.elb` documentation.
    fields:
      arn: {}
      attributes: {}
      dnsName: {}
      listenerDescriptions: {}
      name: {}
      scheme: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.emr:
    docs:
      desc: |
        The `aws.emr` resource can be used to assess the configuration of Amazon EMR clusters. This resource provides a list of `aws.emr.cluster` resources representing EMR clusters deployed across all enabled regions.
    fields:
      clusters: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in Amazon EMR
        url: https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-security.html
    snippets:
      - query: |
          aws.emr.clusters {
            arn
            name
            normalizedInstanceHours
            outpostArn
            status
            masterInstances
            id
          }
        title: Return a list of EMR clusters deployed across all enabled regions and
          the value for specified fields
      - query: |
          aws.emr.clusters.all(
            masterInstances { _['PublicIpAddress'] == null }
          )
        title: Checks whether EMR cluster master nodes have public ips
  aws.emr.cluster:
    docs:
      desc: |
        The `aws.emr.cluster` resource provides fields for assessing the configuration of individual Amazon EMR clusters. For usage see the `aws.emr` resource documentation.
    fields:
      arn: {}
      id: {}
      masterInstances: {}
      name: {}
      normalizedInstanceHours: {}
      outpostArn: {}
      status: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.es:
    docs:
      desc: |
        The `aws.es` resource can be used to assess the configuration of Amazon Elasticsearch domains. This resource provides a list of `aws.es.domain` resources representing Elasticsearch domains deployed across all enabled regions.
    fields:
      domains: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Amazon Security Blog on Elasticsearch
        url: https://aws.amazon.com/blogs/security/tag/amazon-elasticsearch-service/
  aws.es.domain:
    docs:
      desc: |
        The `aws.es.domain` provides fields for assessing the configuration of individual Amazon Elasticsearch domains. For usage see the `aws.es` resource documentation
    fields:
      arn: {}
      encryptionAtRestEnabled: {}
      endpoint: {}
      name: {}
      nodeToNodeEncryptionEnabled: {}
      region: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.guardduty:
    docs:
      desc: |
        The `aws.guardduty` resource can be used to assess the configuration of the AWS GuardDuty service. The resource provides a list of `aws.guardduty.detector` resources representing GuardDuty Detectors deployed across all enabled regions.
    fields:
      detectors: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in Amazon GuardDuty
        url: https://docs.aws.amazon.com/guardduty/latest/ug/security.html
    snippets:
      - query: |
          aws.guardduty.detectors {
            id
            region
            status
            findingPublishingFrequency
            unarchivedFindings
          }
        title: Return a list of Amazon GuardDuty Detectors along with the values for
          specified fields
      - query: |
          aws.guardduty.detectors.all( status == "ENABLED" )
        title: Checks that guardduty is enabled in all regions
  aws.guardduty.detector:
    docs:
      desc: |
         The `aws.guardduty.detector` provides fields for assessing the configuration of individual Amazon GuardDuty Detectors. For usage see the `aws.guardduty` resource documentation
    fields:
      findingPublishingFrequency: {}
      id: {}
      region: {}
      status: {}
      unarchivedFindings: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.iam:
    docs:
      desc: |
        The `aws.iam` resource can be used to assess the configuration of the AWS IAM service. The resource provides a list of `aws.iam.user` resources representing GuardDuty Detectors deployed across all enabled regions.
    fields:
      accountPasswordPolicy: {}
      accountSummary: {}
      attachedPolicies: {}
      credentialReport: {}
      groups: {}
      policies: {}
      roles: {}
      serverCertificates: {}
      users: {}
      virtualMfaDevices: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in IAM and AWS STS
        url: https://docs.aws.amazon.com/IAM/latest/UserGuide/security.html
    snippets:
      - query: |
          aws.iam.users {
            users
            roles
            groups
            policies
            attachedPolicies
            accountSummary
            virtualMfaDevices
            serverCertificates
          }
        title: Return a list of `aws.iam.user` resources representing IAM users in the
          account and specified fields
      - query: "aws.iam.credentialReport.where(mfaActive == false) { \n  user { \n    arn
        \n    name \n    groups \n  }\n}\n"
        title: Return a list of users that do not have MFA configured along with the
          ARN, name, and associated IAM Groups
      - query: "aws.iam.credentialReport.\n  where(\n    passwordEnabled &&\n    accessKey1Active
        &&\n    userCreationTime < time.today\n  ).\n  all(\n    accessKey1LastUsedDate
        != null\n  ) \n"
        title: Do not setup access keys during initial user setup for all IAM users
          that have a console password
  aws.iam.group:
    docs:
      desc: |
        The `aws.iam.group` provides fields for assessing the configuration of IAM Groups. For usage see the `aws.iam` resource documentation.
    fields:
      arn: {}
      createDate: {}
      id: {}
      name: {}
      usernames: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.iam.policy:
    docs:
      desc: |
        The `aws.iam.policy` provides fields for assessing the configuration of individual IAM Policies. For usage see the `aws.iam` resource documentation.
    fields:
      arn: {}
      attachedGroups: {}
      attachedRoles: {}
      attachedUsers: {}
      attachmentCount: {}
      createDate: {}
      defaultVersion: {}
      description: {}
      id: {}
      isAttachable: {}
      name: {}
      scope: {}
      updateDate: {}
      versions: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.iam.policyversion:
    docs:
      desc: |
        The `aws.iam.policyversion` provides fields for assessing the metadata for IAM Policy versions. For usage see the `aws.iam` resource documentation.
    fields:
      arn: {}
      createDate: {}
      document: {}
      isDefaultVersion: {}
      versionId: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.iam.role:
    docs:
      desc: |
        The `aws.iam.role` provides fields for assessing the configuration of individual IAM Roles. For usage see the `aws.iam` resource documentation.
    fields:
      arn: {}
      createDate: {}
      description: {}
      id: {}
      name: {}
      tags: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.iam.user:
    docs:
      desc: |
        The `aws.iam.user` provides fields for assessing the configuration of individual IAM users. For usage see the `aws.iam` resource documentation.
    fields:
      accessKeys: {}
      arn: {}
      attachedPolicies: {}
      createDate: {}
      groups: {}
      id: {}
      name: {}
      passwordLastUsed: {}
      policies: {}
      tags: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.iam.usercredentialreportentry:
    docs:
      desc: |
        The `aws.iam.credentialreportentry` provides fields for assessing the metadata for individual IAM Credential Report entries. For usage see the `aws.iam` resource documentation.
    fields:
      accessKey1Active: {}
      accessKey1LastRotated: {}
      accessKey1LastUsedDate: {}
      accessKey1LastUsedRegion: {}
      accessKey1LastUsedService: {}
      accessKey2Active: {}
      accessKey2LastRotated: {}
      accessKey2LastUsedDate: {}
      accessKey2LastUsedRegion: {}
      accessKey2LastUsedService: {}
      arn: {}
      cert1Active: {}
      cert1LastRotated: {}
      cert2Active: {}
      cert2LastRotated: {}
      mfaActive: {}
      passwordEnabled: {}
      passwordLastChanged: {}
      passwordLastUsed: {}
      passwordNextRotation: {}
      properties: {}
      user: {}
      userCreationTime: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.iam.virtualmfadevice:
    docs:
      desc: |
        The `aws.iam.virtualmfadevice` provides fields for assessing the metadata for individual virtual MFA devices associated with IAM users. For usage see the `aws.iam` resource documentation.
    fields:
      enableDate: {}
      serialNumber: {}
      user: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.kms:
    docs:
      desc: "The `aws.kms` resource can be used to assess the configuration of AWS
        KMS keys. \n"
    fields:
      keys: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    snippets:
      - query: |
          aws.kms.keys.where( metadata['KeyState'] == "Enabled" ).all( keyRotationEnabled == true )
        title: Ensure rotation for customer created CMKs is enabled
  aws.kms.key:
    docs:
      desc: |
        The `aws.kms.key` provides fields for assessing the configuration of individual KMS keys. For usage see the `aws.kms` resource documentation.
    fields:
      arn: {}
      id: {}
      keyRotationEnabled: {}
      metadata: {}
      region: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.lambda:
    docs:
      desc: "The `aws.lambda` resource can be used to assess the configuration of
        AWS Lambda. \n"
    fields:
      functions: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.lambda.function:
    docs:
      desc: |
        The `aws.lambda.function` provides fields for assessing the configuration of individual AWS Lambda functions. For usage see the `aws.lambda` resource documentation.
    fields:
      arn: {}
      concurrency: {}
      dlqTargetArn: {}
      name: {}
      policy: {}
      region: {}
      tags: {}
      vpcConfig: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.organization:
    fields:
      arn: {}
      featureSet: {}
      masterAccountEmail: {}
      masterAccountId: {}
    min_mondoo_version: 6.11.0
    platform:
      name:
        - aws
  aws.rds:
    docs:
      desc: |
        The `aws.rds` resource can be used to assess the configuration of AWS RDS deployments. The resource returns lists of `aws.rds.dbcluster`, `aws.rds.dbinstance`, and `aws.rds.snapshot` resources, each with fields for assessing the configuration of those assets.
    fields:
      dbClusters: {}
      dbInstances: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Security in Amazon RDS
        url: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.html
    snippets:
      - query: aws.rds.dbInstances.all(snapshots.length > 0)
        title: Checks whether RDS DB instances have backups enabled
      - query: aws.rds.dbInstances.all(multiAZ == true)
        title: Checks whether high availability is enabled for all rds instances
      - query: aws.rds.dbClusters { snapshots.where( encrypted == false) } { arn region
          id }
        title: Return a list of RDS Clusters across all regions where snapshots are
          not encrypted and return the `arn` `region` and `id` for the cluster
  aws.rds.dbcluster:
    docs:
      desc: |
        The `aws.rds.dbcluster` provides fields for assessing the configuration of AWS RDS Clusters.
    fields:
      arn: {}
      id: {}
      members: {}
      region: {}
      snapshots: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.rds.dbinstance:
    docs:
      desc: |
        The `aws.rds.dbinstance` fields for assessing the configuration of RDS instances. For usage see the `aws.rds` resource documentation.
    fields:
      arn: {}
      backupRetentionPeriod: {}
      dbInstanceClass:
        min_mondoo_version: 5.19.1
      dbInstanceIdentifier:
        min_mondoo_version: 5.19.1
      deletionProtection: {}
      enabledCloudwatchLogsExports: {}
      engine:
        min_mondoo_version: 5.19.1
      enhancedMonitoringResourceArn: {}
      id: {}
      multiAZ: {}
      name: {}
      publiclyAccessible: {}
      region: {}
      securityGroups:
        min_mondoo_version: 5.19.1
      snapshots: {}
      status:
        min_mondoo_version: 5.19.1
      storageEncrypted: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.rds.snapshot:
    docs:
      desc: |
        The `aws.rds.snapshot` fields for assessing the configuration of RDS snapshots. For usage see the `aws.rds` resource documentation.
    fields:
      arn: {}
      attributes: {}
      encrypted: {}
      id: {}
      isClusterSnapshot: {}
      region: {}
      tags: {}
      type: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.redshift:
    docs:
      desc: |
        The `aws.redshift` resource can be used to assess the configuration of AWS RedShift deployments. The resource returns lists of `aws.rds.dbcluster`, `aws.rds.dbinstance`, and `aws.rds.snapshot` resources, each with fields for assessing the configuration of those assets.
    fields:
      clusters: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Amazon Redshift security overview
        url: https://docs.aws.amazon.com/redshift/latest/dg/c_security-overview.html
    snippets:
      - query: |
          aws.redshift.clusters {
            arn
            encrypted
            nodeType
            allowVersionUpgrade
            preferredMaintenanceWindow
            automatedSnapshotRetentionPeriod
            publiclyAccessible
            parameters
            logging
            name
            region
            clusterParameterGroupNames
          }
        title: Return a list of Amazon RedShift clusters deployed across all enabled
          regions and the values for specified fields
      - query: |
          aws.redshift.clusters.where( encrypted == false ) {
            arn
            region
            name
          }
        title: Return a list of RedShift clusters that are not encrypted and the values
          for the `arn` `region` and `name` fields
  aws.redshift.cluster:
    fields:
      allowVersionUpgrade: {}
      arn: {}
      automatedSnapshotRetentionPeriod: {}
      clusterParameterGroupNames: {}
      encrypted: {}
      logging: {}
      name: {}
      nodeType: {}
      parameters: {}
      preferredMaintenanceWindow: {}
      publiclyAccessible: {}
      region: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.s3:
    docs:
      desc: |
        Amazon Simple Storage Service (Amazon S3) is an object storage service
    fields:
      buckets: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Amazon S3 Product Page
        url: https://aws.amazon.com/s3/
      - title: 'AWS Documentation: What is Amazon S3?'
        url: https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html
    snippets:
      - query: |
          aws.s3.buckets {
            arn
            name
            policy
            tags
            acl
            owner
            public
            cors
            location
            versioning
            logging
            staticWebsiteHosting
            defaultLock
            replication
            encryption
            publicAccessBlock
            exists
          }
        title: Return a list of AWS S3 buckets and the value for specified fields
      - query: "aws.s3.buckets.where( public == true ) {\n  arn\n  name\n  location\n
        \ tags\n  publicAccessBlock \n}\n"
        title: Return a list of AWS S3 buckets that are public and return the values
          for the `arn` `name` `location` `tags` and `publicAccessBlock`
      - query: "aws.s3.buckets.all( \n  replication['Rules'] { _['Status'] == \"Enabled\"
        }\n)\n"
        title: Checks whether S3 buckets have cross-region replication enabled
      - query: "aws.s3.buckets.all( \n  encryption['Rules'] { _['ApplyServerSideEncryptionByDefault']['KMSMasterKeyID']
        == /^arn:aws:kms:.*/}\n)\n"
        title: Checks that all buckets are encrypted with kms
  aws.s3.bucket:
    docs:
      desc: |
        The `aws.s3.bucket` resource provides fields for assessing the configuration of AWS S3 buckets. For usage see the `aws.s3` resource documentation.
    fields:
      acl: {}
      arn: {}
      cors: {}
      defaultLock: {}
      encryption: {}
      exists: {}
      location: {}
      logging: {}
      name: {}
      owner: {}
      policy: {}
      public: {}
      publicAccessBlock: {}
      replication: {}
      staticWebsiteHosting: {}
      tags: {}
      versioning: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: Amazon S3 Product Page
        url: https://aws.amazon.com/s3/
      - title: 'AWS Documentation: Buckets overview'
        url: https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingBucket.html
  aws.s3.bucket.corsrule:
    fields:
      allowedHeaders: {}
      allowedMethods: {}
      allowedOrigins: {}
      exposeHeaders: {}
      maxAgeSeconds: {}
      name: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.s3.bucket.grant:
    fields:
      grantee: {}
      id: {}
      name: {}
      permission: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.s3.bucket.policy:
    docs:
      desc: |
        Bucket policies grant permission to your Amazon S3 resources
    fields:
      document: {}
      id: {}
      name: {}
      statements: {}
      version: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
    refs:
      - title: 'AWS Documentation: Using bucket policies'
        url: https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-policies.html
  aws.s3control:
    fields:
      accountPublicAccessBlock: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.sagemaker:
    fields:
      endpoints: {}
      notebookInstances: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.sagemaker.endpoint:
    fields:
      arn: {}
      config: {}
      name: {}
      region: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.sagemaker.notebookinstance:
    fields:
      arn: {}
      details: {}
      name: {}
      region: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.sagemaker.notebookinstance.details:
    fields:
      arn: {}
      directInternetAccess: {}
      kmsKey: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.secretsmanager:
    fields:
      secrets: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.secretsmanager.secret:
    fields:
      arn: {}
      name: {}
      rotationEnabled: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.securityhub:
    fields:
      hubs: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.securityhub.hub:
    fields:
      arn: {}
      subscribedAt: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.sns:
    fields:
      topics: {}
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.sns.subscription:
    fields:
      arn: {}
      protocol: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.sns.topic:
    fields:
      arn: {}
      attributes: {}
      region: {}
      subscriptions: {}
      tags:
        min_mondoo_version: 5.23.0
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.vpc:
    fields:
      arn: {}
      flowLogs: {}
      id: {}
      isDefault: {}
      region: {}
      routeTables: {}
      state: {}
      tags: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.vpc.flowlog:
    fields:
      id: {}
      region: {}
      status: {}
      tags: {}
      vpc: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws
  aws.vpc.routetable:
    fields:
      id: {}
      routes: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
        - aws