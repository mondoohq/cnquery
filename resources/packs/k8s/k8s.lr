import "../os/os.lr"
import "../core/core.lr"

option go_package = "go.mondoo.com/cnquery/resources/packs/k8s"

// Kubernetes cluster
k8s {
  // Available Resource Types
  apiResources() []k8s.apiresource
  // Cluster Nodes
  nodes() []k8s.node
  // Cluster Namespaces
  namespaces() []k8s.namespace
  // Cluster Pods
  pods() []k8s.pod
  // Cluster Deployments
  deployments() []k8s.deployment
  // Cluster DaemonSets
  daemonsets() []k8s.daemonset
  // Cluster StatefulSets
  statefulsets() []k8s.statefulset
  // Cluster ReplicaSets
  replicasets() []k8s.replicaset
  // Cluster Jobs
  jobs() []k8s.job
  // Cluster CronJobs
  cronjobs() []k8s.cronjob
  // Cluster Secrets
  secrets() []k8s.secret
  // Cluster Version
  serverVersion() dict
  // Kubernetes PodSecurityPolicy's
  podSecurityPolicies() []k8s.podsecuritypolicy
  // Config Maps
  configmaps() []k8s.configmap
  // Kubernetes Services
  services() []k8s.service
  // Kubernetes Network Policies
  networkPolicies() []k8s.networkpolicy
  // Kubernetes Service Accounts
  serviceaccounts() []k8s.serviceaccount
  // Kubernetes RBAC Cluster Roles
  clusterroles() []k8s.rbac.clusterrole
  // Kubernetes RBAC Roles
  roles() []k8s.rbac.role
  // Kubernetes RBAC Cluster Role Bindings
  clusterrolebindings() []k8s.rbac.clusterrolebinding
  // Kubernetes RBAC Role Bindings
  rolebindings() []k8s.rbac.rolebinding
  // Kubernetes custom resources
  customresources() []k8s.customresource
  // Kubernetes Ingresses
  ingresses() []k8s.ingress
}

// Kubernetes API Resources
private k8s.apiresource @defaults("name kind") {
  // plural name of the resource
  name string
  // singular name of the resource
  singularName string
  // indicates if a resource is namespaced or not
  namespaced bool
  // preferred group of the resource
  group string
  // preferred version of the resource
  version string
  // Kubernetes Object Type
  kind string
  // List of suggested short names of the resource
  shortNames []string
  // List of the grouped resources
  categories []string
}

// Kubernetes node
private k8s.node @defaults("name kind") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Resource Version
  resourceVersion string
  // plural name of the resource
  name string
  // Kubernetes Object Type
  kind string
}

// Kubernetes Kubelet configuration
private k8s.kubelet {
  // Kubelet config file
  configFile core.file
  // Kubelet process
  process core.process
  // Combination of config file parameters and cli parameters
  configuration dict
}

// Kubernetes Namespace
private k8s.namespace @defaults("name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
}

// Kubernetes Pod
private k8s.pod @defaults("namespace name created"){
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Version
  apiVersion string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // PodSpec is a description of a pod
  podSpec dict
  // Ephemeral containers
  ephemeralContainers() []k8s.ephemeralContainer
  // Init containers
  initContainers() []k8s.initContainer
  // Contained Containers
  containers() []k8s.container
  // Node the pod runs on
  node() k8s.node
}

// Kubernetes workload container
private k8s.container @defaults("name") {
  uid string
  // Name of the container
  name string
  // Container image name
  imageName string
  // deprecated, use imageName
  image string
  // Container image
  containerImage() os.container.image
  // Entrypoint array
  command []string
  // Arguments to the entrypoint
  args []string
  // Compute Resources required by this container
  resources dict
  // Pod volumes to mount into the container's filesystem
  volumeMounts []dict
  // volumeDevices is the list of block devices to be used by the container
  volumeDevices []dict
  // Periodic probe of container liveness
  livenessProbe dict
  // Periodic probe of container service readiness
  readinessProbe dict
  // Image pull policy, One of Always, Never, IfNotPresent
  imagePullPolicy string
  // Security options the pod should run with
  securityContext dict
  // Container's working directory
  workingDir string
  // Whether this container should allocate a TTY for itself
  tty bool
  // env variables
  env dict
  // envFrom settings
  envFrom dict
}

// Kubernetes Init Container
private k8s.initContainer @defaults("name") {
  uid string
  // Name of the container
  name string
  // Container image name
  imageName string
  // deprecated, use imageName
  image string
  // Container image
  containerImage() os.container.image
  // Entrypoint array
  command []string
  // Arguments to the entrypoint
  args []string
  // Compute Resources required by this container
  resources dict
  // Pod volumes to mount into the container's filesystem
  volumeMounts []dict
  // volumeDevices is the list of block devices to be used by the container
  volumeDevices []dict
  // Image pull policy, One of Always, Never, IfNotPresent
  imagePullPolicy string
  // Security options the pod should run with
  securityContext dict
  // Container's working directory
  workingDir string
  // Whether this container should allocate a TTY for itself
  tty bool
  // env variables
  env dict
  // envFrom settings
  envFrom dict
}

// Kubernetes Ephemeral Container
private k8s.ephemeralContainer @defaults("name") {
  uid string
  // Name of the container
  name string
  // Container image name
  imageName string
  // deprecated, use imageName
  image string
  // Container image
  containerImage() os.container.image
  // Entrypoint array
  command []string
  // Arguments to the entrypoint
  args []string
  // Pod volumes to mount into the container's filesystem
  volumeMounts []dict
  // volumeDevices is the list of block devices to be used by the container
  volumeDevices []dict
  // Image pull policy, One of Always, Never, IfNotPresent
  imagePullPolicy string
  // Security options the pod should run with
  securityContext dict
  // Container's working directory
  workingDir string
  // Whether this container should allocate a TTY for itself
  tty bool
  // env variables
  env dict
  // envFrom settings
  envFrom dict
}

// Kubernetes Deployment
private k8s.deployment @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // PodSpec is a description of a pod
  podSpec dict
  // Init containers
  initContainers() []k8s.initContainer
  // Contained Containers
  containers() []k8s.container
}

// Kubernetes DaemonSet
private k8s.daemonset @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // PodSpec is a description of a pod
  podSpec dict
  // Init containers
  initContainers() []k8s.initContainer
  // Contained Containers
  containers() []k8s.container
}

// Kubernetes StatefulSet
private k8s.statefulset @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // PodSpec is a description of a pod
  podSpec dict
  // Init containers
  initContainers() []k8s.initContainer
  // Contained Containers
  containers() []k8s.container
}

// Kubernetes ReplicaSet
private k8s.replicaset @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // PodSpec is a description of a pod
  podSpec dict
  // Init containers
  initContainers() []k8s.initContainer
  // Contained Containers
  containers() []k8s.container
}

// Kubernetes Job
private k8s.job @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // PodSpec is a description of a pod
  podSpec dict
  // Init containers
  initContainers() []k8s.initContainer
  // Contained Containers
  containers() []k8s.container
}

// Kubernetes CronJob
private k8s.cronjob @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // PodSpec is a description of a pod
  podSpec dict
  // Init containers
  initContainers() []k8s.initContainer
  // Contained Containers
  containers() []k8s.container
}

// Kubernetes Secret
private k8s.secret @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Secret type
  type string
  // Secret certificates
  certificates() []certificate
}

// Kubernetes PodSecurityPolicy (deprecated as of Kubernetes v1.21)
private k8s.podsecuritypolicy {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Policy Spec
  spec dict
}

// Kubernetes ConfigMap
private k8s.configmap @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Configuration data
  data map[string]string
}

// Kubernetes Service
private k8s.service @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Service Spec
  spec dict
}

// Kubernetes Ingress Resource Backend
private k8s.ingressresourceref @defaults("name kind") {
  // Mondoo ID for Object
  id string
  // APIGroup specified as part of the resource reference
  apiGroup string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Name
  name string
}

// Kubernetes Ingress Service Backend
private k8s.ingressservicebackend @defaults("name") {
  // Mondoo ID for Object
  id string
  // Kubernetes Service Name
  name string
  // Kubernetes Service Port Name
  portName string
  // Kubernetes Service Port Number
  portNumber int
}

// Kubernetes Ingress Backend
private k8s.ingressbackend @defaults("name") {
  // Mondoo Id for Object
  id string
  // Kubernetes Service for Ingress Backend
  service k8s.ingressservicebackend
  // Kubernetes Resource Reference for Ingress Backend
  resourceRef k8s.ingressresourceref
}

// Kubernetes Ingress HTTP Rule
private k8s.ingresshttprulepath {
  // Mondoo ID for Object
  id string
  // HTTP path for Ingress Rule
  path string
  // PathType for Ingress Rule
  pathType string
  // Backend to forward matching Ingress Traffic
  backend k8s.ingressbackend
}

// Kubernetes Ingress Rule
private k8s.ingressrule {
  // Mondoo ID for Object
  id string
  // Hostname to match for Ingress Rule
  host string
  // HTTP paths to managed Ingress for
  httpPaths []k8s.ingresshttprulepath
}

// Kubernetes Ingress TLS
private k8s.ingresstls {
  // Mondoo ID for Object
  id string
  // List of hosts associated with TLS certificate
  hosts []string
  // Certificates data from TLS Secret
  certificates []core.certificate
}

// Kubernetes Ingress
private k8s.ingress @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Ingress rules
  rules []k8s.ingressrule
  // Ingress TLS data
  tls []k8s.ingresstls
}

// Kubernetes Network Policy
private k8s.networkpolicy @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Network Policy Spec
  spec dict
}

// Kubernetes Service Account
private k8s.serviceaccount @defaults("namespace name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Secrets is the list of secrets allowed to be used by pods running using this ServiceAccount
  secrets []dict
  // ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images
  imagePullSecrets []dict
  // AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted
  automountServiceAccountToken bool
}

// Kubernetes ClusterRole
private k8s.rbac.clusterrole @defaults("name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Cluster Role Rules
  rules []dict
  // Cluster Role Aggregation Rule
  aggregationRule dict
}

// Kubernetes Role
private k8s.rbac.role @defaults("name namespace") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Cluster Role Rules
  rules []dict
}

// Kubernetes ClusterRoleBinding
private k8s.rbac.clusterrolebinding @defaults("name created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Subjects holds references to the objects the role applies to
  subjects []dict
  // RoleRef can only reference a ClusterRole in the global namespace
  roleRef dict
}

// Kubernetes RoleBinding
private k8s.rbac.rolebinding @defaults("name namespace created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
  // Subjects holds references to the objects the role applies to
  subjects []dict
  // RoleRef can only reference a ClusterRole in the global namespace
  roleRef dict
}

// Kubernetes CustomResource
private k8s.customresource @defaults("name namespace created") {
  // Mondoo ID for Kubernetes Object
  id string
  // Kubernetes Object UID
  uid string
  // Kubernetes Resource Version
  resourceVersion string
  // Kubernetes Labels
  labels() map[string]string
  // Kubernetes Annotations
  annotations() map[string]string
  // Kubernetes Object Name
  name string
  // Kubernetes Object Namespace
  namespace string
  // Kubernetes Object Type
  kind string
  // Kubernetes Object Creation Timestamp
  created time
  // Full resource manifest
  manifest dict
}

// Kubernetes AdmissionReview
k8s.admissionreview {
  // The requested admission
  request() k8s.admissionrequest
}

// Kubernetes AdmissionRequest
private k8s.admissionrequest @defaults("name namespace")  {
  // The name of the object presented in the request
  name string
  // The namespace associated with the request (if any)
  namespace string
  // The operation being performed
  operation string
  // Information about the requesting user
  userInfo() k8s.userinfo
  // The incoming object from the request
  object dict
  // The existing object. Only populated for UPDATE and DELETE requests
  oldObject dict
}

// Kubernetes UserInfo
private k8s.userinfo @defaults("username") {
  // The username of the user
  username string
  // The UID of the user
  uid string
}
