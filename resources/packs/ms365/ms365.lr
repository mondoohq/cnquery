import "../core/core.lr"

option go_package = "go.mondoo.com/cnquery/resources/packs/ms365"

alias msgraph.beta = microsoft
alias msgraph.beta.user = microsoft.user
alias msgraph.beta.group = microsoft.group
alias msgraph.beta.domain = microsoft.domain
alias msgraph.beta.application = microsoft.application
alias msgraph.beta.serviceprincipal = microsoft.serviceprincipal
alias msgraph.beta.organization = microsoft.organization
alias msgraph.beta.domaindnsrecord = microsoft.domaindnsrecord
alias msgraph.beta.security = microsoft.security
alias msgraph.beta.security.securityscore = microsoft.security.securityscore
alias msgraph.beta.policies = microsoft.policies
alias msgraph.beta.rolemanagement = microsoft.rolemanagement
alias msgraph.beta.rolemanagement.roledefinition = microsoft.rolemanagement.roledefinition
alias msgraph.beta.rolemanagement.roleassignment = microsoft.rolemanagement.roleassignment
alias msgraph.beta.devicemanagement = microsoft.devicemanagement
alias msgraph.beta.devicemanagement.deviceconfiguration = microsoft.devicemanagement.deviceconfiguration
alias msgraph.beta.devicemanagement.devicecompliancepolicy = microsoft.devicemanagement.devicecompliancepolicy

// Microsoft
microsoft {
  organizations() []microsoft.organization
  users() []microsoft.user
  groups() []microsoft.group
  domains() []microsoft.domain
  applications() []microsoft.application
  serviceprincipals() []microsoft.serviceprincipal
  settings() dict
}

// Microsoft Organization
microsoft.organization {
  id string
  assignedPlans []dict
  createdDateTime time
  displayName string
  verifiedDomains []dict
}

// Microsoft User
microsoft.user {
  id string
  accountEnabled bool
  city string
  companyName string
  country string
  createdDateTime time
  department string
  displayName string
  employeeId string
  givenName string
  jobTitle string
  mail string
  mobilePhone string
  otherMails []string
  officeLocation string
  postalCode string
  state string
  streetAddress string
  surname string
  userPrincipalName string
  userType string
  settings() dict
}

// Microsoft Group
microsoft.group {
  id string
  displayName string
  securityEnabled bool
  mailEnabled bool
  mailNickname string
  mail string
  members() []microsoft.user
}

// Microsoft Domain
microsoft.domain {
  id string
  authenticationType string
  availabilityStatus string
  isAdminManaged bool
  isDefault bool
  isInitial bool
  isRoot bool
  isVerified bool
  passwordNotificationWindowInDays int
  passwordValidityPeriodInDays int
  supportedServices []string
  serviceConfigurationRecords() []microsoft.domaindnsrecord
}

// Microsoft Domain DNS Record
microsoft.domaindnsrecord {
  id string
  isOptional bool
  label string
  recordType string
  supportedService string
  ttl int
  // deprecated, kept for backwards compatability.
  properties dict
}

// Microsoft Application
microsoft.application {
  id string
  appId string
  createdDateTime time
  identifierUris []string
  displayName string
  publisherDomain string
  signInAudience string
}

// Microsoft Service Principal
microsoft.serviceprincipal {
  id string
}

// Microsoft Security
microsoft.security {
  secureScores() []microsoft.security.securityscore
  latestSecureScores() microsoft.security.securityscore
}

// Microsoft Security Score
microsoft.security.securityscore {
  id string
  activeUserCount int
  averageComparativeScores []dict
  azureTenantId string
  controlScores []dict
  createdDateTime time
  currentScore float
  enabledServices []string
  licensedUserCount int
  maxScore float
  vendorInformation dict
}

// Microsoft Policies
microsoft.policies {
  authorizationPolicy() dict
  identitySecurityDefaultsEnforcementPolicy() dict
  adminConsentRequestPolicy() dict
  permissionGrantPolicies() []dict
}

// Microsoft Role Management
microsoft.rolemanagement {
  roleDefinitions() []microsoft.rolemanagement.roledefinition
}

// Microsoft Role Definition
microsoft.rolemanagement.roledefinition {
  id string
  description string
  displayName string
  isBuiltIn bool
  isEnabled bool
  rolePermissions []dict
  templateId string
  version string
  assignments() []microsoft.rolemanagement.roleassignment
}

// Microsoft Role Assignment
microsoft.rolemanagement.roleassignment {
  id string
  roleDefinitionId string
  principalId string
  principal dict
}

// Microsoft Device Management
microsoft.devicemanagement {
  deviceConfigurations() []microsoft.devicemanagement.deviceconfiguration
  deviceCompliancePolicies() []microsoft.devicemanagement.devicecompliancepolicy
}

// Microsoft Device Configuration
microsoft.devicemanagement.deviceconfiguration {
  id string
  lastModifiedDateTime time
  createdDateTime time
  description string
  displayName string
  version int
  // deprecated, kept for backwards compatability.
  properties dict
}

// Microsoft Device Compliance Policy
microsoft.devicemanagement.devicecompliancepolicy {
  id string
  createdDateTime time
  description string
  displayName string
  lastModifiedDateTime time
  version int
  assignments []dict
  // deprecated, kept for backwards compatability.
  properties dict
}

// Microsoft 365 ExchangeOnline
ms365.exchangeonline {
  malwareFilterPolicy []dict
  hostedOutboundSpamFilterPolicy []dict
  transportRule []dict
  remoteDomain []dict
  safeLinksPolicy []dict
  safeAttachmentPolicy []dict
  organizationConfig dict
  authenticationPolicy []dict
  antiPhishPolicy []dict
  dkimSigningConfig []dict
  owaMailboxPolicy []dict
  adminAuditLogConfig dict
  phishFilterPolicy []dict
  mailbox []dict
  atpPolicyForO365 []dict
  sharingPolicy []dict
  roleAssignmentPolicy []dict
}

// Microsoft 365 SharepointOnline
ms365.sharepointonline {
  spoTenant dict
  spoTenantSyncClientRestriction dict
}

// Microsoft 365 Teams
ms365.teams {
  csTeamsClientConfiguration dict
  csOAuthConfiguration []dict
}
