option go_package = "go.mondoo.com/cnquery/resources/packs/azure"

alias azurerm = azure
alias azurerm.resource = azure.resource
alias azurerm.compute = azure.compute
alias azurerm.compute.vm = azure.compute.vm
alias azurerm.compute.disk = azure.compute.disk
alias azurerm.network  = azure.network
alias azurerm.network.interface = azure.network.interface
alias azurerm.network.securitygroup = azure.network.securitygroup
alias azurerm.network.securityrule = azure.network.securityrule
alias azurerm.network.watcher = azure.network.watcher
alias azurerm.storage = azure.storage
alias azurerm.storage.account = azure.storage.account
alias azurerm.storage.container = azure.storage.container
alias azurerm.web = azure.web
alias azurerm.web.appsite = azure.web.appsite
alias azurerm.web.appsiteauthsettings = azure.web.appsiteauthsettings
alias azurerm.web.appsiteconfig = azure.web.appsiteconfig
alias azurerm.sql = azure.sql
alias azurerm.sql.server = azure.sql.server
alias azurerm.sql.server.administrator = azure.sql.server.administrator
alias azurerm.sql.database = azure.sql.database
alias azurerm.sql.databaseusage = azure.sql.databaseusage
alias azurerm.postgresql = azure.postgresql
alias azurerm.postgresql.server = azure.postgresql.server
alias azurerm.postgresql.database = azure.postgresql.database
alias azurerm.mysql = azure.mysql
alias azurerm.mysql.server = azure.mysql.server
alias azurerm.mysql.database = azure.mysql.database
alias azurerm.mariadb = azure.mariadb
alias azurerm.mariadb.server = azure.mariadb.server
alias azurerm.mariadb.database = azure.mariadb.database
alias azurerm.sql.configuration = azure.sql.configuration 
alias azurerm.sql.firewallrule = azure.sql.firewallrule
alias azurerm.keyvault = azure.keyvault
alias azurerm.keyvault.vault = azure.keyvault.vault
alias azurerm.keyvault.key = azure.keyvault.key
alias azurerm.keyvault.certificate = azure.keyvault.certificate
alias azurerm.keyvault.secret = azure.keyvault.secret
alias azurerm.monitor = azure.monitor
alias azurerm.monitor.logprofile = azure.monitor.logprofile 
alias azurerm.monitor.diagnosticsetting = azure.monitor.diagnosticsetting

// Azure Active Directory (deprecated, use microsoft resource pack instead)
azuread {
  // deprecated, use microsoft.user
  users() []azuread.user
  // deprecated, use microsoft.group
  groups() []azuread.group
  // deprecated, use microsoft.domain
  domains() []azuread.domain
  // deprecated, use microsoft.application
  applications() []azuread.application
  // deprecated, use microsoft.serviceprincipal
  servicePrincipals() []azuread.serviceprincipal
}

// Azure Active Directory User (deprecated, use microsoft.user instead)
private azuread.user {
  id string
  displayName string
  givenName string
  surname string
  userPrincipalName string
  accountEnabled bool
  mailNickname string
  mail string
  // deprecated, no longer used
  objectType() string
  userType string
  // deprecated, no longer used
  properties() dict
}

// Azure Active Directory Group (deprecated, use microsoft.group instead)
private azuread.group {
  id string
  displayName string
  securityEnabled bool
  mailEnabled bool
  mailNickname string
  mail string
  // deprecated, no longer used
  objectType() string
  // deprecated, no longer used
  properties() dict
  members() []azuread.user
}

// Azure Active Directory Domain (deprecated, use microsoft.domain instead)
private azuread.domain {
  name string
  isVerified bool
  isDefault bool
  authenticationType string
  // deprecated, no longer used
  properties() dict
}

// Azure Active Directory Application (deprecated, use microsoft.application instead))
private azuread.application {
  id string
}

// Azure Active Directory Service Principal (deprecated, use microsoft.serviceprincipal instead))
private azuread.serviceprincipal {
  id string
}

// Azure Resources
azure {
  // Get all the resources in a subscription
  resources() []azure.resource
}

// Azure Resource
private azure.resource {
  id string
  name string
  kind string
  location string
  tags map[string]string
  type string

  managedBy string
  sku dict
  plan dict
  identity dict

  provisioningState string
  createdTime time
  changedTime time
}

// Azure Compute
azure.compute {
  vms() []azure.compute.vm
  // Lists all the disks under a subscription
  disks() []azure.compute.disk
}

// Azure Compute VM
private azure.compute.vm {
  id string
  name string
  location string
  tags map[string]string
  type string
  properties dict
  extensions() []dict
  osDisk() azure.compute.disk
  dataDisks() []azure.compute.disk
}

// Azure Disk Resource
private azure.compute.disk {
  // Disk resource id
  id string
  // Disk resource name
  name string
  // Disk resource location
  location string
  // Disk resource tags
  tags map[string]string
  // Disk resource type
  type string
  // A relative URI containing the ID of the VM that has the disk attached
  managedBy string
  // List of relative URIs containing the IDs of the VMs that have the disk attached
  managedByExtended []string
  // The logical zone list for disk
  zones []string
  // The disk sku name and tier
  sku dict
  // Disk resource properties
  properties dict
}

// Azure Network
azure.network {
  interfaces() []azure.network.interface
  securityGroups() []azure.network.securitygroup
  watchers() []azure.network.watcher
}

// Azure Network Interface
private azure.network.interface {
  id string
  name string
  location string
  tags map[string]string
  type string
  etag string
  properties dict
  vm() azure.compute.vm
}

// Azure Network Security Group
private azure.network.securitygroup {
  id string
  name string
  location string
  tags map[string]string
  type string
  etag string
  properties dict
  interfaces []azure.network.interface
  securityRules []azure.network.securityrule
  defaultSecurityRules []azure.network.securityrule
}

// Azure Network Security Rule
private azure.network.securityrule {
  id string
  name string
  etag string
  properties dict
  destinationPortRange []dict
}

// Azure Network Watcher
private azure.network.watcher {
  id string
  name string
  location string
  tags map[string]string
  type string
  etag string
  properties dict
}

// Azure Storage
azure.storage {
  accounts() []azure.storage.account
}

// Azure Storage Account
private azure.storage.account {
  id string
  name string
  location string
  tags map[string]string
  type string
  properties dict
  identity dict
  sku dict
  kind string
  containers() []azure.storage.container
}

// Azure Storage Container
private azure.storage.container {
  id string
  name string
  type string
  etag string
  properties dict
}

// Azure Web
azure.web {
  apps() []azure.web.appsite
  availableRuntimes() []dict
}

// Azure Web App Site
private azure.web.appsite {
  id string
  name string
  kind string
  location string
  type string
  tags map[string]string
  properties dict
  identity dict

  configuration() azure.web.appsiteconfig
  authenticationSettings() azure.web.appsiteauthsettings
  metadata() dict
  applicationSettings() dict
  connectionSettings() dict
  stack() dict
}

// Azure AppSite Authentication Settings
private azure.web.appsiteauthsettings {
  id string
  name string
  kind string
  type string
  properties dict
}

// Azure AppSite Config
private azure.web.appsiteconfig {
  id string
  name string
  kind string
  type string
  properties dict
}

// Azure SQL
azure.sql {
  servers() []azure.sql.server
}

// Azure SQL Server
private azure.sql.server {
  id string
  name string
  location string
  tags map[string]string
  type string
  properties dict
  databases() []azure.sql.database
  firewallRules() []azure.sql.firewallrule
  azureAdAdministrators() []azure.sql.server.administrator
  connectionPolicy() dict
  auditingPolicy() dict
  securityAlertPolicy() dict
  encryptionProtector() dict
}

// Azure SQL Server Administrator
private azure.sql.server.administrator {
  id string
  name string
  type string
  administratorType string
  login string
  sid string
  tenantId string
}

// Azure SQL Server Database
private azure.sql.database {
  id string
  name string
  type string
  collation string
  creationDate time
  // deprecated, no longer used
  containmentState() int
  // deprecated, use serviceLevelObjective instead
  currentServiceObjectiveId() string
  databaseId string
  earliestRestoreDate time
  createMode string
  sourceDatabaseId string
  sourceDatabaseDeletionDate time
  restorePointInTime time
  recoveryServicesRecoveryPointResourceId string
  edition string
  maxSizeBytes int
  // deprecated, use requestedServiceObjectiveName instead
  requestedServiceObjectiveId() string
  requestedServiceObjectiveName string
  serviceLevelObjective string
  status string
  elasticPoolName string
  defaultSecondaryLocation string
  // deprecated, no longer used
  serviceTierAdvisors() dict
  // deprecated, use advisor.recommendedActions instead
  recommendedIndex() dict
  failoverGroupId string
  readScale string
  sampleName string
  zoneRedundant bool

  transparentDataEncryption() dict
  advisor() []dict
  threatDetectionPolicy() dict
  connectionPolicy() dict
  auditingPolicy() dict
  usage() []azure.sql.databaseusage
}

// Azure MS Database Usage
private azure.sql.databaseusage {
  id string
  name string
  resourceName string
  displayName string
  currentValue float
  limit float
  unit string
  // deprecated, no longer supported
  nextResetTime() time
}

// Azure PostgreSQL
azure.postgresql {
   servers() []azure.postgresql.server
}

// Azure PostgreSQL Server
private azure.postgresql.server {
  id string
  name string
  location string
  tags map[string]string
  type string
  properties dict
  configuration() []azure.sql.configuration
  databases() []azure.postgresql.database
  firewallRules() []azure.sql.firewallrule
}

// Azure PostgreSQL Database
private azure.postgresql.database {
  id string
  name string
  type string
  charset string
  collation string
}

// Azure MySQL
azure.mysql {
  servers() []azure.mysql.server
}

// Azure MySQL Server
private azure.mysql.server {
  id string
  name string
  location string
  tags map[string]string
  type string
  properties dict
  configuration() []azure.sql.configuration
  databases() []azure.mysql.database
  firewallRules() []azure.sql.firewallrule
}

// Azure MySQL Database
private azure.mysql.database {
  id string
  name string
  type string
  charset string
  collation string
}

// Azure MariaDB
azure.mariadb {
  servers() []azure.mariadb.server
}

// Azure MariaDB Server
private azure.mariadb.server {
  id string
  name string
  location string
  tags map[string]string
  type string
  properties dict
  configuration() []azure.sql.configuration
  databases() []azure.mariadb.database
  firewallRules() []azure.sql.firewallrule
}

// Azure MariaDB Database
private azure.mariadb.database {
  id string
  name string
  type string
  charset string
  collation string
}

// Azure SQL Configuration
private azure.sql.configuration {
  id string
  name string
  type string
  value string
  description string
  defaultValue string
  dataType string
  allowedValues string
  source string
}

// Azure SQL Firewall Rule
private azure.sql.firewallrule {
  id string
  name string
  type string
  startIpAddress string
  endIpAddress string
}

// Azure Key Vault
azure.keyvault {
  vaults() []azure.keyvault.vault
}

// Azure Key Vault Vault
private azure.keyvault.vault {
  id string
  vaultName string
  type string
  location string
  tags map[string]string

  vaultUri() string
  properties() dict

  keys() []azure.keyvault.key
  certificates() []azure.keyvault.certificate
  secrets() []azure.keyvault.secret
  diagnosticSettings() []azure.monitor.diagnosticsetting
}

// Azure Key Vault Key
private azure.keyvault.key {
  kid string
  tags map[string]string
  managed bool

  enabled bool
  notBefore time
  expires time
  created time
  updated time
  recoveryLevel string

  keyName() string
  version() string
  versions() []azure.keyvault.key
}

// Azure Key Vault Certificate
private azure.keyvault.certificate {
  id string
  tags map[string]string
  x5t string

  enabled bool
  notBefore time
  expires time
  created time
  updated time
  recoveryLevel string

  certName() string
  version() string
  versions() []azure.keyvault.certificate
}

// Azure Key Vault Secret
private azure.keyvault.secret {
  id string
  tags map[string]string
  contentType string
  managed bool

  enabled bool
  notBefore time
  expires time
  created time
  updated time

  secretName() string
  version() string
  versions() []azure.keyvault.secret
}

// Azure Monitor
azure.monitor {
  logProfiles() []azure.monitor.logprofile
}

// Azure Monitor Log Profile
private azure.monitor.logprofile {
  id string
  name string
  location string
  type string
  tags map[string]string
  properties dict
  storageAccount azure.storage.account
}

// Azure Monitor Diagnostic Setting
private azure.monitor.diagnosticsetting {
  id string
  name string
  type string
  properties dict
  storageAccount azure.storage.account
}