resources:
  asset:
    fields:
      name: {}
      ids: {}
      platform: {}
      kind: {}
      runtime: {}
      version: {}
      arch: {}
      title: {}
      family: {}
      fqdn: {}
      build: {}
      labels: {}
      vulnerabilityReport: {}
    min_mondoo_version: 6.13.0
  audit.advisory:
    fields:
      description: {}
      id: {}
      modified: {}
      mrn: {}
      published: {}
      title: {}
      worstScore: {}
    is_private: true
    min_mondoo_version: 5.15.0
  audit.cve:
    fields:
      id: {}
      modified: {}
      mrn: {}
      published: {}
      state: {}
      summary: {}
      unscored: {}
      worstScore: {}
    is_private: true
    min_mondoo_version: 5.15.0
  audit.cvss:
    fields:
      score: {}
      vector: {}
    is_private: true
    min_mondoo_version: 5.15.0
  audit.exploit:
    fields:
      id: {}
      modified: {}
      mrn: {}
      worstScore: {}
    is_private: true
    min_mondoo_version: 5.15.0
  authorizedkeys:
    fields:
      content: {}
      file: {}
      path: {}
    min_mondoo_version: 5.15.0
  authorizedkeys.entry:
    fields:
      file: {}
      key: {}
      label: {}
      line: {}
      options: {}
      type: {}
    min_mondoo_version: 5.15.0
  certificate:
    fields:
      authorityKeyID: {}
      crlDistributionPoints: {}
      expiresIn: {}
      extendedKeyUsage: {}
      extensions: {}
      fingerprints: {}
      isCA: {}
      isRevoked: {}
      isVerified:
        min_mondoo_version: 5.17.1
      issuer: {}
      issuingCertificateUrl: {}
      keyUsage: {}
      notAfter: {}
      notBefore: {}
      ocspServer: {}
      pem: {}
      policyIdentifier: {}
      revokedAt: {}
      serial: {}
      signature: {}
      signingAlgorithm: {}
      subject: {}
      subjectKeyID: {}
      version: {}
    min_mondoo_version: 5.15.0
  dns:
    fields:
      dkim: {}
      fqdn: {}
      mx: {}
      params: {}
      records: {}
    maturity: experimental
    min_mondoo_version: 5.15.0
  dns.dkimRecord:
    fields:
      dnsTxt: {}
      domain: {}
      flags: {}
      hashAlgorithms: {}
      keyType: {}
      notes: {}
      publicKeyData: {}
      serviceTypes: {}
      valid: {}
      version: {}
    min_mondoo_version: 5.15.0
  dns.mxRecord:
    fields:
      domainName: {}
      name: {}
      preference: {}
    maturity: experimental
    min_mondoo_version: 5.15.0
  dns.record:
    fields:
      class: {}
      name: {}
      rdata: {}
      ttl: {}
      type: {}
    maturity: experimental
    min_mondoo_version: 5.15.0
  domainName:
    fields:
      effectiveTLDPlusOne: {}
      fqdn: {}
      labels: {}
      tld: {}
      tldIcannManaged: {}
    min_mondoo_version: 5.15.0
  file:
    fields:
      basename: {}
      content: {}
      dirname: {}
      empty:
        min_mondoo_version: 5.18.0
      exists: {}
      group: {}
      path: {}
      permissions: {}
      size: {}
      user: {}
    min_mondoo_version: 5.0.0
    snippets:
    - query: |
        file('/etc') {
          exists
          permissions.isDirectory
        }
      title: Test if a directory exists
  file.permissions:
    fields:
      group_executable: {}
      group_readable: {}
      group_writeable: {}
      isDirectory: {}
      isFile: {}
      isSymlink: {}
      mode: {}
      other_executable: {}
      other_readable: {}
      other_writeable: {}
      sgid: {}
      sticky: {}
      suid: {}
      user_executable: {}
      user_readable: {}
      user_writeable: {}
    is_private: true
    min_mondoo_version: 5.15.0
  group:
    fields:
      gid: {}
      members: {}
      name: {}
      sid: {}
    min_mondoo_version: 5.15.0
  groups:
    fields: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: groups.where(name == 'wheel').list { members.all( name != 'username') }
      title: Ensure the user is not part of group
  kernel:
    fields:
      info: {}
      installed: {}
      modules: {}
      parameters: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: kernel.modules { name loaded size }
      title: List all kernel modules
    - query: kernel.modules.where( loaded == true ) { name }
      title: List all loaded kernel modules
    - query: kernel { info }
      title: List all information from running kernel
    - query: kernel { info['version'] }
      title: List version from running kernel
  kernel.module:
    fields:
      loaded: {}
      name: {}
      size: {}
    min_mondoo_version: 5.15.0
  mondoo:
    fields:
      build: {}
      capabilities: {}
      jobEnvironment: {}
      nulllist: {}
      resources: {}
      version: {}
    min_mondoo_version: 5.15.0
  mondoo.asset:
    fields:
      platformIDs: {}
    min_mondoo_version: 5.15.0
  mondoo.eol:
    fields:
      date: {}
      product: {}
      version: {}
    min_mondoo_version: 5.15.0
  os:
    fields:
      env: {}
      hostname: {}
      machineid: {}
      name: {}
      path: {}
      rebootpending: {}
      updates: {}
      uptime: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: os.env
      title: Show all environment variables
    - query: os.env['windir']
      title: Retrieve a single environment variable
  os.rootCertificates:
    fields:
      content: {}
      files: {}
    min_mondoo_version: 5.15.0
  os.rootcertificates:
    fields: {}
    min_mondoo_version: 5.15.0
  os.update:
    fields:
      category: {}
      format: {}
      name: {}
      restart: {}
      severity: {}
    min_mondoo_version: 5.15.0
  package:
    fields:
      arch: {}
      available: {}
      description: {}
      epoch: {}
      format: {}
      installed: {}
      name: {}
      origin: {}
      outdated: {}
      status: {}
      version: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: package('git').installed
      title: Check if a package is installed
  packages:
    fields: {}
    min_mondoo_version: 5.15.0
  parse:
    fields: {}
    min_mondoo_version: 5.15.0
  parse.certificates:
    fields:
      content: {}
      file: {}
      path: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: parse.certificates('/etc/ssl/cert.pem').list { issuer.dn }
      title: Parse Certificates from target file system
    - query: 'parse.certificates(content: ''PEM CONTENT'').list { issuer.dn }'
      title: Parse Certificates from content
  parse.ini:
    fields:
      content: {}
      delimiter: {}
      file: {}
      params: {}
      sections: {}
    min_mondoo_version: 5.15.0
  parse.json:
    fields:
      content: {}
      file: {}
      params: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: 'parse.json(content: ''{ "a": "b"  }'').params'
      title: Parse JSON from string content
    - query: parse.json("/path/to/test.json").params
      title: Parse JSON from file
  parse.plist:
    fields:
      content: {}
      file: {}
      params: {}
    min_mondoo_version: 5.15.0
  parse.yaml:
    fields:
      content: {}
      file: {}
      params: {}
    min_mondoo_version: 5.15.0
  pkix.extension:
    fields:
      critical: {}
      identifier: {}
      value: {}
    min_mondoo_version: 5.15.0
  pkix.name:
    fields:
      commonName: {}
      country: {}
      dn: {}
      extraNames: {}
      id: {}
      locality: {}
      names: {}
      organization: {}
      organizationalUnit: {}
      postalCode: {}
      province: {}
      serialNumber: {}
      streetAddress: {}
    min_mondoo_version: 5.15.0
  platform:
    docs:
      desc: |
        The `platform.runtimeEnv` fields is deprecated. Please use `platform.runtime` instead.
        The `platform.release` field is deprecated. Please use `platform.version` instead.
    fields:
      arch: {}
      build: {}
      family: {}
      fqdn: {}
      kind: {}
      labels:
        min_mondoo_version: 5.37.0
      name: {}
      release: {}
      runtime:
        min_mondoo_version: 6.9.0
      runtimeEnv: {}
      title: {}
      version:
        min_mondoo_version: 6.9.0
      vulnerabilityReport: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: platform { name release }
      title: Platform Name and Release
  platform.advisories:
    fields:
      cvss: {}
      stats: {}
    min_mondoo_version: 5.15.0
  platform.cves:
    fields:
      cvss: {}
      stats: {}
    min_mondoo_version: 5.15.0
  platform.eol:
    fields:
      date: {}
      docsUrl: {}
      productUrl: {}
    min_mondoo_version: 5.15.0
  platform.exploits:
    fields:
      cvss: {}
      stats: {}
    min_mondoo_version: 5.15.0
  platform.virtualization:
    docs:
      desc: |
        The `platform.virtualization.isContainer`is deprecated. Please use `platform.kind` or `platform.runtime` instead.
    fields:
      isContainer: {}
    min_mondoo_version: 5.15.0
  port:
    fields:
      address: {}
      port: {}
      process: {}
      protocol: {}
      remoteAddress: {}
      remotePort: {}
      state: {}
      user: {}
    min_mondoo_version: 5.15.0
  ports:
    fields:
      listening: {}
    min_mondoo_version: 5.15.0
  privatekey:
    fields:
      encrypted: {}
      path: {}
      pem: {}
    min_mondoo_version: 5.15.0
  process:
    fields:
      command: {}
      executable: {}
      flags: {}
      pid: {}
      state: {}
    min_mondoo_version: 5.15.0
  processes:
    fields: {}
    min_mondoo_version: 5.15.0
  regex:
    fields:
      creditCard: {}
      email: {}
      emoji: {}
      ipv4: {}
      ipv6: {}
      mac: {}
      semver: {}
      url: {}
      uuid: {}
    min_mondoo_version: 5.15.0
  socket:
    fields:
      address: {}
      port: {}
      protocol: {}
    min_mondoo_version: 5.15.0
  socketstats:
    fields:
      openPorts: {}
    min_mondoo_version: 5.15.0
  sshd:
    fields: {}
    min_mondoo_version: 5.15.0
  sshd.config:
    fields:
      ciphers: {}
      content: {}
      file: {}
      hostkeys: {}
      kexs: {}
      macs: {}
      params: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: sshd.config.params['Banner'] == '/etc/ssh/sshd-banner'
      title: Check that the SSH banner is sourced from /etc/ssh/sshd-banner
  time:
    fields:
      day: {}
      hour: {}
      minute: {}
      now: {}
      second: {}
      today: {}
      tomorrow: {}
    min_mondoo_version: 5.15.0
  tls:
    fields:
      certificates: {}
      ciphers: {}
      domainName: {}
      extensions: {}
      nonSniCertificates: {}
      params: {}
      socket: {}
      versions: {}
    min_mondoo_version: 5.15.0
  user:
    fields:
      authorizedkeys: {}
      enabled: {}
      gid: {}
      group: {}
      home: {}
      name: {}
      shell: {}
      sid: {}
      sshkeys: {}
      uid: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: |
        user(name: 'vagrant') { home uid }
      title: Display a specific user's home directory and UID
  users:
    fields: {}
    min_mondoo_version: 5.15.0
    snippets:
    - query: users.list { uid name }
      title: Display all users and their UID
    - query: users.one( name == 'root')
      title: Ensure user exists
    - query: users.none(name == 'vagrant')
      title: Ensure user does not exist
    - query: |
        users.where( sid == /S-1-5-21-\d+-\d+-\d+-501/ ).list {
          name != "Guest"
        }
      title: Search for a specific SID and check for its values
  uuid:
    fields:
      urn: {}
      value: {}
      variant: {}
      version: {}
    min_mondoo_version: 5.15.0
  yaml.path:
    fields:
      filepath: {}
      jsonpath: {}
      result: {}
    min_mondoo_version: 5.15.0
