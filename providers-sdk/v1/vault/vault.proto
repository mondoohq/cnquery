// Copyright (c) Mondoo, Inc.
// SPDX-License-Identifier: BUSL-1.1

syntax = "proto3";

package cnquery.providers.v1;
option go_package = "go.mondoo.com/cnquery/v11/providers-sdk/v1/vault";

message SecretID {
  string key = 1;
}

message Secret {
  string key = 1;
  string label = 2;
  bytes data = 3;
  SecretEncoding encoding = 4;
}

service Vault {
  rpc About(Empty) returns (VaultInfo);
  rpc Get(SecretID) returns (Secret);
  rpc Set(Secret) returns (SecretID);
}

// protolint:disable:next ENUM_FIELD_NAMES_PREFIX 
enum CredentialType {
  // protolint:disable:next ENUM_FIELD_NAMES_ZERO_VALUE_END_WITH
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  undefined = 0;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  password = 1;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  private_key = 2;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  ssh_agent = 3;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  bearer = 4;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  credentials_query = 5;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  json = 6;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  aws_ec2_instance_connect = 7;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  aws_ec2_ssm_session = 8;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  pkcs12 = 9;
}

// protolint:disable:next ENUM_FIELD_NAMES_PREFIX 
// protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
enum SecretEncoding {
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  // protolint:disable:next ENUM_FIELD_NAMES_ZERO_VALUE_END_WITH
  encoding_undefined = 0;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  encoding_json = 1;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  encoding_proto = 2;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  encoding_binary = 3;
}

message Empty {
  
}

message VaultInfo {
  string name = 1;
}

// Credential holds authentication information
message Credential {
  string secret_id = 1;
  CredentialType type = 2;
  string user = 3;
  bytes secret = 4;
  reserved 5;

  // the following fields are all optional and sugar for defining a secret
  // and could be the password for the private key
  // those values are only allowed for reading in yaml values but not via API 

  // for user convenience we define password, this allows yaml/json writers
  string password = 21; 

  // for user convenience we define private_key, this allows yaml/json writers
  // to just embed the string representation, otherwise it would need to be 
  // base64 encoded
  string private_key = 22;

  // for user convenience we define private_key_path which loads a local file 
  // into the secret
  string private_key_path = 23;
}

// protolint:disable:next ENUM_FIELD_NAMES_PREFIX 
enum VaultType {
  // protolint:disable:next ENUM_FIELD_NAMES_ZERO_VALUE_END_WITH
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  None = 0;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  KeyRing = 1;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  LinuxKernelKeyring = 2;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  EncryptedFile = 3;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  HashiCorp = 4;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  GCPSecretsManager = 5;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  AWSSecretsManager = 6;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  AWSParameterStore = 7;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  GCPBerglas = 8;
  // protolint:disable:next ENUM_FIELD_NAMES_UPPER_SNAKE_CASE
  Memory = 9;
}

message VaultConfiguration {
  string name = 1;
  VaultType type = 2;
  map <string, string> options = 3;
}