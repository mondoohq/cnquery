// Copyright (c) Mondoo, Inc.
// SPDX-License-Identifier: BUSL-1.1

option provider = "go.mondoo.com/cnquery/v9/providers/google-workspace"
option go_package = "go.mondoo.com/cnquery/v11/providers/google-workspace/resources"

// Google Workspace
googleworkspace {
  // Retrieves a list of all organizational units for the Google Workspace account
  orgUnits() []googleworkspace.orgUnit
  // Retrieves a list of all users for the Google Workspace account
  users() []googleworkspace.user
  // Retrieves a list of domains for the Google Workspace account
  domains() []googleworkspace.domain
  // Retrieves a list of all groups for the Google Workspace account
  groups() []googleworkspace.group
  // Retrieves a list of all roles for the Google Workspace account
  roles() []googleworkspace.role
  // Retrieves a list of all apps for the Google Workspace account
  connectedApps() []googleworkspace.connectedApp
  // Retrieves a list of all calendars for the Google Workspace account
  calendars() []googleworkspace.calendar
}

// Google Workspace calendar
private googleworkspace.calendar @defaults("summary") {
  // Title of the calendar
  summary string
  // The summary that the authenticated user has set for this calendar
  summaryOverride string
  // Whether the calendar is the primary calendar for the authenticated user
  primary bool
  // ACL rules for the calendar
  acl() []googleworkspace.calendar.aclRule
}

// Google Workspace calendar ACL rule
private googleworkspace.calendar.aclRule @defaults("role") {
  // The role assigned to the scope. Possible values are none, freeBusyReader, reader, writer, owner
  role string
  // The extent to which calendar access is granted by this ACL rule
  scope googleworkspace.calendar.aclRule.scope
}

// Google Workspace calendar ACL rule scope
private googleworkspace.calendar.aclRule.scope @defaults("type") {
  // The type of the scope. Possible values are default, user, group, domain
  type string
  // The email address of the user or group, or the name of a domain depending on the scope type
  value string
}

// Google Workspace organizational unit
private googleworkspace.orgUnit @defaults("name") {
  // The unique ID of the organizational unit
  id string
  // The organizational unit's path name
  name string
  // Description of the organizational unit
  description string
}

// Google Workspace domain
private googleworkspace.domain @defaults("domainName") {
  // The domain name of the customer
  domainName string
  // Whether the domain is a primary domain
  isPrimary bool
  // Whether the domain is verified
  verified bool
  // Creation time of the domain
  creationTime time
}

// Google Workspace user accounts
private googleworkspace.user @defaults("primaryEmail") {
  // The unique ID for the user
  id string
  // The user's last name
  familyName string
  // The user's first names
  givenName string
  // The user's full name
  fullName string
  // The user's primary email address
  primaryEmail string
  // Recovery email of the user
  recoveryEmail string
  // Recovery phone of the user
  recoveryPhone string
  // Whether the user accepted the Terms of Service agreement
  agreedToTerms bool
  // A list of the user's alias email addresses
  aliases []string
  // Whether the user is suspended
  suspended bool
  // The reason a user account is suspended
  suspensionReason string
  // Whether the user is archived
  archived bool
  // Whether the user has super administrator privileges
  isAdmin bool
  // Whether the a user is a delegated administrator
  isDelegatedAdmin bool
  // Whether 2-step verification is enforced
  isEnforcedIn2Sv bool
  // Whether the user is enrolled in 2-step verification
  isEnrolledIn2Sv bool
  // Whether the user's Google mailbox is created
  isMailboxSetup bool
  // User's last login time
  lastLoginTime time
  //  User's account creation time
  creationTime time
  // Retrieves latest report for the user
  usageReport() googleworkspace.report.usage
  // Returns the user-issued tokens to 3rd party applications
  tokens() []googleworkspace.token
}

// Google Workspace token
private googleworkspace.token @defaults("displayText") {
  // Whether the application is registered with Google
  anonymous bool
  // The Client ID of the application
  clientId string
  // The displayable name of the application token
  displayText string
  // Whether the token is issued to an installed application
  nativeApp bool
  // A list of granted authorization scopes the application
  scopes []string
  // The unique ID of the user that issued the token
  userKey string
}

// Google Workspace third-party connected apps
private googleworkspace.connectedApp @defaults("name clientId") {
  // The unique ID of the application
  clientId string
  // The application's name
  name string
  // Aggregated scopes across all tokens issued to the application
  scopes []string
  // Google Workspace User that use the 3rd-party application
  users []googleworkspace.user
  // Returns the user-issued tokens to 3rd party applications
  tokens []googleworkspace.token
}

// Google Workspace group
private googleworkspace.group @defaults("email") {
  // The unique ID of a group
  id string
  // The group's display name
  name string
  // The group's email address
  email string
  // Purpose of the group
  description string
  // A list of a group's alias email addresses
  aliases []string
  // The number of users that are direct members of the group
  directMembersCount int
  // Whether this group was created by an administrator rather than a user
  adminCreated bool
  // Retrieve members of the group
  members() []googleworkspace.member
  // Group settings
  settings() dict
  // Group security settings
  securitySettings() dict
}

// Google Workspace group member
private googleworkspace.member @defaults("email") {
  // The unique ID of the group member
  id string
  // The member's email address
  email string
  // Status of member
  status string
  // The type of group member
  type string
  // Linked user account
  user() googleworkspace.user
}

// Google Workspace role
private googleworkspace.role @defaults("name") {
  // ID of the role
  id int
  // Name of the role
  name string
  // A short description of the role
  description string
  // Whether this is a pre-defined system role
  isSystemRole bool
  // Whether the role is a super admin role
  isSuperAdminRole bool
  // The set of privileges
  privileges []dict
}

// Google Workspace apps reports
private googleworkspace.report.apps {
  // Retrieves a report for the settings of the Google Workspace app Drive
  drive() []googleworkspace.report.activity
  // Retrieves a report for the Google Workspace Admin settings
  admin() []googleworkspace.report.activity
}

// Google Workspace app reports activity
private googleworkspace.report.activity {
  id int
  ipAddress string
  ownerDomain string
  actor dict
  events []dict
}

// Google Workspace user usage reports
private googleworkspace.report.users {
  []googleworkspace.report.usage
}

// Google workspace usage report
private googleworkspace.report.usage {
  // The unique identifier of the customer's account
  customerId string
  // Google Workspace entity ID
  entityId string
  // Google Workspace profile identifier
  profileId string
  // Entity type
  type string
  // Email of user
  userEmail string
  // Date of the report
  date time
  // Parameter value pairs
  parameters []dict
  // Account Settings
  account() dict
  // Security Settings
  security() dict
  // App Usage
  appUsage() dict
}