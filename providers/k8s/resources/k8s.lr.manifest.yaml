# Copyright (c) Mondoo, Inc.
# SPDX-License-Identifier: BUSL-1.1

resources:
  k8s:
    fields:
      apiResources: {}
      clusterrolebindings:
        min_mondoo_version: 5.31.0
      clusterroles:
        min_mondoo_version: 5.31.0
      configmaps:
        min_mondoo_version: 5.31.0
      cronjobs: {}
      customresources:
        min_mondoo_version: 6.1.0
      daemonsets: {}
      deployments: {}
      ingresses:
        min_mondoo_version: 7.9.0
      jobs: {}
      namespaces: {}
      networkPolicies:
        min_mondoo_version: 5.31.0
      nodes: {}
      podSecurityPolicies:
        min_mondoo_version: 5.31.0
      pods: {}
      replicasets:
        min_mondoo_version: 6.7.0
      rolebindings:
        min_mondoo_version: 5.31.0
      roles:
        min_mondoo_version: 5.31.0
      secrets:
        min_mondoo_version: 5.26.0
      serverVersion: {}
      serviceaccounts:
        min_mondoo_version: 5.31.0
      services:
        min_mondoo_version: 5.31.0
      statefulsets:
        min_mondoo_version: 6.7.0
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Kubernetes Documentation
      url: https://kubernetes.io/docs/home/
    snippets:
    - query: k8s.pods { containers.where(securityContext["privileged"] == true) name
        }
      title: List kubernetes pods with privileged containers
    - query: k8s.pods.all( namespace != "default")
      title: Check if the default namespace is used
    - query: k8s.serviceaccounts { name namespace secrets  }
      title: Query services accounts
    - query: k8s.roles { name namespace rules  }
      title: Query RBAC cluster roles
    - query: k8s.rolebindings { name namespace subjects  }
      title: Query RBAC role bindings
    - query: k8s.clusterrolebindings { name subjects  }
      title: Query RBAC cluster role bindings
    - query: k8s.podSecurityPolicies { name manifest }
      title: Query pod security policies
    - query: k8s.networkPolicies { name manifest }
      title: Query network policies
  k8s.admissionrequest:
    fields:
      name: {}
      namespace: {}
      object: {}
      oldObject: {}
      operation: {}
      userInfo: {}
    is_private: true
    min_mondoo_version: 6.17.0
    platform:
      name:
      - kubernetes
  k8s.admissionreview:
    fields:
      request: {}
    min_mondoo_version: 6.17.0
    platform:
      name:
      - kubernetes
  k8s.apiresource:
    fields:
      categories: {}
      group: {}
      kind: {}
      name: {}
      namespaced: {}
      shortNames: {}
      singularName: {}
      version: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
  k8s.configmap:
    fields:
      annotations: {}
      created: {}
      data: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      namespace: {}
      resourceVersion: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
      - kubernetes
    refs:
    - title: ConfigMaps Documentation
      url: https://kubernetes.io/docs/concepts/configuration/configmap/
  k8s.container:
    fields:
      args: {}
      command: {}
      containerImage:
        min_mondoo_version: 5.31.0
      env:
        min_mondoo_version: 6.17.0
      envFrom:
        min_mondoo_version: 6.17.0
      image: {}
      imageName:
        min_mondoo_version: 5.31.0
      imagePullPolicy: {}
      livenessProbe: {}
      name: {}
      readinessProbe: {}
      resources: {}
      securityContext: {}
      tty: {}
      uid: {}
      volumeDevices: {}
      volumeMounts: {}
      workingDir: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
  k8s.cronjob:
    fields:
      annotations:
        min_mondoo_version: 5.29.2
      containers:
        min_mondoo_version: 6.11.0
      created: {}
      id:
        min_mondoo_version: 6.10.0
      initContainers:
        min_mondoo_version: 6.11.0
      kind: {}
      labels:
        min_mondoo_version: 5.29.2
      manifest: {}
      name: {}
      namespace: {}
      podSpec:
        min_mondoo_version: 6.11.0
      resourceVersion:
        min_mondoo_version: 5.29.2
      uid: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
    refs:
    - title: CronJob Documentation
      url: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
  k8s.customresource:
    fields:
      annotations: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      namespace: {}
      resourceVersion: {}
      uid: {}
    is_private: true
    min_mondoo_version: 6.1.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Custom Resources Documentation
      url: https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/
  k8s.daemonset:
    fields:
      annotations:
        min_mondoo_version: 5.29.2
      containers:
        min_mondoo_version: 6.11.0
      created: {}
      id:
        min_mondoo_version: 6.10.0
      initContainers:
        min_mondoo_version: 6.11.0
      kind: {}
      labels:
        min_mondoo_version: 5.29.2
      manifest: {}
      name: {}
      namespace: {}
      podSpec:
        min_mondoo_version: 6.11.0
      resourceVersion:
        min_mondoo_version: 5.29.2
      uid: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
    refs:
    - title: DaemonSet Documentation
      url: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
  k8s.deployment:
    fields:
      annotations:
        min_mondoo_version: 5.29.2
      containers:
        min_mondoo_version: 6.11.0
      created: {}
      id:
        min_mondoo_version: 6.10.0
      initContainers:
        min_mondoo_version: 6.11.0
      kind: {}
      labels:
        min_mondoo_version: 5.29.2
      manifest: {}
      name: {}
      namespace: {}
      podSpec:
        min_mondoo_version: 6.11.0
      resourceVersion:
        min_mondoo_version: 5.29.2
      uid: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Deployments Documentation
      url: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
  k8s.ephemeralContainer:
    fields:
      args: {}
      command: {}
      containerImage: {}
      env: {}
      envFrom: {}
      image: {}
      imageName: {}
      imagePullPolicy: {}
      name: {}
      securityContext: {}
      tty: {}
      uid: {}
      volumeDevices: {}
      volumeMounts: {}
      workingDir: {}
    is_private: true
    min_mondoo_version: 7.2.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Ephemeral Containers Documentation
      url: https://kubernetes.io/docs/concepts/workloads/pods/ephemeral-containers/
  k8s.ingress:
    fields:
      annotations: {}
      created: {}
      id: {}
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      namespace: {}
      resourceVersion: {}
      rules: {}
      tls: {}
      uid: {}
    is_private: true
    min_mondoo_version: 7.9.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Ingress Documentation
      url: https://kubernetes.io/docs/concepts/services-networking/ingress/
  k8s.ingressbackend:
    fields:
      id: {}
      resourceRef: {}
      service: {}
    is_private: true
    min_mondoo_version: 7.9.0
    platform:
      name:
      - kubernetes
  k8s.ingresshttprulepath:
    fields:
      backend: {}
      id: {}
      path: {}
      pathType: {}
    is_private: true
    min_mondoo_version: 7.9.0
    platform:
      name:
      - kubernetes
  k8s.ingressresourceref:
    fields:
      apiGroup: {}
      id: {}
      kind: {}
      name: {}
    is_private: true
    min_mondoo_version: 7.9.0
    platform:
      name:
      - kubernetes
  k8s.ingressrule:
    fields:
      host: {}
      httpPaths: {}
      id: {}
    is_private: true
    min_mondoo_version: 7.9.0
    platform:
      name:
      - kubernetes
  k8s.ingressservicebackend:
    fields:
      id: {}
      name: {}
      portName: {}
      portNumber: {}
    is_private: true
    min_mondoo_version: 7.9.0
    platform:
      name:
      - kubernetes
  k8s.ingresstls:
    fields:
      certificates: {}
      hosts: {}
      id: {}
    is_private: true
    min_mondoo_version: 7.9.0
    platform:
      name:
      - kubernetes
  k8s.initContainer:
    fields:
      args: {}
      command: {}
      containerImage: {}
      env:
        min_mondoo_version: 6.17.0
      envFrom:
        min_mondoo_version: 6.17.0
      image: {}
      imageName: {}
      imagePullPolicy: {}
      name: {}
      resources: {}
      securityContext: {}
      tty: {}
      uid: {}
      volumeDevices: {}
      volumeMounts: {}
      workingDir: {}
    is_private: true
    min_mondoo_version: 6.10.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Init Containers Documentation
      url: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  k8s.job:
    fields:
      annotations:
        min_mondoo_version: 5.29.2
      containers:
        min_mondoo_version: 6.11.0
      created: {}
      id:
        min_mondoo_version: 6.10.0
      initContainers:
        min_mondoo_version: 6.11.0
      kind: {}
      labels:
        min_mondoo_version: 5.29.2
      manifest: {}
      name: {}
      namespace: {}
      podSpec:
        min_mondoo_version: 6.11.0
      resourceVersion:
        min_mondoo_version: 5.29.2
      uid: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Jobs Documentation
      url: https://kubernetes.io/docs/concepts/workloads/controllers/job/
  k8s.kubelet:
    fields:
      configFile: {}
      configuration: {}
      process: {}
    min_mondoo_version: 6.17.0
    platform:
      name:
      - kubernetes
    refs:
    - title: kubelet Documentation
      url: https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/
  k8s.namespace:
    fields:
      annotations: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Namespaces Documentation
      url: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  k8s.networkpolicy:
    fields:
      annotations: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      namespace: {}
      resourceVersion: {}
      spec: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Network Policies Documentation
      url: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  k8s.node:
    fields:
      annotations:
        min_mondoo_version: 5.29.2
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels:
        min_mondoo_version: 5.29.2
      name: {}
      resourceVersion:
        min_mondoo_version: 5.29.2
      uid: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Nodes Documentation
      url: https://kubernetes.io/docs/concepts/architecture/nodes/
  k8s.pod:
    fields:
      annotations: {}
      apiVersion: {}
      containers: {}
      created: {}
      ephemeralContainers:
        min_mondoo_version: 7.2.0
      id:
        min_mondoo_version: 6.10.0
      initContainers:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      namespace: {}
      node: {}
      podSpec: {}
      resourceVersion:
        min_mondoo_version: 5.29.2
      uid: {}
    is_private: true
    min_mondoo_version: 5.15.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Pods Documentation
      url: https://kubernetes.io/docs/concepts/workloads/pods/
  k8s.podsecuritypolicy:
    fields:
      annotations: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      resourceVersion: {}
      spec: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Pod Security Policies Documentation
      url: https://kubernetes.io/docs/concepts/security/pod-security-policy/
  k8s.rbac.clusterrole:
    fields:
      aggregationRule: {}
      annotations: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      resourceVersion: {}
      rules: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Using RBAC Authorization Documentation
      url: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding
  k8s.rbac.clusterrolebinding:
    fields:
      annotations: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      resourceVersion: {}
      roleRef: {}
      subjects: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Using RBAC Authorization Documentation
      url: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding
  k8s.rbac.role:
    fields:
      annotations: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      namespace: {}
      resourceVersion: {}
      rules: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Using RBAC Authorization Documentation
      url: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding
  k8s.rbac.rolebinding:
    fields:
      annotations: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      namespace: {}
      resourceVersion: {}
      roleRef: {}
      subjects: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Using RBAC Authorization Documentation
      url: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding
  k8s.replicaset:
    fields:
      annotations:
        min_mondoo_version: 5.29.2
      containers:
        min_mondoo_version: 6.11.0
      created: {}
      id:
        min_mondoo_version: 6.10.0
      initContainers:
        min_mondoo_version: 6.11.0
      kind: {}
      labels:
        min_mondoo_version: 5.29.2
      manifest: {}
      name: {}
      namespace: {}
      podSpec:
        min_mondoo_version: 6.11.0
      resourceVersion:
        min_mondoo_version: 5.29.2
      uid: {}
    is_private: true
    min_mondoo_version: 6.7.0
    platform:
      name:
      - kubernetes
    refs:
    - title: ReplicaSet Documentation
      url: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#rolebinding-and-clusterrolebinding
  k8s.secret:
    fields:
      annotations:
        min_mondoo_version: 5.29.2
      certificates:
        min_mondoo_version: 5.29.2
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels:
        min_mondoo_version: 5.29.2
      manifest: {}
      name: {}
      namespace: {}
      resourceVersion:
        min_mondoo_version: 5.29.2
      type:
        min_mondoo_version: 5.29.2
      uid: {}
    is_private: true
    min_mondoo_version: 5.26.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Secrets Documentation
      url: https://kubernetes.io/docs/concepts/configuration/secret/
  k8s.service:
    fields:
      annotations: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      namespace: {}
      resourceVersion: {}
      spec: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Service Documentation
      url: https://kubernetes.io/docs/concepts/services-networking/service/
  k8s.serviceaccount:
    fields:
      annotations: {}
      automountServiceAccountToken: {}
      created: {}
      id:
        min_mondoo_version: 6.10.0
      imagePullSecrets: {}
      kind: {}
      labels: {}
      manifest: {}
      name: {}
      namespace: {}
      resourceVersion: {}
      secrets: {}
      uid: {}
    is_private: true
    min_mondoo_version: 5.31.0
    platform:
      name:
      - kubernetes
    refs:
    - title: Service Accounts Documentation
      url: https://kubernetes.io/docs/concepts/security/service-accounts/
  k8s.statefulset:
    fields:
      annotations:
        min_mondoo_version: 5.29.2
      containers:
        min_mondoo_version: 6.11.0
      created: {}
      id:
        min_mondoo_version: 6.10.0
      initContainers:
        min_mondoo_version: 6.11.0
      kind: {}
      labels:
        min_mondoo_version: 5.29.2
      manifest: {}
      name: {}
      namespace: {}
      podSpec:
        min_mondoo_version: 6.11.0
      resourceVersion:
        min_mondoo_version: 5.29.2
      uid: {}
    is_private: true
    min_mondoo_version: 6.7.0
    platform:
      name:
      - kubernetes
    refs:
    - title: StatefulSets Documentation
      url: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
  k8s.userinfo:
    fields:
      uid: {}
      username: {}
    is_private: true
    min_mondoo_version: latest
    platform:
      name:
      - kubernetes
