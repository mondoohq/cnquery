[files."/usr/lib"]
content = """python3.11"""
stat.isdir = true

[files."/usr/lib/python3.11"]
content = """site-packages"""
stat.isdir = true

[files."/usr/lib/python3.11/site-packages"]
content = """python_ftp_server-1.3.17.dist-info
pyftpdlib-1.5.7-py3.11.egg-info"""
stat.isdir = true

[files."/usr/lib/python3.11/site-packages/pyftpdlib-1.5.7-py3.11.egg-info"]
stat.isdir = true
content = """PKG-INFO"""

[files."/usr/lib/python3.11/site-packages/pyftpdlib-1.5.7-py3.11.egg-info/PKG-INFO"]
content = """Metadata-Version: 2.1
Name: pyftpdlib
Version: 1.5.7
Summary: Very fast asynchronous FTP server library
Home-page: https://github.com/giampaolo/pyftpdlib/
Author: Giampaolo Rodola'
Author-email: g.rodola@gmail.com
License: MIT
Keywords: ftp,ftps,server,ftpd,daemon,python,ssl,sendfile,asynchronous,nonblocking,eventdriven,rfc959,rfc1123,rfc2228,rfc2428,rfc2640,rfc3659
Platform: Platform Independent
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Internet :: File Transfer Protocol (FTP)
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Filesystems
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Provides-Extra: ssl
License-File: LICENSE

|  |downloads| |stars| |forks| |contributors| |coverage|
|  |version| |packages| |license|
|  |github-actions| |appveyor| |doc| |twitter|

.. |downloads| image:: https://img.shields.io/pypi/dm/pyftpdlib.svg
    :target: https://pepy.tech/project/pyftpdlib
    :alt: Downloads

.. |stars| image:: https://img.shields.io/github/stars/giampaolo/pyftpdlib.svg
    :target: https://github.com/giampaolo/pyftpdlib/stargazers
    :alt: Github stars

.. |forks| image:: https://img.shields.io/github/forks/giampaolo/pyftpdlib.svg
    :target: https://github.com/giampaolo/pyftpdlib/network/members
    :alt: Github forks

.. |contributors| image:: https://img.shields.io/github/contributors/giampaolo/pyftpdlib.svg
    :target: https://github.com/giampaolo/pyftpdlib/graphs/contributors
    :alt: Contributors

.. |github-actions| image:: https://github.com/giampaolo/pyftpdlib/actions/workflows/tests.yml/badge.svg
    :target: https://github.com/giampaolo/pyftpdlib/actions/workflows/tests.yml
    :alt: Linux, macOS, Windows tests

.. |appveyor| image:: https://img.shields.io/appveyor/build/giampaolo/pyftpdlib/master.svg?label=windows%20tests
    :target: https://ci.appveyor.com/project/giampaolo/pyftpdlib
    :alt: Windows tests (Appveyor)

.. |coverage| image:: https://coveralls.io/repos/github/giampaolo/pyftpdlib/badge.svg?branch=master
    :target: https://coveralls.io/github/giampaolo/pyftpdlib?branch=master
    :alt: Test coverage (coverall.io)

.. |doc| image:: https://readthedocs.org/projects/pyftpdlib/badge/?version=latest
    :target: https://pyftpdlib.readthedocs.io/en/latest/
    :alt: Documentation Status

.. |version| image:: https://img.shields.io/pypi/v/pyftpdlib.svg?label=pypi
    :target: https://pypi.org/project/pyftpdlib
    :alt: Latest version

.. |packages| image:: https://repology.org/badge/tiny-repos/python:pyftpdlib.svg
    :target: https://repology.org/metapackage/python:pyftpdlib/versions
    :alt: Binary packages

.. |license| image:: https://img.shields.io/pypi/l/pyftpdlib.svg
    :target: https://github.com/giampaolo/pyftpdlib/blob/master/LICENSE
    :alt: License

.. |twitter| image:: https://img.shields.io/twitter/follow/grodola.svg?label=follow&style=flat&logo=twitter&logoColor=4FADFF
    :target: https://twitter.com/grodola
    :alt: Twitter Follow

Quick links
===========

- `Home <https://github.com/giampaolo/pyftpdlib>`__
- `Documentation <http://pyftpdlib.readthedocs.io>`__
- `Download <https://pypi.python.org/pypi/pyftpdlib/>`__
- `Blog <http://grodola.blogspot.com/search/label/pyftpdlib>`__
- `Mailing list <http://groups.google.com/group/pyftpdlib/topics>`__
- `What's new <https://github.com/giampaolo/pyftpdlib/blob/master/HISTORY.rst>`__

About
=====

Python FTP server library provides a high-level portable interface to easily
write very efficient, scalable and asynchronous FTP servers with Python. It is
the most complete `RFC-959 <http://www.faqs.org/rfcs/rfc959.html>`__ FTP server
implementation available for `Python <http://www.python.org/>`__ programming
language.

Features
========

- Extremely **lightweight**, **fast** and **scalable** (see
  `why <https://github.com/giampaolo/pyftpdlib/issues/203>`__ and
  `benchmarks <http://pyftpdlib.readthedocs.io/en/latest/benchmarks.html>`__).
- Uses **sendfile(2)** (see `pysendfile <https://github.com/giampaolo/pysendfile>`__)
  system call for uploads.
- Uses epoll() / kqueue() / select() to handle concurrency asynchronously.
- ...But can optionally skip to a
  `multiple thread / process <http://pyftpdlib.readthedocs.io/en/latest/tutorial.html#changing-the-concurrency-model>`__
  model (as in: you'll be free to block or use slow filesystems).
- Portable: entirely written in pure Python; works with Python from **2.6** to
  **3.5** by using a single code base.
- Supports **FTPS** (`RFC-4217 <http://tools.ietf.org/html/rfc4217>`__),
  **IPv6** (`RFC-2428 <ftp://ftp.rfc-editor.org/in-notes/rfc2428.txt>`__),
  **Unicode** file names (`RFC-2640 <http://tools.ietf.org/html/rfc2640>`__),
  **MLSD/MLST** commands (`RFC-3659 <ftp://ftp.rfc-editor.org/in-notes/rfc3659.txt>`__).
- Support for virtual users and virtual filesystem.
- Extremely flexible system of "authorizers" able to manage both "virtual" and
  "real" users on on both
  `UNIX <http://pyftpdlib.readthedocs.io/en/latest/tutorial.html#unix-ftp-server>`__
  and
  `Windows <http://pyftpdlib.readthedocs.io/en/latest/tutorial.html#windows-ftp-server>`__.
- `Test coverage <https://github.com/giampaolo/pyftpdlib/blob/master/pyftpdlib/test/>`__
  close to 100%.

Performances
============

Despite being written in an interpreted language, pyftpdlib has transfer rates
comparable or superior to common UNIX FTP servers written in C. It usually tends
to scale better (see `benchmarks <https://pyftpdlib.readthedocs.io/en/latest/benchmarks.html>`__)
because whereas vsftpd and proftpd use multiple processes to
achieve concurrency, pyftpdlib only uses one (see `the C10K problem <http://www.kegel.com/c10k.html>`__).

pyftpdlib vs. proftpd 1.3.4
---------------------------

+-----------------------------------------+----------------+----------------+-------------+
| **benchmark type**                      | **pyftpdlib**  | **proftpd**    | **speedup** |
+-----------------------------------------+----------------+----------------+-------------+
| STOR (client -> server)                 |  585.90 MB/sec | 600.49 MB/sec  | -0.02x      |
+-----------------------------------------+----------------+----------------+-------------+
| RETR (server -> client)                 | 1652.72 MB/sec | 1524.05 MB/sec | **+0.08**   |
+-----------------------------------------+----------------+----------------+-------------+
| 300 concurrent clients (connect, login) |    0.19 secs   | 9.98 secs      | **+51x**    |
+-----------------------------------------+----------------+----------------+-------------+
| STOR (1 file with 300 idle clients)     |  585.59 MB/sec | 518.55 MB/sec  | **+0.1x**   |
+-----------------------------------------+----------------+----------------+-------------+
| RETR (1 file with 300 idle clients)     | 1497.58 MB/sec | 1478.19 MB/sec | 0x          |
+-----------------------------------------+----------------+----------------+-------------+
| 300 concurrent clients (RETR 10M file)  |    3.41 secs   | 3.60 secs      | **+0.05x**  |
+-----------------------------------------+----------------+----------------+-------------+
| 300 concurrent clients (STOR 10M file)  |    8.60 secs   | 11.56 secs     | **+0.3x**   |
+-----------------------------------------+----------------+----------------+-------------+
| 300 concurrent clients (QUIT)           |    0.03 secs   | 0.39 secs      | **+12x**    |
+-----------------------------------------+----------------+----------------+-------------+

pyftpdlib vs. vsftpd 2.3.5
--------------------------

+-----------------------------------------+----------------+----------------+-------------+
| **benchmark type**                      | **pyftpdlib**  | **vsftpd**     | **speedup** |
+-----------------------------------------+----------------+----------------+-------------+
| STOR (client -> server)                 |  585.90 MB/sec | 611.73 MB/sec  | -0.04x      |
+-----------------------------------------+----------------+----------------+-------------+
| RETR (server -> client)                 | 1652.72 MB/sec | 1512.92 MB/sec | **+0.09**   |
+-----------------------------------------+----------------+----------------+-------------+
| 300 concurrent clients (connect, login) |    0.19 secs   | 20.39 secs     | **+106x**   |
+-----------------------------------------+----------------+----------------+-------------+
| STOR (1 file with 300 idle clients)     |  585.59 MB/sec | 610.23 MB/sec  | -0.04x      |
+-----------------------------------------+----------------+----------------+-------------+
| RETR (1 file with 300 idle clients)     | 1497.58 MB/sec | 1493.01 MB/sec | 0x          |
+-----------------------------------------+----------------+----------------+-------------+
| 300 concurrent clients (RETR 10M file)  |    3.41 secs   | 3.67 secs      | **+0.07x**  |
+-----------------------------------------+----------------+----------------+-------------+
| 300 concurrent clients (STOR 10M file)  |    8.60 secs   | 9.82 secs      | **+0.07x**  |
+-----------------------------------------+----------------+----------------+-------------+
| 300 concurrent clients (QUIT)           |    0.03 secs   | 0.01 secs      | +0.14x      |
+-----------------------------------------+----------------+----------------+-------------+

For more benchmarks see `here <http://pyftpdlib.readthedocs.io/en/latest/benchmarks.html>`__.

Quick start
===========

.. code-block:: python

    >>> from pyftpdlib.authorizers import DummyAuthorizer
    >>> from pyftpdlib.handlers import FTPHandler
    >>> from pyftpdlib.servers import FTPServer
    >>>
    >>> authorizer = DummyAuthorizer()
    >>> authorizer.add_user("user", "12345", "/home/giampaolo", perm="elradfmwMT")
    >>> authorizer.add_anonymous("/home/nobody")
    >>>
    >>> handler = FTPHandler
    >>> handler.authorizer = authorizer
    >>>
    >>> server = FTPServer(("127.0.0.1", 21), handler)
    >>> server.serve_forever()
    [I 13-02-19 10:55:42] >>> starting FTP server on 127.0.0.1:21 <<<
    [I 13-02-19 10:55:42] poller: <class 'pyftpdlib.ioloop.Epoll'>
    [I 13-02-19 10:55:42] masquerade (NAT) address: None
    [I 13-02-19 10:55:42] passive ports: None
    [I 13-02-19 10:55:42] use sendfile(2): True
    [I 13-02-19 10:55:45] 127.0.0.1:34178-[] FTP session opened (connect)
    [I 13-02-19 10:55:48] 127.0.0.1:34178-[user] USER 'user' logged in.
    [I 13-02-19 10:56:27] 127.0.0.1:34179-[user] RETR /home/giampaolo/.vimrc completed=1 bytes=1700 seconds=0.001
    [I 13-02-19 10:56:39] 127.0.0.1:34179-[user] FTP session closed (disconnect).

`other code samples <http://pyftpdlib.readthedocs.io/en/latest/tutorial.html>`__

Donate
======

A lot of time and effort went into making pyftpdlib as it is right now.
If you feel pyftpdlib is useful to you or your business and want to support its
future development please consider `donating <https://gmpy.dev/donate>`__ me some money."""

[files."/usr/lib/python3.11/site-packages/python_ftp_server-1.3.17.dist-info"]
content = """INSTALLER
METADATA
RECORD
REQUESTED
top_level.txt
WHEEL"""
stat.isdir = true

[files."/usr/lib/python3.11/site-packages/python_ftp_server-1.3.17.dist-info/INSTALLER"]
content = """pip"""

[files."/usr/lib/python3.11/site-packages/python_ftp_server-1.3.17.dist-info/METADATA"]
content = """Metadata-Version: 2.1
Name: python-ftp-server
Version: 1.3.17
Summary: Command line FTP server tool designed for performance and ease of use.
Home-page: https://github.com/Red-Eyed/python_ftp_server
Author: Vadym Stupakov
Author-email: vadym.stupakov@gmail.com
Maintainer-email: vadym.stupakov@gmail.com
License: MIT
Keywords: ftp,cli,cmd,server
Platform: UNKNOWN
Classifier: Topic :: Communications :: File Sharing
Classifier: Topic :: Internet :: File Transfer Protocol (FTP)
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: requests (>=2.26)
Requires-Dist: pyftpdlib (>=1.5.6)
Requires-Dist: pyopenssl (>=21.0.0)
Requires-Dist: pysendfile (>=2.0.1) ; sys_platform != "win32"

# FTP server to transfer files between machines with zero configuration
## Usage
1. `python3 -m pip install python-ftp-server`
2. `python3 -m python_ftp_server -d "dirctory/to/share"`
will print:
```bash
Local address: ftp://<IP>:60000
User: <USER>
Password: <PASSWORD>
```
3. Copy and paste your `IP`, `USER`, `PASSWORD`, `PORT` into [FileZilla](https://filezilla-project.org/) (or any other FTP client):
![](https://github.com/Red-Eyed/python_ftp_server/raw/master/img.png)

"""

[files."/usr/lib/python3.11/site-packages/python_ftp_server-1.3.17.dist-info/RECORD"]
content = """python_ftp_server-1.3.17.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4
python_ftp_server-1.3.17.dist-info/METADATA,sha256=sqkMq4qxE_hOUvrKs-kjNb2RTklFS_U2mjC21RNrNJE,1186
python_ftp_server-1.3.17.dist-info/RECORD,,
python_ftp_server-1.3.17.dist-info/REQUESTED,sha256=47DEQpj8HBSa-_TImW-5JCeuQeRkm5NMpJWZG3hSuFU,0
python_ftp_server-1.3.17.dist-info/WHEEL,sha256=ewwEueio1C2XeHTvT17n8dZUJgOvyCWCt0WVNLClP9o,92
python_ftp_server-1.3.17.dist-info/top_level.txt,sha256=5IouKF_sn6V_QyCaa14dz9vwj5JA7CM9Wc8-w-G5Xds,18
python_ftp_server/__init__.py,sha256=rcywT693wT7YfEP6VaY5Y1GlPoDZUeDgFsw-4yPk8EE,117
python_ftp_server/__main__.py,sha256=1dv94LQ2yLxHgLmN5_0Ype4QIo9A3Wofwx63j0kXE5g,203
python_ftp_server/__pycache__/__init__.cpython-311.pyc,,
python_ftp_server/__pycache__/__main__.cpython-311.pyc,,
python_ftp_server/__pycache__/ftp_server.cpython-311.pyc,,
python_ftp_server/ftp_server.py,sha256=O8f6rpKi4B9owazGtQisAJaiX5h3YOepNcfwNHw-W-I,4602"""

[files."/usr/lib/python3.11/site-packages/python_ftp_server-1.3.17.dist-info/REQUESTED"]
content = """"""

[files."/usr/lib/python3.11/site-packages/python_ftp_server-1.3.17.dist-info/top_level.txt"]
content = """python_ftp_server"""

[files."/usr/lib/python3.11/site-packages/python_ftp_erver-1.3.17.dist-info/WHEEL"]
content = """Wheel-Version: 1.0
Generator: bdist_wheel (0.37.0)
Root-Is-Purelib: true
Tag: py3-none-any
"""