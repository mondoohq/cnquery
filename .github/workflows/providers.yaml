name: 'Build & Release Providers'

on:
  workflow_dispatch:
    inputs:
      build_all:
        description: 'Force build all providers'
        type: boolean
        required: false
        default: 'false'
      skip_publish:
        description: 'Skip publishing'
        type: boolean
        required: false
        default: 'false'


env:
  BUCKET: releases-us.mondoo.io

jobs:
  scoping:
    runs-on: self-hosted
    timeout-minutes: 10
    outputs:
      providers: ${{ steps.providers.outputs.providers }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect providers
        id: providers
        run: |
          providers=$(find providers -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)
          printf '%s\n' "${providers[@]}" | jq -R . | jq -sc . > providers.json
          echo "providers=$(cat providers.json)" >> $GITHUB_OUTPUT

          echo "Providers detected:"
          echo $providers

  provider-build:
    name: "${{ matrix.provider }}"
    runs-on: self-hosted
    timeout-minutes: 120
    needs: scoping
    strategy:
      max-parallel: 2
      matrix:
        provider: ${{ fromJSON(needs.scoping.outputs.providers) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        id: version
        run: |
          echo "Checking for changes in ${{ matrix.provider }}"
          cd providers/${{ matrix.provider }}
          REPO_VERSION=$(grep Version config/config.go | cut -f2 -d\")
          echo "REPO_VERSION=$REPO_VERSION" >> $GITHUB_ENV
          DIST_VERSION=$(curl -s https://releases-us.mondoo.io/providers/${{ matrix.provider }}/latest.json | jq -r .version)
          echo "DIST_VERSION=$DIST_VERSION" >> $GITHUB_ENV
          echo "Version in this repo:           $REPO_VERSION"
          echo "Version on releases.mondoo.com: $DIST_VERSION"

      - name: Abort if no change
        if: ${{ github.event.inputs.build_all == 'false' && steps.version.outputs.REPO_VERSION == steps.version.outputs.DIST_VERSION }}
        run: |
          echo "No changes to version detected for ${{ matrix.provider }}. Skipping build."
          exit 78

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.0"
          cache: false

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_RELEASE_SERVICE_ACCOUNT}}

      - name: 'Set up gcloud CLI'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Build dependencies'
        run: |
          make providers/proto
          go build -o lr ./providers-sdk/v1/lr/cli/main.go

      - name: 'Build Provider'
        run: |
          rm -rf ./dist
          scripts/provider_bundler.sh ${{ matrix.provider }}

      - name: 'Publish Provider'
        if: ${{ github.event.inputs.skip_publish == 'false' }}
        run: |
          for pkg in $(ls dist | cut -f1,2 -d_ | uniq); do
            echo "Publishing $pkg"
            PROVIDER=$(echo $pkg | cut -f1 -d_)
            VERSION=$REPO_VERSION

            echo "Publishing $pkg to gs://${BUCKET}/providers/${PROVIDER}/${VERSION}/"
            gsutil -m cp -c dist/${pkg}*.xz gs://${BUCKET}/providers/${PROVIDER}/${VERSION}/
            gsutil -m cp -c dist/${pkg}_SHA256SUMS gs://${BUCKET}/providers/${PROVIDER}/${VERSION}/
          done

      - name: 'Save Artifacts'
        if: ${{ github.event.inputs.skip_publish == 'false' }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.provider }}
          path: dist

  provider-index:
    needs: [provider-build, scoping]
    runs-on: self-hosted
    steps:
      - name: Trigger Reindex of releases.mondoo.com
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.RELEASR_ACTION_TOKEN }}
          repository: "mondoohq/releasr"
          event-type: reindex
          client-payload: '{ }'