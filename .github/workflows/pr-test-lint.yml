name: Code Test

## Only trigger tests if source is changing
on:
  push:
    paths:
      - '**.go'
      - '**.mod'
      - 'go.sum'

jobs:
  # Check if there is any dirty change for go mod tidy
  go-mod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=${{ env.golang-version }}"
          cache: false

      - name: Check go mod
        run: |
          go mod tidy
          git diff --exit-code go.mod

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=${{ env.golang-version }}"
          cache: false

      - run: make providers/build/core

      - name: Run protolint
        run: make test/lint/proto

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3.7.0
        with:
          version: latest

  go-test:
    runs-on: self-hosted
    timeout-minutes: 120
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=${{ env.golang-version }}"
          cache: false

      - name: 'Set up gcloud CLI'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Set provider env
        run: echo "PROVIDERS_PATH=${PWD}/.providers" >> $GITHUB_ENV
      - name: Display Provider PAth
        run: echo $PROVIDERS_PATH

      - name: Test cnquery
        run: make test/go/plain-ci

      - name: Test Providers
        run: make providers/test

      - uses: actions/upload-artifact@v4  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: report.xml
          
  event_file:
    name: "Store event file"
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: Event File
        path: ${{ github.event_path }}

  license-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Copywrite
        uses: hashicorp/setup-copywrite@v1.1.2
        with:
          version: v0.16.4

      - name: Check Header Compliance
        run: copywrite headers --plan
