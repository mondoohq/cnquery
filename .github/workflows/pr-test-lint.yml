name: Code Test

## Only trigger tests if source is changing
on:
  push:
    paths:
      - '**.go'
      - '**.mod'
      - 'go.sum'

jobs:
  # Check if there is any dirty change for go mod tidy
  go-mod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=${{ env.golang-version }}"
          cache: false

      - name: Check go mod
        run: |
          go mod tidy
          git diff --exit-code go.mod

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=${{ env.golang-version }}"
          cache: false

      - run: make providers/build/core

      - name: Run protolint
        run: make test/lint/proto

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3.7.0
        with:
          version: latest

  go-test:
    runs-on: self-hosted
    timeout-minutes: 120
    steps:         
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=${{ env.golang-version }}"
          cache: false

      # https://github.com/actions/cache/blob/main/examples.md#go---modules
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # TODO: remove once the dependabot PRs for cnquery go.mod work
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Updates to cnquery core go.mod?
        id: cnquerygomod
        if: ((github.event_name == 'push' && github.ref_name != 'main') || github.event_name == 'pull_request') && github.actor == 'dependabot[bot]'
        run: |
          echo "COUNT_GOMOD=$(git diff-tree --name-only -r origin/${{github.ref_name}} origin/main | grep -c -E "^go.mod$")" >> $GITHUB_OUTPUT

      - name: Fix providers go.mod for dependabot PRs
        if: github.actor == 'dependabot[bot]' && steps.cnquerygomod.outputs.COUNT_GOMOD == '1'
        run: |
          go run providers-sdk/v1/util/version/version.go mod-tidy providers/*/
          COUNT=$(git status --short | wc -l)
          if [ "$COUNT" -eq "0" ]; then
            echo "No changes to providers go.mod"
            exit 0
          fi
          git config --global user.email "tools@mondoo.com"
          git config --global user.name "Mondoo Tools"
          git add providers/
          git commit -m "ðŸ§¹ Update providers go.mod for dependabot PR ${{ github.event.number }}"
          git push
        shell: bash

      - name: Test cnquery
        run: make test/go/plain-ci
        
      - name: Test Providers
        run: make providers/test

      - uses: actions/upload-artifact@v3  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:                           
          name: test-results
          path: report.xml

  license-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Copywrite
        uses: hashicorp/setup-copywrite@v1.1.2
        with:
          version: v0.16.4

      - name: Check Header Compliance
        run: copywrite headers --plan
