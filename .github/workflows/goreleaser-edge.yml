name: goreleaser edge containers

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

env:
  REGISTRY: docker.io

jobs:
  goreleaser:
    permissions:
      # Add "contents" to write release
      contents: 'write'
      # Add "id-token" for google-github-actions/auth
      id-token: 'write'

    runs-on: self-hosted
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # Make sure no releases are created in Github
      # Make sure only linux binaries and docker files are built
      - name: Prepare .goreleaser-edge.yml
        run: |
          cp .goreleaser.yml .goreleaser-edge.yml
          yq -i ".release.disable = true" .goreleaser-edge.yml
          yq -i ".changelog.skip = true" .goreleaser-edge.yml
          yq -i "del(.nfpms)" .goreleaser.yml
          yq -i 'del(.builds[] | select(.id == "macos"))' .goreleaser.yml
          yq -i 'del(.builds[] | select(.id == "windows"))' .goreleaser.yml
          yq -i "del(.archives)" .goreleaser.yml
      - name: Locally tag the current commit
        run: git tag $(make version)
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release -f .goreleaser-edge.yml --rm-dist --timeout 120m
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NFPM_DEFAULT_RPM_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
